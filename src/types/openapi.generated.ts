/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/locators/v1/atms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve ATM Locations
         * @description This API retrieves the up-to-date list of UnionBank ATM Locations.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ATMs"];
                    };
                };
                /** @description Could not locate ATMs */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ATMsErrors"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ATMsErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/locators/v1/branches": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Branch Locations
         * @description This API retrieves the up-to-date list of UnionBan branches.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Branches"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Could not locate branches */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BranchesErrors"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BranchesErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/forex/v1/rates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve foreign exchange rates
         * @description This API retrieves the current currencies and exchange rate being used by UnionBank. This API serves as a reference only.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Forex"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ForexErrors"];
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ForexErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/oauth2/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Request Partner Access Token
         * @description This API generates an access token to authenticate a UnionBank partner account.
         *
         *     This endpoint allows requesting an access token following one of the flows below:
         *     - Authorization Code (exchange code for access token)
         *     - Client Credentials (2-legged, there isn't resource owner information)
         *     - Resource Owner Password Credentials (2-legged, client provides resource owner name and password)
         *     - Refresh Token (exchange refresh token for a new access code)
         *
         *     The table below indicates the required parameters for each specific grant_type options.
         *     Empty cells indicate a parameter is ignored for that specific grant type.
         *
         *     Client authentication:
         *     - Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post
         *       their client_id and client_secret information as a formData parameter.
         *     - Public clients should send their client_id as formData parameter.
         *
         *     | grant_type           | code       | password    |
         *     |----------------------|------------|-------------|
         *     | client_id            | required*  | required*   |
         *     | username             |            | required    |
         *     | password             |            | required    |
         *     | scope                |            | required    |
         *
         *     The implicit grant requests, see /oauth2/authorize.
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: Record<string, never>;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": Record<string, never>;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/x-www-form-urlencoded": {
                        /**
                         * @description Type of grant
                         * @enum {string}
                         */
                        grant_type: "password";
                        /** @description Application client ID, can be provided in formData or using HTTP Basic Authentication */
                        client_id?: string;
                        /** @description Resource owner username */
                        username?: string;
                        /** @description Resource owner password */
                        password?: string;
                        /** @description Scope being requested */
                        scope?: string;
                    };
                };
            };
            responses: {
                /** @description json document containing token, etc. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccessTokenResponse"];
                    };
                };
                /** @description json document that may contain additional details about the failure */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Processed */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccessTokenError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/v1/oauth2/authorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Generate Authorization Code for Access Token
         * @description This API generates an authorization code for the online access token.
         */
        get: {
            parameters: {
                query: {
                    /** @description to indicate that the request will return an authorization code */
                    response_type: "code";
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    client_id: string;
                    /** @description the page where the authorization code and other response parameters will be posted */
                    redirect_uri: string;
                    /** @description to indicate which APIs can utilize this specific token. See the Postman collection page for the list of scopes */
                    scope: string;
                    /** @description using "single" will generate a token with 3600s validity and "linking" will generate a token with 1 year validity */
                    type: "single" | "linking";
                    partnerId: string;
                    partnerRefId?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description An HTML form for authentication or authorization of this request. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Redirect to the clients redirect_uri containing one of the following
                 *     - **authorization code** for Authorization code grant
                 *     - **access token** for Implicity grant
                 *     - **error** in case of errors, such as the user has denied the request
                 *      */
                302: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/v1/oauth2/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Request Online Access Token
         * @description This API generates an access token to authenticate and link a UnionBank customer account.
         *
         *     This endpoint allows requesting an access token following one of the flows below:
         *     - Authorization Code (exchange code for access token)
         *     - This endpoint allows requesting an access token by exchanging an Authorization Code to generate an access token
         *
         *     The table below indicates the required parameters for each specific grant_type options.
         *     Empty cells indicate a parameter is ignored for that specific grant type.
         *
         *     Client authentication:
         *     - Confidential clients should authenticate using HTTP Basic Authentication. Alternatively, they may post
         *       their client_id and client_secret information as a formData parameter.
         *     - Public clients should send their client_id as formData parameter.
         *
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/x-www-form-urlencoded": {
                        /**
                         * @description Type of grant
                         * @enum {string}
                         */
                        grant_type: "authorization_code";
                        /** @description Application client ID, can be provided in formData or using HTTP Basic Authentication */
                        client_id: string;
                        /** @description Authorization code provided by the /oauth2/authorize endpoint */
                        code: string;
                        /** @description required only if the redirect_uri parameter was included in the authorization request /oauth2/authorize; their values MUST be identical. */
                        redirect_uri: string;
                    };
                };
            };
            responses: {
                /** @description json document containing token, etc. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccessTokenResponse"];
                    };
                };
                /** @description json document that may contain additional details about the failure */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/merchants/v5/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Receive payment from UnionBank Account
         * @description This API accepts payment from a UnionBank account holder. The money received will be transferred directly to a partner who is a UnionBank Corporate account holder and a UnionBank biller. This API accepts and verifies the references defined by the partner.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag//UnionBank-Customer-Authentication-2.0.0) */
                    authorization: string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            /** @description Payment object that includes payment details */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PaymentRequestv5"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentResponsev5"];
                    };
                };
                /** @description 400 Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentErrorsv4"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/merchants/v5/payments/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check merchant payment status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag//UnionBank-Customer-Authentication-2.0.0) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MerchantVerificationv4"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/merchants/v5/payments/otp/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Request OTP
         * @description This API requests for OTP for every Merchant Payment API transaction.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag//UnionBank-Customer-Authentication-2.0.0) */
                    authorization: string;
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MerchantOTPV5"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/transfers/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer funds to UnionBank account via Partners
         * @description This API transfers funds from a Partner's UnionBank account to another UnionBank account holder.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            /** @description Payment object that includes payment details */
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TransferRequestv3"];
                };
            };
            responses: {
                /** @description 201 Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransferResponsev3"];
                    };
                };
                /** @description 403 Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransferErrorv3"];
                    };
                };
                /** @description 500 Bad Request */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransferError500v3"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/transfers/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check intra-bank funds transfer via partner status */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransferVerificationv3"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransferErrorv3"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/casa/v1/rates/{code}/currency/{currency}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve savings account interest rates
         * @description This API retrieves the savings account interest rate of UnionBank. This API serves as a reference only.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path: {
                    /** @description Product code of the savings account */
                    code: string;
                    /** @description Currency code of the savings account */
                    currency: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CasaRatesResponse"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CasaRatesError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/td/v1/rates/{code}/currency/{currency}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve time deposit interest rates
         * @description This API retrieves the time deposit interest rate of UnionBank. This API serves as a reference only.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path: {
                    /** @description Product code of the savings account */
                    code: string;
                    /** @description Currency code of the savings account */
                    currency: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TimeDepositRatesResponse"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TimeDepositRatesError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/billers/v1/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of UnionBank billers
         * @description This API retrieves the list of UnionBank billers.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Billers"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BillersErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/billers/v1/{id}/references": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of UnionBank biller references
         * @description This API retrieves the list of references required by a UnionBank biller.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Biller id */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BillersRef"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BillersErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auto/v1/loans/compute": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Generate quote for auto loan plan
         * @description This API generates amortization projections for auto loans based on a user-specified infomation.
         */
        get: {
            parameters: {
                query?: {
                    /** @description Number of months */
                    term?: number;
                    /** @description Selling price */
                    price?: number;
                    /** @description Downpayment in percentage (min 10, max 80) */
                    dp?: number;
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AutoLoanResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auto/v1/vehicles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of vehicles
         * @description This API retrieves the list of vehicles that can be availed using UnionBank Auto Loan.
         */
        get: {
            parameters: {
                query?: {
                    /** @description Brand code */
                    brand?: string;
                    /** @description Selling retail price (implied 2 decimal places) */
                    ceiling?: number;
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AutoVehicles"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auto/v1/brands": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of car brands
         * @description This API retrieves the list of vehicles' brands that can be availed using UnionBank Auto Loan.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AutoBrands"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/housing/v1/loans/compute": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Generate quote for housing loan plan
         * @description This API generates amortization projections for housing loans based on a user-specified infomation.
         */
        get: {
            parameters: {
                query: {
                    /** @description Number of years (min 1, max 20) */
                    term: number;
                    /** @description Selling price */
                    price: number;
                    /** @description Downpayment in percentage (min 10, max 80) */
                    dp: number;
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["HousingLoanResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accounts/v1/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get account details
         * @description This API checks the status of a UnionBank account.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccountInformationResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/v1/accounts/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Get customer bank account details
         * @description This API retrieves online banking account information to identify the user.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OnlineAccountInformation"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OnlineAccountInformationResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v2/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Pay bills online via Partners
         * @description This API pays a UnionBank biller nominated by a UnionBank corporate account holder.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            /** @description Payment object that includes payment details */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["PayBillsViaPartnerRequest"];
                };
            };
            responses: {
                /** @description 201 Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PayBillsViaPartnerResponse"];
                    };
                };
                /** @description 403 Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PayBillsViaPartnerErrors"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v2/payments/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check bills payment via Partners status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymentVerification"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sandbox/v1/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create sandbox bank account
         * @description This API creates a sandbox bank account that can be used for testing. This is a dummy UnionBank customer bank account.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["SandboxRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SandboxResponse"];
                    };
                };
                /** @description 400 Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SandboxErrors"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards/applications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transmit UnionBank credit card application form
         * @description This API transmits the UnionBank credit card application form to the UnionBank cards team for assessment and processing.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CreditCardAppRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardAppResponse"];
                    };
                };
                /** @description 400 Bad Request Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardAppErrors"];
                    };
                };
                /** @description 500 Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardAppErrors"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards/libraries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve valid credit card application form values
         * @description This API retrieves the list of valid credit card application form values.
         */
        get: {
            parameters: {
                query: {
                    type: "INDUSTRY" | "EMPSTATUS" | "EMPORGTYPE" | "BANKLIST" | "OCCUPATIONGRP";
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LibraryResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/debit/v1/cards/getgo/applications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transmit GetGo Debit Card application form
         * @description This API transmits the Getgo debit card application form to the UnionBank cards team for assessment and processing.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DebitGetGoAppRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DebitGetGoAppResponse"];
                    };
                };
                /** @description 400 Bad Request Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DebitGetGoAppErrors"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accounts/v2/balances/<REPLACE_ACCOUNT_NUMBER>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Account Balance
         * @description This API retrieves the available balance of a sandbox bank account.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                };
                path: {
                    accountNumber: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccountBalances"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccountBalancesErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards/statements/summary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve full statement summary
         * @description This API retrieves the full statement summary of a UnionBank credit card holder.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryStatementSummary"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards/statements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve statement transactions
         * @description This API retrieves the list of transactions of a UnionBank credit card holder.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryStatements"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards/unbilled": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve unbilled transactions
         * @description This API retrieves the list of unbilled transactions of a UnionBank credit card holder.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryUnbilled"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards/balances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve available balance
         * @description This API retrieves the available balance of a UnionBank credit card holder.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryBalances"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve availed cards
         * @description This API retrieves the list of availed cards of a UnionBank credit card holder.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryCards"];
                    };
                };
                /** @description 404 Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardInquiryErrors"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/online/v2/instapay/transfers/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer Funds to non-UnionBank account through Instapay
         * @description This API transfers funds up to PHP 50,000 from a UnionBank account to a non-UnionBank account holder through Instapay.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Customer-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OnlineInstapayRequest"];
                };
            };
            responses: {
                /** @description 201 Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OnlineInstapayResponse"];
                    };
                };
                /** @description 400 Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OnlineInstapayError"];
                    };
                };
                /** @description 500 Bad Request */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OnlineInstapayError500"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/online/v2/instapay/transfers/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Instapay Inter-Bank Funds Transfer status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InstapayVerification"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/online/v2/instapay/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Customer Instapay Receiving Banks
         * @description This API retrieves the list of participating Instapay institutions that can receive payments.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OnlineInstapayBanks"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/online/v2/instapay/libraries?type=<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Customer Instapay Libraries
         * @description | **Library types** |
         *     |---------------------|
         *     | purpose |
         *
         */
        get: {
            parameters: {
                query: {
                    type: "purpose";
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OnlineInstapayLibraries"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/instapay/transfers/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer Funds to non-UnionBank account through Instapay via Partners
         * @description This API transfers funds up to PHP 50,000 from a Partner's UnionBank corporate account to a non-UnionBank account holder through Instapay.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["InstapayRequest3"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InstapayResponse3"];
                    };
                };
                /** @description 400 ERROR */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InstapayResponseTF3"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/instapay/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Partner Instapay Receiving Banks
         * @description Validation for receiving banks is turned off for the sandbox environment
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InstapayBankResponse3"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/instapay/libraries?type=<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Partner Instapay Libraries
         * @description
         *     | **Library types** |
         *     |---------------------|
         *     | purpose |
         *
         */
        get: {
            parameters: {
                query: {
                    /** @description Indicated library to be queried */
                    type: string;
                };
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InstapayLibraryResponse3"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/instapay/transfers/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Instapay Inter-Bank Funds Transfer via Partner status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InstapayVerification"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/online/v2/pesonet/transfers/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer Funds to non-UnionBank account through PESOnet
         * @description This API transfers funds by batch from a UnionBank account to a non-UnionBank account holder through PESOnet.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Customer-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OutwardRequest"];
                };
            };
            responses: {
                /** @description 201 Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OutwardResponse"];
                    };
                };
                /** @description 400 Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OutwardError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/online/v2/pesonet/transfers/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check PESOnet Inter-Bank Funds Transfer Status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PesonetVerification"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/online/v2/pesonet/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Customer PESOnet Receiving Banks
         * @description This API retrieves the list of participating PESOnet institutions that can receive payments.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["RetrieveResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v2/paymaya/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Top Up Paymaya via Partners
         * @description This API tops up a Paymaya account from a UnionBank Corporate Account.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PaymayaRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymayaResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PaymayaError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v2/coinsph/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Top Up CoinsPH via Partners
         * @description This API tops up a Coins.PH account from a UnionBank Corporate Account.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CoinsPHRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CoinsPHResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CoinsPHError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/v1/accounts/unlink": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Unlink Account
         * @description This API unlinks the UnionBank customer account.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UnlinkAccountRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnlinkAccountResponse"];
                    };
                };
                /** @description 401 Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UnlinkAccountErrors"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/pesonet/transfers/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer Funds to non-UnionBank account through PESOnet via Partners
         * @description This API transfers funds by batch from a Partner's UnionBank corporate account to a non-UnionBank account holder through PESOnet.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["SingleRequestv3"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["SingleResponsev3"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PesonetPartnerError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/pesonet/transfers/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Single PESOnet Inter-Bank Funds Transfer via Partners status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PesonetVerificationv3"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/pesonet/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Partner PESOnet Receiving Banks
         * @description This API retrieves the list of participating PESOnet institutions that can receive payments.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["RetrieveResponsev3"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/pesonet/transactions/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Update Transactions
         * @description
         *     | **Parameter** | **Description** |
         *     |---------------|-----------------|
         *     | success |  Credited to the customer's account  |
         *     | invalid | Beneficiary account number is invalid for any reason (i.e. incorrect account number, dormant, closed) |
         *     | blocked | Account specified is blocked, prohibiting posting of transactions against it. |
         *     | unmatch | Account name of the Beneficiary Account does not match the name of the Beneficiary indicated in the Payment Item. |
         *     | currency  | Currency of the Beneficiary Account does no match the currency of the Payment Item  |
         *     | limit | Crediting the Beneficiary Account with the amount indicated in the Payment Item will cause the Beneficiary Account's Balance limit to be exceeded.  |
         *     | recall  | There was a recall instruction from the Ordering Financial Institution  |
         *     | notallowed  | Product/Account is not allowed to be funded viaPESONet. |
         *     | risk  | The Payment order is rejected due to risk management policy and the final disposition is to 'Fail' the transaction. |
         *     | regulatory  | Payment Item could not yet be credited to the Beneficiary Account for Regulatory Reasons. |
         *     | rfi | Payment Item could not yet be credited to the Beneficiary Account for processes consistent with the RFI's Internal Risk Management Policy.  |
         *     | onhold  | Processed/Funds on-hold/frozen  |
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TransactionUpdateRequestv3"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionUpdateResponsev3"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PesonetPartnerError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sandbox/v1/accounts/deposit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Replenish sandbox bank account balance
         * @description This API replenishes the balance of a sandbox bank account.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: components["requestBodies"]["DepositRequest"];
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DepositResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DepositError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/sb/sandbox/v1/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update sandbox bank account balance
         * @description This API replenishes the balance of a sandbox bank account.
         */
        put: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: components["requestBodies"]["DepositRequest"];
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DepositResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DepositError"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v2/loans/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer Loan Payment
         * @description This API requests for UnionBank Loan payment.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LoanRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LoanResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v2/loans/payments/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Loan Payment Status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LoanVerification"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/portal/online/accounts/v1/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Customer Account Transaction History
         * @description This API retrieves the transaction history of a UnionBank customer account based on the user-specified information.
         */
        get: {
            parameters: {
                query?: {
                    /** @description starting date of transaction history */
                    fromDate?: string;
                    /** @description end date of transaction history */
                    toDate?: string;
                    /** @description tranType of transaction history. C for Credit. D for Debit */
                    tranType?: string;
                    /** @description number of search return of transaction history */
                    limit?: string;
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Customer-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccountHistoryResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/portal/accounts/v1/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Partner Account Transaction History
         * @description This API retrieves the transaction history of a UnionBank corporate account based on the user-specified information.
         */
        get: {
            parameters: {
                query?: {
                    /** @description starting date of transaction history */
                    fromDate?: string;
                    /** @description end date of transaction history */
                    toDate?: string;
                    /** @description tranType of transaction history. C for Credit. D for Debit */
                    tranType?: string;
                    /** @description number of search return of transaction history */
                    limit?: string;
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccountHistoryResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/debit/v1/cards/promos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of debit card promos
         * @description This API retreieves the list of current UnionBank debit card promotions.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DebitCardPromos"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/debit/v1/cards/discounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of debit card discounts
         * @description This API retreieves the list of current UnionBank debit card discounts.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DebitCardDiscount"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards/promos": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of credit card promos
         * @description This API retreieves the list of current UnionBank credit card promotions.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardPromos"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/credit/v1/cards/discounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of credit card discounts
         * @description This API retreieves the list of current UnionBank credit card discounts.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreditCardDiscount"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/weatherph/v1/forecasts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Forecasted Weather Information
         * @description This API retrieves forecasted weather information.
         */
        get: {
            parameters: {
                query: {
                    latitude: string;
                    longitude: string;
                    fields?: "timestamp" | "temperature" | "wind_speed" | "solar_radiation" | "mean_sea_level_pressure" | "rain" | "dewpoint" | "wind_gust" | "wind_direction" | "heat_index" | "total_cloud_cover" | "rain_probability";
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ForecastResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/otp/v1/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate One-Time Password
         * @description This API generates a one-time password to be sent to the nominated number.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OTPSendRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OTPSendResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/otp/v1/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Verify One-Time Password
         * @description This API verifies the one-time password sent to the nominated number.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OTPVerifyRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OTPVerifyResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/eon/transfers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Top up EON Prepaid Account using UnionBank Corporate Account
         * @description This debits a UnionBank corporate account and credits an EON Prepaid Wallet. The latest version of this API (v3) is coming soon in the Dev Portal. It is currently available for testing in UAT and PROD only.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["TopUpRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TopUpResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/eon/transfers/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Status of EON Prepaid Account Top Up using Corporate Account
         * @description This API checks the status of a UnionBank Corporate account top-up to an EON Prepaid Wallet transaction processed through APIs with the use of a reference number. The latest version of this API (v3) is coming soon in the Dev Portal. It is currently available for testing in UAT and PROD only.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONVerification"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ubp/v4/eon/transfers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Top up EON Prepaid Account using a UnionBank Account
         * @description This debits a UnionBank corporate or retail account and credits an EON Prepaid Wallet.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) or [Customer Authentication API](https://developer.unionbankph.com/reference#tag//UnionBank-Partner-Authentication-2.0.0) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["EONTopUpRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONTopUpResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ubp/v4/eon/transfers/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check EON Prepaid Account Top Up status
         * @description This API checks the status of a UnionBank account top-up to an EON Prepaid Wallet transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONVerificationResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/signatures/v1/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Verify Response Signature
         * @description This API verifies if the transaction made through API is valid.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["VerifySignatureRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["VerifySignatureResponse"];
                    };
                };
                /** @description 400 Unauthorized */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["VerifySignatureError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/accounts/overdraft": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Overdraft Account */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OverdraftAccountRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OverdraftAccountResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/sb/partners/v1/accounts/overdraft": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check Overdraft Account Status */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OverdraftAccountStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/accounts/overdraft/libraries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Overdraft Account Creation Libraries
         * @description | **Library types** |
         *     |---------------------|
         *     | city |
         *     | province |
         *     | country |
         *     | occupation |
         *     | segmentclass |
         *     | industrytype |
         *     | employmentstatus |
         *     | civilstatus |
         *     | nationality |
         *     | idissuedorg |
         *     | entitytype |
         *     | relationshipcategory |
         *     | relationshiptype |
         *     | currency |
         *     | fundsource |
         *     | worknature |
         *     | guardiancode |
         *     | dealerdev |
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description number of search return of overdraft account libraries */
                    limit?: string;
                    /** @description page number return of overdraft account libraries */
                    page?: string;
                    /** @description type of overdraft account libraries */
                    type?: string;
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OverdraftAccountStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/loans/overdraft/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer ODA Loan Payment
         * @description This API sends payments to settle outstanding balance of overdraft accounts
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LoanPaymentRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LoanPaymentResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/loans/overdraft/payments/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check ODA Loan Payment status
         * @description This API verifies the status of the loan payment transaction requests from UBP account holders.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AvailmentVerification"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/loans/overdraft/availments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Process ODA Loan Availment */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["AvailmentRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AvailmentResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/loans/overdraft/availments/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check ODA loan availment status
         * @description This API verifies the status of the loan availment transaction requests from UBP account holders.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AvailmentVerification"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionError"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/forex/v1/transfer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Foreign Exchange */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ForexRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ForexResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/giftaway/orders/resend": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Resend GiftAway eGift
         * @description This API resends the eGift by providing a reference number.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OrderResendForm"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OrderResendResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/giftaway/orders/<REPLACE_REFERENCENO>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check GiftAway eGift Details
         * @description This API verifies if the transaction made through API is valid.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OroderRefNumResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/giftaway/orders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate GiftAway eGift
         * @description This API generates an eGift based on the user-supplied information.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["OrderForm"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OrderFormResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/giftaway/merchants/<REPLACE_MERCHANTID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Merchant Info
         * @description This API retrieves details regarding a specific GiftAway merchant. Details include location, contact number, available denominations, and other relevant information.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MerchantIdResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/giftaway/merchants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Merchants
         * @description This API retrieves the up-to-date list of GiftAway merchants.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MerchantsResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dtone/v1/libraries/countries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve List of DTOne Supported Countries */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DtoneLibraryResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dtone/v1/libraries/REPLACE_COUNTRY_ID/operators": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of DTOne Supported Operators for Country
         * @description
         *     | **country** | **countryId** |
         *     |-------------|-------------|
         *     | Philippines | 840 |
         *     | India  |  766 |
         *     | Singapore  |  863 |
         *
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LibraryOperators"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dtone/v1/libraries/REPLACE_OPERATOR_ID/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of DTOne Products for Operator
         * @description
         *     | **operatorId** | **operator** |
         *     |-------------|-------------|
         *     | 2954 |  M1 Singapore Bundles |
         *     | 246  |  Globe Telecom Philippines |
         *     | 570  |  Smart Philippines |
         *     | 368  |  MTNL India |
         *
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["OperatorProducts"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dtone-topup/v1/transfers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Send DT One Airtime Credits */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DtoneTopUp"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DtoneTopUpResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dtone-topup/v1/transfers/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check DT One Airtime Credits Purchase status
         * @description This API is under development.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/firstcircle/business/requirements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve list of business information requirements */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BusinessRequirements"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/advance/libraries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Library */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AdvanceLendingResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/advance/loan": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Process salary loan request
         * @description This API processes the submission of salary loan request to Advance Tech Lending. (This API is under development.)
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/advance/loan/check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Check salary loan request status
         * @description This API checks the status of a loan request with the use of a reference number. (This API is under development.)
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/dapsx/process": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Pay bills via DA5
         * @description This API processes bills payment requests to Direct Agent 5’s accredited billers.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DA5PayBillsRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5PayBillsResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/dapsx/billers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of DA5’s billers
         * @description This API returns the list of Direct Agent 5’s accredited billers
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5Biller"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v1/dapsx/inquiry/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check bills payment status via Direct Agent 5 */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5CheckBills"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/insular/v1/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Purchase InLife digital insurance
         * @description This API forwards the paid order to InLife for activation.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["InsuranceSingleRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InsuranceSingleResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/insular/v1/single/plans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Retrieve InLife digital insurance Product Lis
         * @description This API displays the list of active InLife digital insurance.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["InsurancePlanRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InsurancePlanResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/insular/v1/single/plans/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Retrieve InLife digital insurance Product Details
         * @description This API displays details of active InLife digital insurance.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["InsurancePlanSearchRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InsurancePlanSearchResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/insular/v1/single/orders/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Cancel InLife digital insurance order
         * @description This API forwards the cancelled order to InLife.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the Account Token of the response in the Create Overdraft Account */
                    "x-oda-account-token": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["InsuranceCancelRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InsuranceCancelResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/insular/v1/single/<REPLACE_SENDERREFID>?status=<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check InLife digital insurance order status
         * @description This API checks status of order.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InsuranceGetResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/getgo/payments/reference/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate Reference Number
         * @description This API is a dummy API for use in the sandbox environment meant to mimic the reference number generated from an end user’s mobile application wanting to top up
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["GetgoTopUpViaPartnersv3Request"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetgoTopUpViaPartnersv3Response"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/getgo/payments/details?referenceNumber=<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Transaction Details from Reference Number
         * @description This API retrieves the details of a top up request from the reference number
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetgoTopUpViaPartnersv3Details"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/getgo/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Top Up Account via Transaction ID
         * @description This API tops up a GetGo Prepaid account using a transaction ID generated from the Get Transaction Details from Reference Number endpoint
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["GetgoTopUpViaPartnersv3SingleRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetgoTopUpViaPartnersv3SingleResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/getgo/payments/single/<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Top Up Transaction Status
         * @description This API checks the status of a transaction processed through APIs with the use of the sender reference ID
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetgoTopUpViaPartnersv3CheckStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/axinan/v1/products": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Igloo Digital Insurance Product List
         * @description This API returns all the digital insurance products offered by Igloo.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IglooGetAllProducts"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/axinan/v1/products/<PRODUCT_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Igloo Digital Insurance Product’s Plan List
         * @description This API returns the plans under a specific digital insurance product offered by Igloo.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IglooGetAllProducts"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/axinan/v1/plans/<PLAN_ID>/addons": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Igloo Digital Insurance Plan Add-ons
         * @description This API returns the possible plan add-ons on the chosen product.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IglooGetAddOns"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/axinan/v1/plans/premium": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Compute Final Igloo Digital Insurance Premium
         * @description This API returns the price of the customized policy by taking into consideration the selected plan and add-ons as well as the number of beneficiaries.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["IglooPremiumRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IglooPremiumResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/axinan/v1/policies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Purchase Igloo Digital Insurance Policy
         * @description This API forwards the digital insurance policy order to Igloo.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["IglooPurchasePolicyRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IglooPurchasePolicyResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/axinan/v1/policies/<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Igloo Digital Insurance Policy Status
         * @description This API retrieved the status of the forwarded digital insurance policy order to Igloo.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IglooCheckStatusPolicyResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/dragonpay/v3/payouts/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate Dragonpay Cash Payout Information
         * @description This API sends information regarding a cash payout voucher request.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CashPayoutbyDragonpayRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CashPayoutbyDragonpayResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/dragonpay/v3/payouts/single/<REPLACE_THIS_VALUE>/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Cancel Dragonpay Cash Payout
         * @description This API cancels the unclaimed cash payout voucher request.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DragonpayVoidRespv3"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/dragonpay/v3/payouts/single/<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Dragonpay Cash Payout Status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DragonpayGetTransactionv3"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/dragonpay/v3/payouts/counters?type=<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Cash Payout by Dragonpay Libraries
         * @description This API  retrieves the list of libraries required for sending a payout information, for example the participating Dragonpay counters.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    type: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DragonpayGetTransactionv3"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/da5/v1/fees/<AMOUNT>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Direct Agent 5 Cash Payout Fee
         * @description This API  retrieves the corresponding fee for the intended payout amount.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5FeesResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5FeesErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/da5/v1/payouts/send": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate Direct Agent 5 Cash Payout Information
         * @description This API sends information regarding a cash payout voucher request.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DA5SendRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5SendResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/da5/v1/payouts/send/<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Direct Agent 5 Cash Payout Status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5GetTransactionResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5GetTransactionErrorResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/da5/v1/payouts/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Cancel Direct Agent 5 Cash Payout
         * @description This API cancels the unclaimed cash payout voucher request.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DA5CancelRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DA5CancelResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/cashin/v1/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Process UnionBank Cash In request
         * @description This API processes cash in request to a Unionbank account.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PartnerCashInRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PartnerCashInResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/cashin/v1/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check UnionBank Cash In Request Status
         * @description This API checks the status of a transaction processed through APIs with the use of the sender reference ID.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PartnerCashInGetResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/multisys/v1/billers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of Multisys billers
         * @description This API returns the list of all supported Multisys billers.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MultisysBillerResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/multisys/v1/billers/<REPLACE_THIS_VALUE>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve details of Multisys biller
         * @description This API returns the details of the selected Multisys biller.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MultisysBillerCodeResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/multisys/v1/billers/<REPLACE_THIS_VALUE>/references": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve list of Multisys biller references
         * @description This API returns the reference for the selected Multisys biller.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MultisysBillerReferenceResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/multisys/v1/payments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Send payment to Multisys billers
         * @description This API processes bills payment requests to selected Multisys biller from your UnionBank corporate account.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["MultisysBillerPaymentRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MultisysBillerPaymentResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/multisys/v1/payments/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check bills payment status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MultisysBillerCheckStatusResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ubp/v1/transfers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer funds to UnionBank account
         * @description This API processes transfer of funds between the Partner's UnionBank corporate account to other UnionBank accounts.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["IntrabankRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IntrabankResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IntrabankError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ubp/v1/transfers/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check intra-bank funds transfer via partner status
         * @description This API checks the status of a transaction processed through APIs with the use of the unique sender reference ID.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["IntrabankCheckStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Pay bills online via Partners
         * @description This API pays a UnionBank biller nominated by a UnionBank corporate account holder.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: components["requestBodies"]["BillsPaymentRequest"];
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BillsPaymentResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/v3/payments/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check bills payment via Partners status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BillsPaymentStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/v3/payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Pay bills online
         * @description This API pays a UnionBank biller nominated by a UnionBank account holder.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Customer Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: components["requestBodies"]["BillsPaymentRequest"];
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BillsPaymentResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customers/v3/payments/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check bills payment status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BillsPaymentStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/payout/v1/single/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Request Cash Payout
         * @description This API sends information regarding a single cash payout request. The processorId parameter shall determine the remittance partner.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CashPayoutRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CashPayoutResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/payout/v1/single/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Cash Payout Status
         * @description This API checks the status of a transaction processed through APIs with the use of a reference number.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CashPayoutCheckStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/payout/v1/single/<REPLACE_SENDER_REFERENCE_ID>/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Cancel Cash Payout
         * @description This API cancels the unclaimed cash payout voucher request.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CashPayoutCancel"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/payout/v1/single/transaction/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Cash Payout Transaction History
         * @description This API returns the list of the previous cash payout transactions.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CashPayoutHistory"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/payout/v1/single/process": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Process Cash Payout
         * @description This API processes the submitted cash payout voucher request.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CashPayoutProcessRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CashPayoutProcessResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dao/v1/savings/accounts/applications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Application for New Customer */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DAOApplicationRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DAOApplicationResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dao/v1/savings/accounts/applications/with-cif": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Application for Existing Customer */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DAOApplicationCIFRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DAOApplicationCIFResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dao/v1/savings/accounts/applications/<REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Application Details */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type": string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Partner Reference ID */
                    partnerRefId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DAOStatus"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dao/v1/savings/accounts/applications/update": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Application Details */
        put: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DAOUpdateRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DAOUpdateResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dao/v1/savings/accounts/applications/submit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Submit Application to Create New Account */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Partner Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DAOSubmitRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DAOSubmitResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ubp/v1/account/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Account Transaction History by UnionBank
         * @description This API retrieves the transaction history of a UnionBank customer account based on the user-specified information.
         */
        get: {
            parameters: {
                query?: {
                    /** @description number of search return of transaction history */
                    limit?: string;
                    /** @description starting date of transaction history */
                    fromDate?: string;
                    /** @description end date of transaction history */
                    toDate?: string;
                    /** @description page of transaction history */
                    page?: string;
                    /** @description runningBalance of transaction history */
                    runningBalance?: string;
                    /** @description lastTranId of transaction history */
                    lastTranId?: string;
                    /** @description lastSerialNo of transaction history */
                    lastSerialNo?: string;
                    /** @description lastPostedDate of transaction history */
                    lastPostedDate?: string;
                };
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                    /** @description the id generated by UnionBank for a specific partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccountTransactionHistoryUnionbankResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ubp/v1/accounts/balance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get account balance
         * @description This API checks the balance of a UnionBank account.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description the generated access token by UnionBank Online Login API */
                    authorization: string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["AccountBalanceUnionbankResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/cards/accounts/virtual": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Virtual Account with a linked Virtual Card (no UBP KYC)
         * @description Only use this endpoint if Credit Investigation (CI) and KYC is not reliant on UBP.
         *
         *     The linked Virtual Card will require activation using the Activate Virtual Card endpoint
         *
         *     apiCardNumber keeps refreshing each time you call this API in UAT. This is expected; decryption will lead to the same value.
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["VirtualCardRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["VirtualCardResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v2/cards/activation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Activate Virtual Card
         * @description Use this API after using the Create Virtual Account with a linked Virtual Card (no UBP KYC) endpoint.
         *     - `This API is only for activating cards that have statuses: “9” (pre-active), and “3” (pre-active, approved virtual card)
         *
         *     When used on cards that are already activated, it will return a PIN reset error.
         *
         *     Only use once there is a customerId linked to the card (no need to input customerId).
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ActivateVirtualCardRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ActivateVirtualCardResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v2/cards/lock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Lock Card */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletLockCardsResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletLockCardsError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v2/cards/unlock": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Unlock Card */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description to indicate the media type of the response content it is expecting */
                    accept?: string;
                    /** @description to indicate the media type of request being sent from the client to the server */
                    "content-type"?: string;
                    /** @description the Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description the Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletUnlockCardsResponse"];
                    };
                };
                /** @description 400 Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletUnlockCardsError"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/cards/replacements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Replace Locked Card Linked to Account
         * @description Card replacement is only applicable for Physical cards or when replacing a Virtual Card with a Generic Physical Card
         *     - `Card should be locked via API before being replaced using this endpoint
         *     - `Physical card productType will override productType of Virtual Card
         *
         *       - `E.g. if Virtual Card is already a Lite tier product but Physical Card is a Starter tier, user wil become Starter tier again.
         *
         *     - `Using lastTranId -- useful when there are more than 10 transactions; this will return the next transactions (up to 10) after the id
         *
         *     This API will link the new card number to account number and customerId, and set the New card number product type to Old card number’s product type
         *
         *     For every successful replacement, old cards should be placed in “Replaced” status.
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ReplacementCardRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ReplacementCardResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v3/cards/replacements/personalize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Personalized Card Replacement
         * @description This will replace the virtual card number with a personalized physical card number while retaining the original EON account number during MCIF and accoutn creation.
         *
         *     This will also generate a new card token that will be used for testing.
         *
         *     Note that the new card status was created for card approval and card activation for replaced perso card.
         *
         *     For UAT testing, please decrypt encrytpedNewCardNumber using your encrypt/decrpyt cipher key provided, get the last 6 digits as that will be your activation code for the Activate and Set Physical Card’s PIN.
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PersonalizeCardRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PersonalizeCardResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v3/funds/transfers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer Funds from a Customer’s EON Account to Another EON or UBP Account
         * @description Used for internal transfers within UnionBank and EON
         *
         *       - EON Prepaid ←→ EON Cyber Account
         *
         *       - EON Prepaid ←→ UnionBank Account
         *
         *       - EON Cyber ←→ UnionBank Account
         *
         *       - EON Prepaid ←→ EON Prepaid
         *
         *       - EON Cyber ←→ EON Cyber
         *
         *     __*Please note that the following business rules can be fully tested/verified in the UAT environment.*__
         *
         *     Account Level will be as follows:
         *
         *       - Starter = 5,000 Maximum Limit
         *
         *       - Lite 100,000 Aggregated BSP Limit
         *
         *       - Plus 500,000 Aggregated BSP Limit
         *
         *       - Pro 1,000,000 Aggregated BSP Limit
         *         - Logic/Sample scenarios for aggregate limit:
         *           1. Scenario 1: Customer A has 2 EON lite (Limit: 100,000), 1 EON starter
         *
         *               - Customer A performed Cash-in via 7-11 or OTC or Crediting services:
         *
         *                   a. P 70,000 to 1st EON lite card,
         *
         *                   b. P 30,000 to 2nd EON lite card
         *
         *                   c. Total Cash-in: P 100,000
         *
         *                   d. Remaining Cash-in Limit: P 0.00
         *
         *                   e. Customer Aggregated Limit (Balance): P 100,000
         *
         *               - Customer A performs account upgrade to EON starter with remaining balance of P 3,000
         *                   a. System will reject the upgrade given that the aggregated customer limit/balance will exceed to P 100,000
         *
         *           2. Scenario 2:
         *
         *                 - Day 1 - Beginning balance is 20k and 80k is credited to his account. Total cash-in is 80k. Balance is 100k.
         *
         *                 - Day 2 - Beginning Balance is 100k, he withdrew 50k but also credited 20k on the same day. Total month-to-date cash-in is 100k. Balance is 70k.
         *
         *                 - Day 3 - Beginning Balance is 70k, he tried to credit 30k balance will not exceed 100k, but we will not accept because cash-in limit has been maxed on Day 2.
         *
         *         - Conditions:
         *           1. Starter, being a virtual account, is not covered by the EMoney Law, and thus is not subject to account limit aggregation.
         *           2. Account limit aggregation begins once customer has an account upgraded to Lite.
         *           3. Account limit aggregation covers all CREDIT transactions types that can be done in the EON Account.
         *
         *                 - Account Upgrade
         *
         *                 - Fund Transfer EON to EON
         *
         *                 - Inward Remittance
         *
         *                 - Cashin
         *
         *                 - Topup
         *
         *                 - VMT
         *
         *                 - CR Adjustment
         *
         *                 - CR Reversals (CW Reversals, POS Reversals, eCommerce etc.)
         *
         *           4. Account limit aggregation is on a per customer basis. Meaning, if one EON customer has 3 Lite accounts linked together on a customer level, all these 3 Lite accounts will be subject to limit aggregation.
         *           5. Account limit aggregation shall always follow the highest account level approved to customer.
         *
         *         - Exclusions
         *           - EON Starter should not be included in the Aggregated limit as it has its own Maximum Limit of 5,000 but the remaining balance will be counted in the customer limit should there be an upgrade request to next level account type
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["EONWalletRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletInstapayResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v3/instapay/transfers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer Funds from Customer EON Account to Other Banks via InstaPay
         * @description This debits a UnionBank Corporate account and credits a non-UnionBank account using InstaPay rails. (real-time)
         *
         *     Bank list will be provided for UAT & PROD.
         *       - UAT transactions will be sent to other banks’ UAT servers; which may be brought down for reasons outside our control
         *       - Any fees due the partner will be debited after reconciling all InstaPay transactions (EOD or T+1).
         *
         *     __*Please note that the following business rules can be fully tested/verified in the UAT environment.*__
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: components["requestBodies"]["EONWalletInstapayRequest"];
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletInstapayResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/pesonet/transfers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Transfer Funds from Customer EON Account to Other Banks via PESONet
         * @description This debits a UnionBank Corporate account and credits a non-UnionBank account using PESOnet rails. (not real time, T+1)
         *
         *     For UAT send to:
         *     - ChinaBank Savings
         *       - creditAccount: 3590333624
         *       - receivingBankLocation: CBS
         *       - receivingBankCode: 0112
         *
         *
         *     In PROD, responses may initially give a success but may be reversed T+1 if there are issues with PESONet.
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: components["requestBodies"]["EONWalletInstapayRequest"];
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletInstapayResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/billers/validate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Validate Biller References
         * @description The partner must maintain their own biller table before using this API. This API will validate the biller from the maintained table of the partner using the biller short name.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["EONWalletBillersValidateRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletBillersValidateResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v3/bills/payment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Pay Biller
         * @description This endpoint is used to process payments to specified billers for utilities, loans, etc.
         *
         *     The source account is identified in the card-token parameter in the header
         *
         *     Individual billers are identified by the billerCode parameter in the body.
         *     - Biller list will come from UBP, but for UAT testing please use the value in the collection. Not all billers have UAT testing environments.
         *
         *     The references array is used to identify and provide custom information about the biller and/or the payment process. Each biller will have their custom information; please refer to the Reference Fields tab in the Biller list.
         *
         *     The latest version of this API (v3) is coming soon in the Dev Portal. It is currently available for testing in UAT and PROD only.
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["EONWalletBillersRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EONWalletBillersResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v2/customers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Customer Profile
         * @description Creates a customer profile.
         *
         *     Once approved (CI status 10), a customer profile is created and a customerid is generated. If a profile already exists and the CI status is 10 (i.e. has a matching First Name, Last Name, Date of Birth, Place of Birth in the database), this returns a successful transaction and returns the existing customerId. If not, it creates a new profile and new customerId.
         *
         *     The latest version of this API (v2) is available for testing in UAT; it will be made available in the Developer Portal as well.
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["CreateCustomerRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CreateCustomerResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/customers/inquiry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Customer Details
         * @description This API will get the complete detailed information of the customer using their card-token.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["GetCustomerProfileResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/customers/update/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Customer Profile
         * @description Parameters required to match customerId cannot be updated via this API, and requires an email to Customer Support with supporting documents:
         *     - `First Name
         *     - `Last Name
         *     - `Birth Date
         *     - `Place of Birth
         *
         *     Update API can only change values, not delete them (e.g. updating with a null value will not delete it)
         *
         */
        put: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["GetCustomerProfileResponse"];
                };
            };
            responses: {
                /** @description Default response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/customers/investigation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Inquire KYC for Customer Profile Creation Request Status
         * @description  This API is used to check on the status of credit investigation.
         */
        get: {
            parameters: {
                query: {
                    /** @description Transaction ID */
                    transactionId: string;
                };
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["InvestigateResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/accounts/virtual": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Virtual Account with a linked Virtual Card (w/ UBP KYC)
         * @description Use this endpoint if KYC is reliant on UBP, otherwise users will not be able to get a successful KYC and may affect upgrades later on.
         *
         *     Creating a Virtual Card, automatically:
         *
         *       - Links the virtual card to a customerId
         *
         *       - Approves & activates the virtual card
         *
         *         - Activation involves using the last 6 digits of the card, and setting a new PIN.
         *
         *           - New PIN is the same last 6 digits
         *
         *           - When using this endpoint, better to let customers change PIN for security.
         *
         *
         *     _**Please note that the following business rules can be tested/verified in UAT**_
         *
         *     One customer ID can have:
         *
         *       - 10 Starter accounts for virtual prepaid accounts.
         *
         *       - Unlimited Lite or higher accounts
         *
         *     For UAT, 2 levels of accounts are defined:
         *
         *       - STARTER: PRD9182
         *
         *       - LITE: PRD9183
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["KYCRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["KYCResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/customers/:customerId/cards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve List of Cards Linked to Customer
         * @description  This API is used to check list of cards of the customer. customerId is not validated in this API call for security purposes. A valid customerId will return a list of cards of the customer. apiCardNumber keeps refreshing each time you call this API. This is expected; decryption will lead to the same value. (This can be fully tested/verified in UAT.)
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path: {
                    /** @description Customer ID */
                    customerId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v3/upgrade": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Upgrade Prepaid Account Product type
         * @description  This API upgrades prepaid account to next highest account tier.
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UpgradePrepaidAccount"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UpgradeWalletResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/cards/accounts/linking": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Link new physical card for a new or old customer
         * @description   This API is used to link a physical card to a customer via the card number and the customer’s details. For UAT testing: Pass in the details about the physical card by encrypting the raw card number
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["LinkingPhysicalRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LinkingPhysicalResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/balance/inquiry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Balance of EON Account Linked to Card
         * @description : This API retrieves the balance of an EON Account.
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["BalanceInquiryResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v2/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Customer Wallet Transaction History
         * @description There are 3 ways to use the endpoint:
         *     - `Without any params -- this will only return the last 10 transactions
         *     - `Using only date params -- this will return transactions within the date range, limited to 10 transactions
         *     - `Using lastTranId -- useful when there are more than 10 transactions; this will return the next transactions (up to 10) after the id
         *
         *     Use this endpoint without any params first to get important values, such as “tranDate” and “id”. It is recommended that you store the data for easier recall later on.
         *
         *     tranDesc possible values:
         *     - `Fund Transfer Internal
         *     - `Pesonet Send
         *     - `Instapay Send
         *     - `POS Purchase
         *     - `ATM Withdrawal
         *     - `Buy Stuff (e.g. Buy Goods)
         *     - `Balance Inquiry
         *     - `E Commerce
         *     - `Cash In
         *
         */
        get: {
            parameters: {
                query?: {
                    /** @description Start Date */
                    fromDate?: string;
                    /** @description End Date */
                    toDate?: string;
                    /** @description Last Tran ID */
                    lastTranId?: string;
                };
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["TransactionHistoryEON"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v2/mother/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Mother Wallet Transaction History
         * @description This API does not require a card token parameter.
         *
         *     There are 3 ways to use the endpoint:
         *     - `Without any params -- this will only return the last 10 transactions
         *     - `Using only date params -- this will return transactions within the date range, limited to 10 transactions
         *     - `Using lastTranId -- useful when there are more than 10 transactions; this will return the next transactions (up to 10) after the id
         *
         *     Use this endpoint without any params first to get important values, such as “tranDate” and “id”. It is recommended that you store the data for easier recall later on.
         *
         *     tranDesc possible values:
         *     - `Fund Transfer Internal
         *     - `Pesonet Send
         *     - `Instapay Send
         *     - `POS Purchase
         *     - `ATM Withdrawal
         *     - `Buy Stuff (e.g. Buy Goods)
         *     - `Balance Inquiry
         *     - `E Commerce
         *     - `Cash In
         *
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MotherDetailsResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/eon/wallet/v1/accounts/limits": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Cash Withdrawal Limit for Card
         * @description   This API sets a cash withdrawal limit for cards.
         */
        put: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Sample partner account ID provided in [Sample Credentials](https://developer.unionbankph.com/reference#tag/SampleCredentials) */
                    "x-partner-id": string;
                    /** @description Token returned by the Create Virtual Account with a Linked Virtual Card endpoint (under EON Wallet Accounts API) */
                    "card-token": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UpgradeCardLimitRequest"];
                };
            };
            responses: {
                /** @description 200 OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UpgradeCardLimitResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/sb/payment/refund": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Process refund
         * @description  This endpoint will process your refund
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["MerchantPaymentRefundRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MerchantPaymentRefundResponse"];
                    };
                };
                /** @description TF Error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["MerchantPaymentRefundErrorResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/sb/auto-payments/schedule": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Request Schedule
         * @description  Request Schedule
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Customer-Authentication) */
                    authorization: string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ADARequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ADAResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/sb/auto-payments/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Auto-Debit Payment
         * @description  Auto-Debit Payment
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Customer-Authentication) */
                    authorization: string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ADASingleRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ADASingleResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/sb/auto-payments/single/REPLACE_SENDER_REFERENCE_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Transaction Request Status
         * @description  Check Transaction Request Status
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Customer-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ADACheckTransactionResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/sb/auto-payments/schedule/REPLACE_APPROVER_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Schedule
         * @description Check Schedule
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ADACheckScheduleResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/partners/sb/auto-payments/schedule/<REPLACE_APPROVER_ID>": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Schedule
         * @description Update Schedule
         */
        put: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ADAUpdateScheduleRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ADAUpdateScheduleResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auto-payments/toggle/subscription": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Toggle Subscription
         * @description Toggle Subscription
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["ADAToggleRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ADAToggleResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auto-payments/terms/conditions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieve Terms & Conditions
         * @description Retrieve Terms & Conditions
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/balances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Retrieves the account balance of a UnionBank customer retail account
         * @description Retrieves the account balance of a UnionBank customer retail account
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Customer Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Customer-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["CheckBalance"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pddts/v1/transfers/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Initiate PDDTS Transaction
         * @description Initiate PDDTS Transaction
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["PDDTSTransferRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PDDTSTransferResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pddts/v1/transfers/single/{senderRefId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Transaction Request Status
         * @description Retrieves the status of a particular PDDTS transaction
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PDDTSTransferDetailsResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pddts/v1/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Banks
         * @description Returns the list of PDDTS receiving banks
         */
        get: {
            parameters: {
                query?: {
                    /** @description Limit of record per page */
                    limit?: string;
                    /** @description Get record by page */
                    page?: string;
                };
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["PDDTSBanksResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rtgs/v1/transfers/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Initiate RTGS Transaction
         * @description Initiate RTGS Transaction
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["RTGSTransferRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["RTGSTransferResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rtgs/v1/transfers/single/{senderRefId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Check Transaction Request Status
         * @description Retrieves the status of a particular RTGS transaction
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["RTGSTransferDetailsResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rtgs/v1/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Banks
         * @description Returns the list of RTGS receiving banks
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["RTGSBanksResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/disbursement/single": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Cash transfer to target account
         * @description If request is UB-UB, receiving Bank and purpose should be set to blank and particulars should be filled. For Instapay and Pesonet, particulars should be set to blank and receiving bank and purpose code should be filled. Description for each of the following purpose code below:
         *     | Code | Type    |
         *     | :-----------: |:----------------:|
         *     | 1001  | Donation  |
         *     | 1002  | Payment |
         *     | 1003  | Fund Transfer |
         *
         *
         *     Amount Limit Per Transaction
         *
         *
         *     | Channel | Amount    |
         *     | :-----------: |:----------------:|
         *     | UB-UB  | NONE  |
         *     | INSTAPAY  | php 50000 |
         *     | PESONET  | NONE |
         *
         */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["DisbursementTransferRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DisbursementTransferResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/disbursement/single{senderRefId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Transaction Status
         * @description Retrieves the status of a particular Partner Disbursement transaction
         */
        get: {
            parameters: {
                query?: {
                    /** @description Type of transaction from response. Sample value = **DISBURSEMENT_TRANSFER, DISBURSEMENT_INSTAPAY, DISBURSEMENT_PESONET** */
                    type?: string;
                };
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DisbursementTransferDetailsResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/disbursement/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Banks
         * @description Returns the list of Partner Disbursement receiving banks
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DisbursementBanksResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/upay/payments/v1/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Payment Request */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["UPayPaymentRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UPayPaymentResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/upay/payments/v1/billers/{billerUuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Billers Details by Uuid */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UPayBillerUuidResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/upay/payments/v1/billers/{billerUuid}/references": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Billers References by Billers UUID
         * @description Get the biller’s list of references using the biller’s UUID
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UPayBillerUuidReferencesResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/upay/payments/v1/transactions/{billerUuid}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check Status */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UPayBillerUuidStatusResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/upay/payments/v1/privacy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Privacy Policy
         * @description Retrieve Privacy Policy Feature
         */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Default response */
                default: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/upay/payments/v1/instapay/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Instapay Banks */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UPayInstapayBankResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/upay/payments/v1/pesonet/banks": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get PESONet Banks */
        get: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UPayPesonetBankResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/qrph/p2m/v1/instapay/nonmsme/qr/generate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add and Generate P2M Instapay QR String */
        post: {
            parameters: {
                query?: never;
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": components["schemas"]["QRPHP2MGenerateRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["QRPHP2MGenerateResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/qrph/p2m/v1/reports/nonmsme": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get the settlement data/consolidated report */
        get: {
            parameters: {
                query: {
                    /** @description get record by page */
                    page: string;
                    /** @description Biller ID */
                    billerId: string;
                    /** @description Store ID */
                    storeId: string;
                    /** @description Cashier Code */
                    cashierCode: string;
                    /** @description Sender Reference No */
                    senderReferenceNo: string;
                    /** @description asc = ascending, value = true/false */
                    asc: string;
                };
                header: {
                    /** @description Indicated media type of the response it is expecting */
                    accept: "application/json";
                    /** @description Indicated  media type of the request being sent from the client to the server */
                    "content-type": "application/json";
                    /** @description Generated access token using [Partner Authentication API](https://developer.unionbankph.com/reference#tag/UnionBank-Partner-Authentication) */
                    authorization: string;
                    /** @description Client Id of the application in the UnionBank Developer Portal */
                    "x-ibm-client-id": string;
                    /** @description Client Secret of the application in the UnionBank Developer Portal */
                    "x-ibm-client-secret": string;
                    /** @description Generated UnionBank id for a specific Partner */
                    "x-partner-id": string;
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["QRPHP2MReportsResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @example [
         *       {
         *         "id": 1087,
         *         "name": " MJC Winford",
         *         "address": " Winford Hotel & Casino Brgy. 350, Santa Cruz, Manila, Metro Manila ",
         *         "latitude": 14.615278,
         *         "longitude": 120.985
         *       },
         *       {
         *         "id": 1095,
         *         "name": "ABOITIZ NAC",
         *         "address": "8th floor NAC building 32nd street BGC near at the football field",
         *         "latitude": 14.552824,
         *         "longitude": 121.051813
         *       },
         *       {
         *         "id": 1096,
         *         "name": "ABOITIZ OFFSITE",
         *         "address": "Aboitiz & Co. Building Archbishop Reyes Avenue Banilad, Cebu City",
         *         "latitude": 10.318107,
         *         "longitude": 123.902722
         *       }
         *     ] */
        ATMs: {
            id?: number;
            name?: string;
            address?: string;
            latitude?: number;
            longitude?: number;
        }[];
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Could not locate ATMs",
         *           "description": ""
         *         }
         *       ]
         *     } */
        ATMsErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example [
         *       {
         *         "id": 72,
         *         "name": "ABS-CBN",
         *         "address": "West Wing G/F ELJ Communication Center, ABS-CBN Broadcast Center Sgt. Esguerra St. South Triangle, Quezon City (ATM: On-site)",
         *         "latitude": 14.639863,
         *         "longitude": 121.035255,
         *         "contactNo": "(02)929 7264; (02)929 1825; Mobile: 0917 8270294",
         *         "email": ""
         *       },
         *       {
         *         "id": 73,
         *         "name": "Acropolis",
         *         "address": "171 Bridgeview Bldg., E. Rodriguez Jr. Ave, Bagumbayan, Quezon City (ATM: On-site)",
         *         "latitude": 14.611772,
         *         "longitude": 121.075268,
         *         "contactNo": "(02)655 5796; (02)438 9332; Mobile: 0917 8270549",
         *         "email": ""
         *       },
         *       {
         *         "id": 254,
         *         "name": "ADB Avenue",
         *         "address": "Ground floor Unit 101 AIC Burgundy Empire Tower, ADB Ave., Ortigas Pasig City (ATM: On-site)",
         *         "latitude": 14.589859,
         *         "longitude": 121.060941,
         *         "contactNo": "(02)633-1097; (02)622-1031; (02)571-8394; Mobile: 0917-8275992",
         *         "email": ""
         *       }
         *     ] */
        Branches: {
            id?: number;
            name?: string;
            address?: string;
            latitude?: number;
            longitude?: number;
            contactNo?: string;
            email?: string;
        }[];
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Could not locate branches",
         *           "description": ""
         *         }
         *       ]
         *     } */
        BranchesErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example [
         *       {
         *         "id": 2,
         *         "symbol": "AUD",
         *         "name": "Australian Dollar",
         *         "buying": 39.112,
         *         "selling": 40.749,
         *         "asOf": "2017-10-10T00:00:00"
         *       },
         *       {
         *         "id": 6,
         *         "symbol": "GBP",
         *         "name": "British Pound",
         *         "buying": 66.519,
         *         "selling": 68.541,
         *         "asOf": "2017-10-10T00:00:00"
         *       },
         *       {
         *         "id": 3,
         *         "symbol": "CAD",
         *         "name": "Canadian Dollar",
         *         "buying": 40.143,
         *         "selling": 41.824,
         *         "asOf": "2017-10-10T00:00:00"
         *       }
         *     ] */
        Forex: {
            id?: number;
            symbol?: string;
            name?: string;
            buying?: number;
            selling?: number;
            asOf?: string;
        }[];
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        ForexErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "account_number": "xxxxxxxx0293",
         *       "account_type": "Savings Account"
         *     } */
        AccountInformationResponse: {
            account_number?: string;
            account_type?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "No Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        PaymentErrorsv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderPaymentId": "12345678",
         *       "paymentRequestDate": "2015-10-03T15:29:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Payor",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "InvoiceNo",
         *           "value": "12345"
         *         }
         *       ]
         *     } */
        PaymentRequestv1: {
            senderPaymentId?: string;
            paymentRequestDate?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            info?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "paymentId": "UB2985127673018",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderPaymentId": "12345678"
         *     } */
        PaymentResponsev1: {
            /** @example UBP000001 */
            paymentId?: string;
            /** @example 2017-10-10T12:11:50Z */
            createdAt?: string;
            /** @example SUCCESS */
            state?: string;
            /** @example 0001 */
            senderPaymentId?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB2985127673018",
         *           "type": "MERCHANT_PAYMENT",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Payment Successful",
         *           "senderPaymentId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        MerchantVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderPaymentId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "No Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        PaymentErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Payor",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "InvoiceNo",
         *           "value": "12345"
         *         }
         *       ]
         *     } */
        PaymentRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            info?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "ubpTranId": "UB2985127673018",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderRefId": "12345678"
         *     } */
        PaymentResponse: {
            /** @example UBP000001 */
            ubpTranId?: string;
            /** @example 2017-10-10T12:11:50Z */
            createdAt?: string;
            /** @example SUCCESS */
            state?: string;
            /** @example 0001 */
            senderRefId?: string;
        };
        /** @example {
         *       "payload": {
         *         "paymentId": "S552262",
         *         "createdAt": "2018-12-28T15:29:16.333",
         *         "state": "Payment Successful",
         *         "senderRefId": "000001"
         *       },
         *       "signature": "0247ecbe498955cbb2fff7ed13e910f12adb14549536cf74db5335aefe568c1af7777baa3ac3641865a57350f2b4e06261b630f4e6c8f2328de9001a5be811d3b07fc3f419a475c3a599363e1350fec8769cf1ea1eb31ead02f5ec574d3f70bfb238b25a417438976a6355a15ca676fd5fce0a7f52a82b9fa0eec61a5a2fc69b4425f6a623cdde6107f73a36c6ba485fc9a3b643712a53692afd66fff6f62e36b9fa8e8005bf60ca5d3b19ce6c2d7d46fcbadde6bfbbfb18cc265959b162951090b885228123da40b0b0219977ee59a6244d9e224a4c998eb410b80af95eab7e3caa54c518a9d3444f589cda5d5c7020b5a6c842e7d3d805e0aa1969bf8c6a50"
         *     } */
        PaymentResponsev3: {
            payload?: {
                paymentId?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            };
            signature?: string;
        };
        /** @example {
         *       "payload": {
         *         "records": [
         *           {
         *             "ubpTranId": "S467791",
         *             "type": "MERCHANT_PAYMENT",
         *             "createdAt": "2018-12-28T15:29:16.000Z",
         *             "state": "Payment Successful",
         *             "senderRefId": "000001"
         *           },
         *           {
         *             "ubpTranId": "S467792",
         *             "type": "MERCHANT_PAYMENT",
         *             "createdAt": "2018-12-28T15:29:16.000Z",
         *             "state": "Payment Successful",
         *             "senderRefId": "000001"
         *           }
         *         ],
         *         "totalRecords": 2
         *       },
         *       "signature": "818d10b3c8a43cf7f99b13a1a4b7dd1d01c6e0756922d2b919f158b42d4c216e9c657a6a9430240a9fa141758793e190aefc34914d9889922825d6d592164aad60d97400556dd9be1d03f8d2955c0dcbb5f46febfba841901799ec58f99aee65cab4d3d4c1a6da7e97ab3aed66540b1702fa61bbfe431cec77a617413947300f382b2ce15cbfd4fa3af18cb8c8425f34b9efd3252a36fccc7e771e900289c49a653d9938f9f64f01342936f6f681045e6e51e8a534cab9a6f049045fe97769a5e438778ce8a0ef9934fca84e2324aa12e0e92ec37544f1da7f0b44c6d24b85a6edd0e4eff007cfe6a26c4bf98ba747bb3b716815750da8193c9ab0d9e6f2072a"
         *     } */
        Statusv3: {
            payload?: {
                records?: {
                    ubpTranId?: string;
                    type?: string;
                    createdAt?: string;
                    state?: string;
                    senderRefId?: string;
                }[];
                totalRecords?: number;
            };
            signature?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB2985127673018",
         *           "type": "MERCHANT_PAYMENT",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Payment Successful",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        MerchantVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "TF",
         *           "description": "Failed to Credit Beneficiary Account",
         *           "details": {
         *             "senderRefId": "0024",
         *             "message": "We could not recognize your account. Please contact UnionBank.",
         *             "uuid": "22da0a78-e9e2-42fe-89be-f0a55234629e",
         *             "amount": 3,
         *             "type": "MERCHANT_PAYMENT",
         *             "tranRequestDate": "2017-10-10T12:11:50.333",
         *             "coreCode": 5
         *           }
         *         }
         *       ]
         *     } */
        PaymentErrorsv4: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: string;
                    message?: string;
                    uuid?: string;
                    amount?: number;
                    type?: string;
                    tranRequestDate?: string;
                    coreCode?: number;
                };
            }[];
        };
        /** @example {
         *       "senderRefId": "0031",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Payor",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "InvoiceNo",
         *           "value": "12345"
         *         }
         *       ]
         *     } */
        PaymentRequestv4: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Object containing the details of the transaction */
            amount?: {
                /** @description Currency used in the transaction. Accepted values = "PHP" */
                currency?: string;
                /** @description Amount to be paid in the transaction */
                value?: string;
            };
            /** @description Additional remarks of the transaction */
            remarks?: string;
            /** @description Additional information about the transaction */
            particulars?: string;
            /** @description Array of Indexes that contain additional information about the transaction */
            info?: {
                /** @description Index number of additional information */
                index?: number;
                /** @description Name of additional information */
                name?: string;
                /** @description Value of additional information */
                value?: string;
            }[];
        };
        /** @example {
         *       "payload": {
         *         "code": "TS",
         *         "senderRefId": "0031",
         *         "state": "Credited Beneficiary Account",
         *         "uuid": "074220d4-2fb2-4a40-b13b-7ffb13080c71",
         *         "description": "Successful transaction",
         *         "type": "MERCHANT_PAYMENT",
         *         "amount": 3,
         *         "ubpTranId": "UB8873036535875",
         *         "tranRequestDate": "2017-10-10T12:11:50.333"
         *       },
         *       "signature": "8b4599b477cd161d72fdc94a9b2dffe65687d9a6114e9156f97fe339d74f51aa52f30c4db60bf1165fdd18464389f4316d2144244f9ac6e095fef43184819e8b18e0e5d1b81756a9a297f57244709229cd83ebe7363a9a61a082bc88a10cb58f247462f795e3a3f8a7db83db68076048416878dfcf38111c1d08a196eb818903a1fff8425b82b482c1a95b5908250a88c8ce7bf20847879fb5df0459f85bba85cb09388f572cb14470e027914f41212f0e22222079cfbe532f81b92fe8cf40f62a5b9401bdc91774d66e1047786c8daba1a30ec29a9b66352441fb8f275c5b31570d2d4cf7c9931b92f36843c25174b3f8cdc392813e1350a24f6a1b6c8649ef"
         *     } */
        PaymentResponsev4: {
            payload?: {
                code?: string;
                senderRefId?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: number;
                ubpTranId?: string;
                tranRequestDate?: string;
            };
            signature?: string;
        };
        /** @example {
         *       "senderRefId": "0031",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "requestId": "2711C83E7AB7BFE8BB2729B3A8FC8DB1",
         *       "otp": 453589,
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Payor",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "InvoiceNo",
         *           "value": "12345"
         *         }
         *       ]
         *     } */
        PaymentRequestv5: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Request ID from Send OTP endpoint. */
            requestId?: string;
            /** @description OTP verification code. */
            otp?: string;
            /** @description Object containing the details of the transaction */
            amount?: {
                /** @description Currency used in the transaction. Accepted values = "PHP" */
                currency?: string;
                /** @description Amount to be paid in the transaction */
                value?: string;
            };
            /** @description Additional remarks of the transaction */
            remarks?: string;
            /** @description Additional information about the transaction */
            particulars?: string;
            /** @description Array of Indexes that contain additional information about the transaction */
            info?: {
                /** @description Index number of additional information */
                index?: number;
                /** @description Name of additional information */
                name?: string;
                /** @description Value of additional information */
                value?: string;
            }[];
        };
        /** @example {
         *       "payload": {
         *         "code": "TS",
         *         "senderRefId": "0031",
         *         "state": "Credited Beneficiary Account",
         *         "uuid": "074220d4-2fb2-4a40-b13b-7ffb13080c71",
         *         "description": "Successful transaction",
         *         "type": "MERCHANT_PAYMENT",
         *         "amount": 3,
         *         "ubpTranId": "UB8873036535875",
         *         "tranRequestDate": "2017-10-10T12:11:50.333"
         *       },
         *       "signature": "8b4599b477cd161d72fdc94a9b2dffe65687d9a6114e9156f97fe339d74f51aa52f30c4db60bf1165fdd18464389f4316d2144244f9ac6e095fef43184819e8b18e0e5d1b81756a9a297f57244709229cd83ebe7363a9a61a082bc88a10cb58f247462f795e3a3f8a7db83db68076048416878dfcf38111c1d08a196eb818903a1fff8425b82b482c1a95b5908250a88c8ce7bf20847879fb5df0459f85bba85cb09388f572cb14470e027914f41212f0e22222079cfbe532f81b92fe8cf40f62a5b9401bdc91774d66e1047786c8daba1a30ec29a9b66352441fb8f275c5b31570d2d4cf7c9931b92f36843c25174b3f8cdc392813e1350a24f6a1b6c8649ef"
         *     } */
        PaymentResponsev5: {
            payload?: {
                code?: string;
                senderRefId?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: number;
                ubpTranId?: string;
                tranRequestDate?: string;
            };
            signature?: string;
        };
        /** @example {
         *       "payload": {
         *         "record": {
         *           "senderRefId": "0033",
         *           "code": "TS",
         *           "state": "Credited Beneficiary Account",
         *           "uuid": "a488960f-82d6-4629-a3d4-811081ae594e",
         *           "description": "Successful transaction",
         *           "type": "MERCHANT_PAYMENT",
         *           "amount": "3",
         *           "ubpTranId": "UB4738539441611",
         *           "tranRequestDate": "2017-10-10T04:11:50.000Z",
         *           "createdAt": "2019-10-29T18:19:13.000Z",
         *           "updatedAt": ""
         *         }
         *       },
         *       "signature": "50f7a65356c0d607e816049a8b5d73c7866d83e4b21d80dd7f95ccb14a53ca69f6fb4cd1346f2e5f7660750816b89612cebb36925263122d2bd1b2e6325702444f7b1d51620c1e1e3e6cc4abb076cb34d64f9d6ac00c910fa4317ec8e869175e5c3009972e52cf8e346f190ab55d5af2a2adec933987dba48894332f0bad8995ee3b442c6ee1ffbf8f826197d4daa3a388455967dda642c57a62f7d1e55cf57cf0556b594ccfce0a71b82d14654c5ac2fb04b64688a6d217454364208465013cd7a20e1bdc7626b8295313fb2d84d335d13c4c94999ba514a57ecf86c0e29f1a241b8887b90a82fa15072776f684c8336da9afd41cfc7722857fdcb6dbd8b8c4"
         *     } */
        MerchantVerificationv4: {
            payload?: {
                record?: {
                    senderRefId?: string;
                    code?: string;
                    state?: string;
                    uuid?: string;
                    description?: string;
                    type?: string;
                    amount?: string;
                    ubpTranId?: string;
                    tranRequestDate?: string;
                    createdAt?: string;
                    updatedAt?: string;
                };
            };
            signature?: string;
        };
        /** @example {
         *       "uuid": "50cabd6d-ce9c-4bed-b752-cd4f4110bc91",
         *       "requestId": "2711C83E7AB7BFE8BB2729B3A8FC8DB1",
         *       "coreCode": "200"
         *     } */
        MerchantOTPV5: {
            uuid?: string;
            requestId?: string;
            coreCode?: string;
        };
        AccessTokenResponse: {
            /** @enum {unknown} */
            token_type: "bearer";
            access_token: string;
            expires_in: number;
            scope?: string;
            refresh_token?: string;
        };
        /** @example {
         *       "error": "invalid_scope"
         *     } */
        AccessTokenError: {
            error?: string;
        };
        /** @example {
         *       "senderTransferId": "TRANSFER-0001",
         *       "transferRequestDate": "2015-10-03T15:29:16.333",
         *       "accountNo": "",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Transfer remarks",
         *       "particulars": "Transfer particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Recipient",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "Message",
         *           "value": "Happy Birthday"
         *         }
         *       ]
         *     } */
        TransferRequestv1: {
            senderTransferId?: string;
            transferRequestDate?: string;
            accountNo?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            info?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "transferId": "UB2541110131423",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Credited Beneficiary Account",
         *       "senderTransferId": "TRANSFER-0001"
         *     } */
        TransferResponsev1: {
            transferId?: string;
            createdAt?: string;
            state?: string;
            senderTransferId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        TransferErrorv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "transferId": "UB2541110131423",
         *             "senderTransferId": "TRANSFER-0001",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        TransferErrorv1500: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    transferId?: string;
                    senderTransferId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB2541110131423",
         *           "type": "TRANSFER",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Credited Beneficiary Account",
         *           "senderTransferId": "TRANSFER-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        TransferVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderTransferId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "accountNo": "",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Transfer remarks",
         *       "particulars": "Transfer particulars",
         *       "info": [
         *         {
         *           "index": "1",
         *           "name": "Recipient",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": "2",
         *           "name": "Message",
         *           "value": "Happy Birthday"
         *         }
         *       ]
         *     } */
        TransferRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            accountNo?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            info?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "ubpTranId": "UB2541110131423",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Credited Beneficiary Account",
         *       "senderRefId": "12345678"
         *     } */
        TransferResponse: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        TransferError: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "ubpTranId": "UB2541110131423",
         *             "senderRefId": "12345678",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        TransferError500: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    ubpTranId?: string;
                    senderRefId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB2541110131423",
         *           "type": "TRANSFER",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Credited Beneficiary Account",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        TransferVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "UB127",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "accountNo": "103768429370",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Transfer remarks",
         *       "particulars": "Transfer particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Recipient",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "Message",
         *           "value": "Happy Birthday"
         *         }
         *       ]
         *     } */
        TransferRequestv3: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Bank account number of recipient */
            accountNo?: string;
            /** @description Object containing the details of the transaction */
            amount?: {
                /** @description Currency used in the transaction. Accepted values = "PHP" */
                currency?: string;
                /** @description Amount to be paid in the transaction */
                value?: string;
            };
            /** @description Additional remarks of the transaction */
            remarks?: string;
            /** @description Additional information about the transaction */
            particulars?: string;
            /** @description Array of Indexes that contain additional information about the transaction */
            info?: {
                /** @description Index number of additional information */
                index?: number;
                /** @description Name of additional information */
                name?: string;
                /** @description Value of additional information */
                value?: string;
            }[];
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UB127",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "d23ff4bf-bcef-4c58-b98c-c0d40b35294f",
         *       "description": "Successful transaction",
         *       "type": "TRANSFER",
         *       "amount": "100",
         *       "ubpTranId": "UB6391875781961",
         *       "tranRequestDate": "2017-10-10T12:11:50.333"
         *     } */
        TransferResponsev3: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        TransferErrorv3: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "ubpTranId": "UB2541110131423",
         *             "senderRefId": "12345678",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        TransferError500v3: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    ubpTranId?: string;
                    senderRefId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UB127",
         *         "code": "TS",
         *         "state": "Credited Beneficiary Account",
         *         "uuid": "d23ff4bf-bcef-4c58-b98c-c0d40b35294f",
         *         "description": "Successful transaction",
         *         "type": "TRANSFER",
         *         "amount": "100",
         *         "ubpTranId": "UB6391875781961",
         *         "tranRequestDate": "2017-10-10T04:11:50.000Z",
         *         "createdAt": "2019-10-28T23:48:43.000Z",
         *         "updatedAt": ""
         *       }
         *     } */
        TransferVerificationv3: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                tranRequestDate?: string;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example [
         *       {
         *         "beginAmount": "0",
         *         "endAmount": "99999.99",
         *         "interestRate": "0",
         *         "currency": "PHP"
         *       },
         *       {
         *         "beginAmount": "100000",
         *         "endAmount": "99999999999999.99",
         *         "interestRate": ".1",
         *         "currency": "PHP"
         *       }
         *     ] */
        CasaRatesResponse: {
            beginAmount?: string;
            endAmount?: string;
            interestRate?: string;
            currency?: string;
        }[];
        /** @example {
         *       "errors": [
         *         {
         *           "code": "1",
         *           "message": "Interest rate not available for product code and/or currency",
         *           "description": "Invalid product code"
         *         }
         *       ]
         *     } */
        CasaRatesError: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example [
         *       {
         *         "endDays": "0",
         *         "endMonths": "12",
         *         "endAmount": "49999.99",
         *         "interestRate": "0",
         *         "currency": "PHP"
         *       },
         *       {
         *         "endDays": "0",
         *         "endMonths": "12",
         *         "endAmount": "99999.99",
         *         "interestRate": "2",
         *         "currency": "PHP"
         *       },
         *       {
         *         "endDays": "0",
         *         "endMonths": "12",
         *         "endAmount": "199999.99",
         *         "interestRate": "2",
         *         "currency": "PHP"
         *       }
         *     ] */
        TimeDepositRatesResponse: {
            endDays?: string;
            endMonths?: string;
            endAmount?: string;
            interestRate?: string;
            currency?: string;
        }[];
        /** @example {
         *       "errors": [
         *         {
         *           "code": "1",
         *           "message": "Interest rate not available for product code and/or currency",
         *           "description": "Invalid product code"
         *         }
         *       ]
         *     } */
        TimeDepositRatesError: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "billers": [
         *         {
         *           "code": "0001",
         *           "name": "Credit Card Biller Number"
         *         },
         *         {
         *           "code": "0002",
         *           "name": "Telecom Biller"
         *         },
         *         {
         *           "code": "0003",
         *           "name": "Biller 3"
         *         },
         *         {
         *           "code": "0004",
         *           "name": "Biller 4"
         *         },
         *         {
         *           "code": "0005",
         *           "name": "Biller 5"
         *         }
         *       ]
         *     } */
        Billers: {
            billers?: {
                code?: string;
                name?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        BillersErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "references": [
         *         {
         *           "index": 1,
         *           "name": "Credit Card Biller Number",
         *           "description": "16-digit number",
         *           "sample": "4190200012345678",
         *           "min": 0,
         *           "max": 16,
         *           "type": "type"
         *         },
         *         {
         *           "index": 2,
         *           "name": "Mobile Number",
         *           "description": "10-digit number",
         *           "sample": "9991234567",
         *           "min": 0,
         *           "max": 12,
         *           "type": "type"
         *         }
         *       ]
         *     } */
        BillersRef: {
            references?: {
                index?: number;
                name?: string;
                description?: string;
                sample?: string;
                min?: number;
                max?: number;
                type?: string;
            }[];
        };
        /** @example {
         *       "senderPaymentId": "PAYMENT-0001",
         *       "paymentRequestDate": "2015-10-03T15:29:16.333",
         *       "biller": {
         *         "id": "1234",
         *         "name": ""
         *       },
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "references": [
         *         {
         *           "index": 1,
         *           "name": "Payor",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "InvoiceNo",
         *           "value": "12345"
         *         }
         *       ]
         *     } */
        OnlineBPRequestv1: {
            senderPaymentId?: string;
            paymentRequestDate?: string;
            biller?: {
                id?: string;
                name?: string;
            };
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            references?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "paymentId": "UB2541110131423",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderPaymentId": "PAYMENT-0001"
         *     } */
        OnlineBPResponsev1: {
            /**
             * @description UnionBank generated id
             * @example UBP000001
             */
            paymentId?: string;
            /**
             * @description UTC date and time the payment was created
             * @example 2017-10-10T12:11:50.000Z
             */
            createdAt?: string;
            /**
             * @description Payment status
             * @example Payment Succesful
             */
            state?: string;
            /**
             * @description Unique id generated by the app
             * @example 0001
             */
            senderPaymentId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        OnlineBPErrorsv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "biller": {
         *         "id": "1234",
         *         "name": "Telecom Biller"
         *       },
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "references": [
         *         {
         *           "index": 1,
         *           "name": "Account Number",
         *           "value": "123456789012"
         *         },
         *         {
         *           "index": 2,
         *           "name": "Mobile Number",
         *           "value": "9991234567"
         *         }
         *       ]
         *     } */
        OnlineBPRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            biller?: {
                id?: string;
                name?: string;
            };
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            references?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "ubpTranId": "UB2541110131423",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderRefId": "12345678"
         *     } */
        OnlineBPResponse: {
            /** @example UBP000001 */
            ubpTranId?: string;
            /** @example 2017-10-10T12:11:50.000Z */
            createdAt?: string;
            /** @example Payment Succesful */
            state?: string;
            /** @example 0001 */
            senderRefId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        OnlineBPErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderTransferId": "TRANSFER-0001",
         *       "transferRequestDate": "2015-10-03T15:29:16.333",
         *       "accountNo": "",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Transfer remarks",
         *       "particulars": "Transfer particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Recipient",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "Message",
         *           "value": "Happy Birthday"
         *         }
         *       ]
         *     } */
        OnlineSingleFTRequestv1: {
            senderTransferId?: string;
            transferRequestDate?: string;
            accountNo?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            info?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "transferId": "UB2541110131423",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderTransferId": "TRANSFER-0001"
         *     } */
        OnlineSingleFTResponsev1: {
            transferId?: string;
            createdAt?: string;
            state?: string;
            senderTransferId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        OnlineSingleFTErrorsv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "transferId": "UB2541110131423",
         *             "senderTransferId": "TRANSFER-0001",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        OnlineSingleFTErrorsv1500: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    transferId?: string;
                    senderTransferId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB2541110131423",
         *           "type": "TRANSFER",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Credited Beneficiary Account",
         *           "senderTransferId": "TRANSFER-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        PaymentVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderTransferId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "accountNo": "",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Transfer remarks",
         *       "particulars": "Transfer particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Recipient",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "Message",
         *           "value": "Happy Birthday"
         *         }
         *       ]
         *     } */
        OnlineSingleFTRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            accountNo?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            info?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "ubpTranId": "UB2541110131423",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderRefId": "12345678"
         *     } */
        OnlineSingleFTResponse: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        OnlineSingleFTErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "ubpTranId": "UB2541110131423",
         *             "senderRefId": "12345678",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        OnlineSingleFTErrors500: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    ubpTranId?: string;
                    senderRefId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB2541110131423",
         *           "type": "TRANSFER",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Credited Beneficiary Account",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        PaymentVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderPaymentId": "PAYMENT-0001",
         *       "paymentRequestDate": "2015-10-03T15:29:16.333",
         *       "biller": {
         *         "id": "1234",
         *         "name": "John Doe"
         *       },
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "references": [
         *         {
         *           "index": 1,
         *           "name": "VISA Card Number",
         *           "value": 4079253400002323
         *         }
         *       ]
         *     } */
        PayBillsViaPartnerRequestv1: {
            senderPaymentId?: string;
            paymentRequestDate?: string;
            biller?: {
                id?: string;
                name?: string;
            };
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            references?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "paymentId": "UB2541110131423",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderPaymentId": "PAYMENT-0001"
         *     } */
        PayBillsViaPartnerResponsev1: {
            /**
             * @description UnionBank generated id
             * @example UBP000001
             */
            paymentId?: string;
            /**
             * @description UTC date and time the payment was created
             * @example 2017-10-10T12:11:50Z
             */
            createdAt?: string;
            /**
             * @description Payment status
             * @example Payment Succesful
             */
            state?: string;
            /**
             * @description Unique id generated by the app
             * @example 0001
             */
            senderPaymentId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        PayBillsViaPartnerErrorsv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "biller": {
         *         "id": "1234",
         *         "name": "Telecom Biller"
         *       },
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "references": [
         *         {
         *           "index": "1",
         *           "name": "VISA Card Number",
         *           "value": "4079253400002323"
         *         }
         *       ]
         *     } */
        PayBillsViaPartnerRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            biller?: {
                id?: string;
                name?: string;
            };
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            references?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "ubpTranId": "UB2541110131423",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderRefId": "12345678"
         *     } */
        PayBillsViaPartnerResponse: {
            /** @example UBP000001 */
            ubpTranId?: string;
            /** @example 2017-10-10T12:11:50Z */
            createdAt?: string;
            /** @example Payment Succesful */
            state?: string;
            /** @example 0001 */
            senderRefId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        PayBillsViaPartnerErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "username": "jdelacruz",
         *       "password": "password",
         *       "account_name": "Juan Dela Cruz"
         *     } */
        SandboxRequest: {
            username?: string;
            password?: string;
            account_name?: string;
        };
        /** @example {
         *       "msg": "Test Account successfully created.",
         *       "data": {
         *         "user": {
         *           "username": "johndoe",
         *           "password": "test"
         *         },
         *         "account": {
         *           "account_number": "103857217531",
         *           "card_number": "109956781650",
         *           "account_name": "John Doe",
         *           "firstName": "John",
         *           "lastName": "Doe",
         *           "account_code": "83554",
         *           "account_type": "Savings Account",
         *           "status": "Active",
         *           "branch": "8554",
         *           "balance": "100000"
         *         }
         *       },
         *       "code": 200,
         *       "status": 1
         *     } */
        SandboxResponse: {
            msg?: string;
            data?: {
                user?: {
                    username?: string;
                    password?: string;
                };
                account?: {
                    account_number?: string;
                    card_number?: string;
                    account_name?: string;
                    firstName?: string;
                    lastName?: string;
                    account_code?: string;
                    account_type?: string;
                    status?: string;
                    branch?: string;
                    balance?: string;
                };
            };
            code?: number;
            status?: number;
        };
        /** @example {
         *       "msg": "Fail",
         *       "error": "Username already taken. Try to use another one.",
         *       "code": 404,
         *       "status": 0
         *     } */
        SandboxErrors: {
            msg?: string;
            error?: string;
            code?: number;
            status?: number;
        };
        /** @example {
         *       "appliationId": "1234567890",
         *       "solCode": "1",
         *       "partnerCode": "partner",
         *       "customer": {
         *         "name": {
         *           "first": "Juan",
         *           "last": "dela Cruz",
         *           "middle": "TEST"
         *         },
         *         "title": "MR",
         *         "sex": "1",
         *         "birthDate": "1992-10-10",
         *         "birthPlace": "Manila",
         *         "nationality": "PHL",
         *         "civilStatus": "1",
         *         "presentAddress": {
         *           "line1": "Reliance",
         *           "line2": "",
         *           "city": "6811",
         *           "province": "6800",
         *           "zipCode": "6811"
         *         },
         *         "homeLengthOfStay": "5",
         *         "homeOwnership": "0",
         *         "homePhoneNumber": "5111111",
         *         "mobileNumber": "639277251453",
         *         "email": "juan@gmail.com",
         *         "education": "C",
         *         "motherMaidenName": "Go",
         *         "dependentsNumber": "2",
         *         "sss": "123",
         *         "tin": "123",
         *         "gsis": "123",
         *         "getGoNumber": "3427895020093440"
         *       },
         *       "employment": {
         *         "name": "UnionBank",
         *         "position": 91,
         *         "type": "3",
         *         "occupationGroup": "2",
         *         "organizationType": "4",
         *         "workNature": "19",
         *         "status": "1",
         *         "address": {
         *           "line1": "Meralco",
         *           "line2": "",
         *           "city": "6811",
         *           "province": "6800",
         *           "zipCode": "6811"
         *         },
         *         "phoneNumber": "5111111",
         *         "lengthOfService": "2",
         *         "annualIncome": "250000",
         *         "annualIncomeOtherSource": "100",
         *         "otherSourceOfIncome": ""
         *       },
         *       "card": {
         *         "product": "4403",
         *         "type": "MC",
         *         "feeCode": "1",
         *         "digitalSoa": "1",
         *         "promoCode": "kepnah",
         *         "billingAddress": "H",
         *         "deliveryAddress": "H",
         *         "embossName": "JUAN DELA CRUZ"
         *       },
         *       "creditCards": {
         *         "cardNumber": "1212113",
         *         "cardLimit": "1000",
         *         "cardIssuance": "2015-03-02",
         *         "bank": "BDO"
         *       }
         *     } */
        CreditCardAppRequest: {
            appliationId?: string;
            solCode?: string;
            partnerCode?: string;
            customer?: {
                name?: {
                    first?: string;
                    last?: string;
                    middle?: string;
                };
                title?: string;
                sex?: string;
                birthDate?: string;
                birthPlace?: string;
                nationality?: string;
                civilStatus?: string;
                presentAddress?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                };
                homeLengthOfStay?: string;
                homeOwnership?: string;
                homePhoneNumber?: string;
                mobileNumber?: string;
                email?: string;
                education?: string;
                motherMaidenName?: string;
                dependentsNumber?: string;
                sss?: string;
                tin?: string;
                gsis?: string;
                getGoNumber?: string;
            };
            employment?: {
                name?: string;
                position?: string;
                type?: string;
                occupationGroup?: string;
                organizationType?: string;
                workNature?: string;
                status?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                };
                phoneNumber?: string;
                lengthOfService?: string;
                annualIncome?: string;
                annualIncomeOtherSource?: string;
                otherSourceOfIncome?: string;
            };
            card?: {
                product?: string;
                type?: string;
                feeCode?: string;
                digitalSoa?: string;
                promoCode?: string;
                billingAddress?: string;
                deliveryAddress?: string;
                embossName?: string;
            };
            creditCards?: {
                cardNumber?: string;
                cardLimit?: string;
                cardIssuance?: string;
                bank?: string;
            };
        };
        /** @example {
         *       "applicationId": "1234567890"
         *     } */
        CreditCardAppResponse: {
            applicationId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "XXX",
         *           "message": "Error message"
         *         }
         *       ]
         *     } */
        CreditCardAppErrors: {
            errors?: {
                code?: string;
                message?: string;
                param?: {
                    field?: string;
                    desc?: string;
                }[];
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "01",
         *           "desc": "Agriculture, Hunting, Forestry"
         *         },
         *         {
         *           "code": "23",
         *           "desc": "Art&Antique,Jewelry/PreciousMetal dealer"
         *         },
         *         {
         *           "code": "22",
         *           "desc": "Casino, E-Gaming Operations"
         *         }
         *       ]
         *     } */
        LibraryResponse: {
            records?: {
                code?: string;
                desc?: string;
            }[];
        };
        /** @example {
         *       "customer": {
         *         "name": {
         *           "first": "Juan",
         *           "last": "dela Cruz",
         *           "middle": ""
         *         },
         *         "title": "MR",
         *         "birthPlace": "Manila",
         *         "nationality": "FILIPINO",
         *         "sex": "1",
         *         "civilStatus": "0",
         *         "birthDate": "1992-08-25",
         *         "fundSource": "4<$>0",
         *         "primaryContact": {
         *           "email": "juan@gmail.com",
         *           "homePhoneNumber": "3232244512",
         *           "mobileNumber": "9277251453"
         *         },
         *         "secondaryContact": {
         *           "email": "juan@gmail.com",
         *           "homePhoneNumber": "3232244512",
         *           "mobileNumber": "9277251453"
         *         },
         *         "presentedId": "TIN<@>123456<$>SSSS<@><$>GSIT<@>",
         *         "presentAddress": {
         *           "line1": "SAAC 2",
         *           "line2": "MACTAN",
         *           "city": "6016A",
         *           "province": "6000",
         *           "zipCode": "1550"
         *         },
         *         "permanentAddress": {
         *           "line1": "SAAC 2",
         *           "line2": "MACTAN",
         *           "city": "6016A",
         *           "province": "6000",
         *           "zipCode": "1550"
         *         }
         *       },
         *       "employment": {
         *         "status": "1",
         *         "occupation": "1",
         *         "workNature": "1",
         *         "company": "UnionBank",
         *         "address": {
         *           "line1": "Meralco",
         *           "line2": "",
         *           "city": "6016A",
         *           "province": "6000",
         *           "zipCode": "1551"
         *         },
         *         "phoneNumber": "3232244512"
         *       },
         *       "card": {
         *         "claimBranch": "1112",
         *         "getGoFlag": "0",
         *         "getGoNumber": "",
         *         "embossName": "JUAN DELA CRUZ"
         *       }
         *     } */
        DebitGetGoAppRequest: {
            customer?: {
                name?: {
                    first?: string;
                    last?: string;
                    middle?: string;
                };
                title?: string;
                birthPlace?: string;
                nationality?: string;
                sex?: string;
                civilStatus?: string;
                birthDate?: string;
                fundSource?: string;
                primaryContact?: {
                    email?: string;
                    homePhoneNumber?: string;
                    mobileNumber?: string;
                };
                secondaryContact?: {
                    email?: string;
                    homePhoneNumber?: string;
                    mobileNumber?: string;
                };
                presentedId?: string;
                presentAddress?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                };
                permanentAddress?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                };
            };
            employment?: {
                status?: string;
                occupation?: string;
                workNature?: string;
                company?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                };
                phoneNumber?: string;
            };
            card?: {
                claimBranch?: string;
                getGoFlag?: string;
                getGoNumber?: string;
                embossName?: string;
            };
        };
        /** @example {
         *       "applicationId": "16C84FB90-12C4-11E41",
         *       "message": "Client application 16C84FB90-12C4-11E41 has been saved."
         *     } */
        DebitGetGoAppResponse: {
            applicationId?: string;
            message?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "XXX",
         *           "message": "Error message here"
         *         }
         *       ]
         *     } */
        DebitGetGoAppErrors: {
            errors?: {
                code?: number;
                message?: string;
            }[];
        };
        /** @example [
         *       {
         *         "type": "AVAIL",
         *         "amount": "100",
         *         "currency": "PHP"
         *       }
         *     ] */
        AccountBalances: {
            type?: string;
            amount?: string;
            currency?: string;
        }[];
        /** @example {
         *       "errors": [
         *         {
         *           "code": "1",
         *           "message": "Account not found.",
         *           "description": ""
         *         }
         *       ]
         *     } */
        AccountBalancesErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example [
         *       {
         *         "type": "AVAIL",
         *         "amount": "100",
         *         "currency": "PHP"
         *       }
         *     ] */
        CreditCardInquiryBalances: {
            type?: string;
            amount?: string;
            currency?: string;
        }[];
        /** @example [
         *       {
         *         "cardNumber": "440452xxxxxx0001",
         *         "type": "S",
         *         "primaryCard": "440452xxxxxx0002"
         *       },
         *       {
         *         "cardNumber": "440452xxxxxx0003",
         *         "type": "B",
         *         "primaryCard": ""
         *       }
         *     ] */
        CreditCardInquiryCards: {
            cardNumber?: string;
            type?: string;
            primaryCard?: string;
        }[];
        /** @example {
         *       "errors": [
         *         {
         *           "code": "SYS",
         *           "message": "We are unable to process your transaction",
         *           "description": "Runtime error has occured",
         *           "details": {}
         *         }
         *       ]
         *     } */
        CreditCardInquiryErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
                details?: Record<string, never>;
            }[];
        };
        /** @example [
         *       {
         *         "statementNo": 9246,
         *         "recordType": "1",
         *         "psIndicator": "0",
         *         "transactionSeq": "0001",
         *         "customerOrg": "001",
         *         "customerNo": "440453xxxxxx0001",
         *         "accountOrg": "001",
         *         "accountType": "1109",
         *         "accountNo": "440453xxxxxx0001",
         *         "accountCreditLimit": 500,
         *         "transactionDate": "",
         *         "postDate": "",
         *         "referenceNo": "",
         *         "description": "PREVIOUS BALANCE",
         *         "origCurrency": "PHP",
         *         "origAmount": "",
         *         "settlementAmount": "6.84",
         *         "subTotal": "0.00",
         *         "totalBalance": 0,
         *         "transactionCode": "",
         *         "cutOff": "20",
         *         "date": "2017-11-21T10:37:37.870.000"
         *       },
         *       {
         *         "statementNo": 9246,
         *         "recordType": "1",
         *         "psIndicator": "0",
         *         "transactionSeq": "0002",
         *         "customerOrg": "001",
         *         "customerNo": "440453xxxxxx0001",
         *         "accountOrg": "001",
         *         "accountType": "1109",
         *         "accountNo": "440453xxxxxx0001",
         *         "accountCreditLimit": 500,
         *         "transactionDate": "10/24/17",
         *         "postDate": "10/24/17",
         *         "referenceNo": "",
         *         "description": "AIRLINE AIR, INC.-EXP",
         *         "origCurrency": "PHP",
         *         "origAmount": "9.19",
         *         "settlementAmount": "9.19",
         *         "subTotal": "0.00",
         *         "totalBalance": 0,
         *         "tansactionCode": "",
         *         "cutOff": "20",
         *         "date": "2017-11-21T10:37:37.883.000"
         *       }
         *     ] */
        CreditCardInquiryStatements: {
            statementNo?: string;
            recordType?: string;
            psIndicator?: string;
            transactionSeq?: string;
            customerOrg?: string;
            customerNo?: string;
            accountOrg?: string;
            accountType?: string;
            accountNo?: string;
            accountCreditLimit?: number;
            transactionDate?: string;
            postDate?: string;
            referenceNo?: string;
            description?: string;
            origCurrency?: string;
            origAmount?: string;
            settlementAmount?: string;
            subTotal?: string;
            totalBalance?: string;
            transactionCode?: string;
            cutOff?: string;
            date?: string;
        }[];
        /** @example {
         *       "cardNumber": "440453xxxxxx0001",
         *       "minAmountDue": "0.00",
         *       "totalAmountDue": "-19.63",
         *       "statementBalance": "-19.63",
         *       "paymentDueDate": "2017-12-08T10:14:32.000",
         *       "statementDate": "2017-12-08T10:14:32.000",
         *       "previousBalance": "6.84",
         *       "purchasesAdvances": "16.65",
         *       "paymentsCredits": "-43.12",
         *       "serviceCharges": "0.00",
         *       "interestCharges": "0.00"
         *     } */
        CreditCardInquiryStatementSummary: {
            cardNumber?: string;
            minAmountDue?: string;
            totalAmountDue?: string;
            statementBalance?: string;
            paymentDueDate?: string;
            statementDate?: string;
            previousBalance?: string;
            purchasesAdvances?: string;
            paymentsCredits?: string;
            serviceCharges?: string;
            interestCharges?: string;
        };
        /** @example [
         *       {
         *         "cardNumber": "440453xxxxxx0001",
         *         "postDate": "2017-09-30T00:00:00.000.000",
         *         "batchNo": 578,
         *         "transactionType": "0",
         *         "transactionAmount": -12750,
         *         "transactionRef": "9999997273578",
         *         "transactionDesc": "440453xxxxxx0001 - DEPT BILLS PAYMENT -CAS"
         *       },
         *       {
         *         "cardNumber": "440453xxxxxx0001",
         *         "postDate": "2017-10-06T00:00:00.000.000",
         *         "batchNo": 578,
         *         "transactionType": "0",
         *         "transactionAmount": -3000,
         *         "transactionRef": "9999997279578",
         *         "transactionDesc": "440453xxxxxx0001 - DEPT BILLS PAYMENT -CAS"
         *       }
         *     ] */
        CreditCardInquiryUnbilled: {
            cardNumber?: string;
            postDate?: string;
            batchNo?: number;
            transactionType?: string;
            transactionAmount?: number;
            transactionRef?: string;
            transactionDesc?: string;
        }[];
        /** @example {
         *       "senderTransferId": "TRANSFER-0001",
         *       "transferRequestDate": "2015-10-03T15:29:16.333",
         *       "sender": {
         *         "name": "Juan Cruz",
         *         "address": {
         *           "line1": "GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipCode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": 107324511489,
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "3000.00",
         *         "currency": "PHP",
         *         "receivingBank": "161414",
         *         "purpose": "1001",
         *         "instructions": "instructions data"
         *       }
         *     } */
        OnlineInstapayRequestv1: {
            senderTransferId?: number;
            transferRequestDate?: string;
            sender?: {
                name?: string;
                address?: {
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    line1?: string;
                    line2?: string;
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: number;
                name?: string;
                address?: {
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    line1?: string;
                    line2?: string;
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "transferId": "UB4633360474835",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Credited Beneficiary Account",
         *       "senderTransferId": "TRANSFER-0001"
         *     } */
        OnlineInstapayResponsev1: {
            transferId?: string;
            createdAt?: string;
            state?: string;
            senderTransferId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "400",
         *           "message": "Bad Request",
         *           "description": ""
         *         }
         *       ]
         *     } */
        OnlineInstapayErrorv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "transferId": "UB4633360474835",
         *             "senderTransferId": "12345678",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        OnlineInstapayErrorv1500: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    transferId?: string;
                    senderTransferId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": 29609,
         *           "bank": "China Banking Corporation"
         *         },
         *         {
         *           "code": 45666,
         *           "bank": "Equicom Savings Bank, Inc."
         *         }
         *       ],
         *       "totalRecords": 2
         *     } */
        OnlineInstapayBanksv1: {
            records?: {
                code?: number;
                bank?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB4633360474835",
         *           "type": "INSTAPAY",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Credited Beneficiary Account",
         *           "senderTransferId": "TRANSFER-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        InstapayVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderTransferId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": 321,
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "sender": {
         *         "name": "Juan Cruz",
         *         "address": {
         *           "line1": "GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipCode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "107324511489",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipCode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "remittance": {
         *         "amount": "30.00",
         *         "currency": "PHP",
         *         "receivingBank": 161312,
         *         "purpose": 1001,
         *         "instructions": "instructions data"
         *       }
         *     } */
        OnlineInstapayRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            sender?: {
                name?: string;
                address?: {
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    line1?: string;
                    line2?: string;
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: number;
                name?: string;
                address?: {
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    line1?: string;
                    line2?: string;
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "ubpTranId": "UB4633360474835",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Credited Beneficiary Account",
         *       "senderRefId": "12345678"
         *     } */
        OnlineInstapayResponse: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "400",
         *           "message": "Bad Request",
         *           "description": ""
         *         }
         *       ]
         *     } */
        OnlineInstapayError: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "ubpTranId": "UB4633360474835",
         *             "senderRefId": "321",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        OnlineInstapayError500: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    ubpTranId?: string;
                    senderRefId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": 161362,
         *           "bank": "Standard Chartered Bank"
         *         },
         *         {
         *           "code": 161365,
         *           "bank": "United Overseas Bank"
         *         }
         *       ],
         *       "totalRecords": 2
         *     } */
        OnlineInstapayBanks: {
            records?: {
                code?: number;
                bank?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB4633360474835",
         *           "type": "INSTAPAY",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Credited Beneficiary Account",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": "1"
         *     } */
        InstapayVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "1001",
         *           "description": "Donation"
         *         },
         *         {
         *           "code": "1002",
         *           "description": "Payment"
         *         },
         *         {
         *           "code": "1003",
         *           "description": "Fund Transfer"
         *         }
         *       ],
         *       "totalRecords": "3"
         *     } */
        OnlineInstapayLibraries: {
            records?: {
                code?: string;
                description?: string;
            }[];
            totalRecords?: string;
        };
        /** @example {
         *       "senderTransferId": "TRANSFER-0001",
         *       "transferRequestDate": "2015-10-03T15:29:16.333",
         *       "sender": {
         *         "name": "Juan Cruz",
         *         "address": {
         *           "line1": "GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipCode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": 107324511489,
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "3000.00",
         *         "currency": "PHP",
         *         "receivingBank": "161414",
         *         "purpose": "1001",
         *         "instructions": "instructions data"
         *       }
         *     } */
        InstapayRequestv1: {
            senderTransferId?: number;
            transferRequestDate?: string;
            sender?: {
                name?: string;
                address?: {
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    line1?: string;
                    line2?: string;
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: number;
                name?: string;
                address?: {
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    line1?: string;
                    line2?: string;
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "transferId": "UB4633360474835",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Credited Beneficiary Account",
         *       "senderTransferId": "TRANSFER-0001"
         *     } */
        InstapayResponsev1: {
            transferId?: string;
            createdAt?: string;
            state?: string;
            senderTransferId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "400",
         *           "message": "Bad Request",
         *           "description": ""
         *         }
         *       ]
         *     } */
        InstapayErrorsv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "transferId": "UB4633360474835",
         *             "senderTransferId": "TRANSFER-0001",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        InstapayErrorv1500: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    transferId?: string;
                    senderTransferId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "traceNo": 8825,
         *       "invoiceNo": "92"
         *     } */
        InstapayInquireResponsev1: {
            traceNo?: string;
            invoiceNo?: string;
        };
        /** @example {
         *       "senderRefId": 321,
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "sender": {
         *         "name": "Juan Cruz",
         *         "address": {
         *           "line1": "GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipCode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "107324511489",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipCode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "remittance": {
         *         "amount": "30.00",
         *         "currency": "PHP",
         *         "receivingBank": 161312,
         *         "purpose": 1001,
         *         "instructions": "instructions data"
         *       }
         *     } */
        InstapayRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            sender?: {
                name?: string;
                address?: {
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    line1?: string;
                    line2?: string;
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: number;
                name?: string;
                address?: {
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    line1?: string;
                    line2?: string;
                    /** @description Total length of line1 and city should not exceed 19 characters */
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "ubpTranId": "UB4633360474835",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Credited Beneficiary Account",
         *       "senderRefId": "12345678"
         *     } */
        InstapayResponse: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "400",
         *           "message": "Bad Request",
         *           "description": ""
         *         }
         *       ]
         *     } */
        InstapayErrors: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "162",
         *           "message": "The account does not exist.",
         *           "details": {
         *             "ubpTranId": "UB4633360474835",
         *             "senderRefId": "321",
         *             "message": "Failed to Credit Beneficiary Account"
         *           }
         *         }
         *       ]
         *     } */
        InstapayError500: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    ubpTranId?: string;
                    senderRefId?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "traceNo": 8825,
         *       "invoiceNo": "92"
         *     } */
        InstapayInquireResponse: {
            traceNo?: string;
            invoiceNo?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "1001",
         *           "description": "Donation"
         *         },
         *         {
         *           "code": "1002",
         *           "description": "Payment"
         *         },
         *         {
         *           "code": "1003",
         *           "description": "Fund Transfer"
         *         }
         *       ],
         *       "totalRecords": "3"
         *     } */
        InstapayLibraries: {
            records?: {
                code?: string;
                description?: string;
            }[];
            totalRecords?: string;
        };
        /** @example {
         *       "senderRefId": "TEST321",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "sender": {
         *         "name": "Juan Cruz",
         *         "address": {
         *           "line1": "GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipCode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "109450542671",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipCode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "remittance": {
         *         "amount": "30.00",
         *         "currency": "PHP",
         *         "receivingBank": 161312,
         *         "purpose": 1001,
         *         "instructions": "instructions data"
         *       }
         *     } */
        InstapayRequest3: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Object containing the details of the sender */
            sender?: {
                /** @description Name of the sender. Maximum of 250 alphanumeric characters(a-zA-Z0-9.). */
                name?: string;
                /** @description Object containing the details of the sender's address. */
                address?: {
                    /** @description Address specifics of sender. Maximum of 19(line1 + city) alphanumeric characters(a-zA-Z0-9.). */
                    line1?: string;
                    /** @description Address specifics of sender. Maximum of 100 alphanumeric characters (a-zA-Z0-9.). */
                    line2?: string;
                    /** @description City of sender. Maximum of 19(line1 + city) alphanumeric characters (a-zA-Z0-9.). */
                    city?: string;
                    /** @description Province of sender. Maximum of 100 alphanumeric characters (a-zA-Z0-9.). */
                    province?: string;
                    /** @description Zipcode of sender. Maximum of 100 numeric characters (0-9). */
                    zipCode?: number;
                    /** @description Country of sender. Maximum of 250 alphanumeric characters (a-zA-Z0-9.). */
                    country?: string;
                };
            };
            /** @description Object containing the details of the recipient */
            beneficiary?: {
                /** @description Bank account number of recipient. Maximum of 200 alphanumeric characters (0-9). */
                accountNumber?: string;
                /** @description Name of recipient. Maximum of 300 characters (a-zA-Z). */
                name?: string;
                /** @description Object containing the details of the recipient's address */
                address?: {
                    /** @description Address specifics of recipient. Maximum of 100 alphanumeric characters(#.,`'!~'^%$#()&*|\/ñÑA-Za-z0-9 -). */
                    line1?: string;
                    /** @description Address specifics of recipient. Maximum of 100 alphanumeric characters(#.,`'!~'^%$#()&*|\/ñÑA-Za-z0-9 -). */
                    line2?: string;
                    /** @description City of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    city?: string;
                    /** @description Province of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    province?: string;
                    /** @description Zipcode of recipient. Maximum of 100 numeric characters(0-9). */
                    zipCode?: number;
                    /** @description Country of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    country?: string;
                };
            };
            /** @description Object containing the details of the transaction */
            remittance?: {
                /** @description Amount to be sent to recipient. Maximum of 100 alphanumeric characters(0-9). */
                amount?: string;
                /** @description Currency used in the transaction. Accepted values = "PHP". Maximum of 3 characters(A-Z). */
                currency?: string;
                /** @description Code of recipient's Bank. Bank codes can be obtained using the Instapay List of Receiving Bank's endpoint. Maximum of 100 alphanumeric characters(a-zA-Z0-9-). */
                receivingBank?: string;
                /** @description Code used to identifiy the purpose of a transaction. Purpose codes can be obtained using the Instapay List of Libraries endpoint. Maximum of 4 characters(0-9). */
                purpose?: string;
                /** @description Additional information of the transaction. Maximum of 4 alphanumeric characters(a-zA-Z0-9-). */
                instructions?: string;
            };
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": 2019082,
         *       "tranRequestDate": "2019-08-16T07:37:16.333",
         *       "ubpTranId": "UB1706",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "5d71c496-6fe6-4ff6-86f0-d6439ad38bd0",
         *       "coreRefId": "2311455531049064728",
         *       "traceNo": "211271"
         *     } */
        InstapayResponse3: {
            code?: string;
            senderRefId?: number;
            tranRequestDate?: string;
            ubpTranId?: string;
            state?: string;
            uuid?: string;
            coreRefId?: string;
            traceNo?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "NC",
         *           "description": "Core Network/Connectivity Error",
         *           "details": {
         *             "senderRefId": 2019082,
         *             "tranRequestDate": "2019-08-16T07:37:16.333",
         *             "message": "URL Open Error",
         *             "uuid": "794e441e-f1ec-4a27-b080-c0ceafc285a4",
         *             "coreCode": "500"
         *           }
         *         }
         *       ]
         *     } */
        InstapayResponseNC3: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: number;
                    tranRequestDate?: string;
                    message?: string;
                    uuid?: string;
                    coreCode?: string;
                };
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "SC",
         *           "description": "Sent for processing",
         *           "details": {
         *             "senderRefId": 2019082,
         *             "tranRequestDate": "2019-08-16T07:37:16.333",
         *             "message": "RCVR CHK IF POSTD-RC08/68",
         *             "uuid": "844ac0b5-cc2b-4243-a28a-fcc10baa3be7",
         *             "coreCode": "C",
         *             "coreRefId": "CONVB190813000169",
         *             "traceNo": "212374",
         *             "ubpTranId": "UB8129"
         *           }
         *         }
         *       ]
         *     } */
        InstapayResponseSC3: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: number;
                    tranRequestDate?: string;
                    message?: string;
                    uuid?: string;
                    coreCode?: string;
                    coreRefId?: string;
                    traceNo?: string;
                    ubpTranId?: string;
                };
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "SP",
         *           "description": "Sent for processing",
         *           "details": {
         *             "senderRefId": 2019082,
         *             "tranRequestDate": "2019-08-16T07:37:16.333",
         *             "message": "Problem occured on the backend side. Please contact Unionbank.",
         *             "uuid": "524db893-f3ea-4168-b6fb-f62bcc8b6129",
         *             "coreCode": "I",
         *             "coreRefId": "",
         *             "traceNo": "",
         *             "ubpTranId": "UB1741"
         *           }
         *         }
         *       ]
         *     } */
        InstapayResponseSP3: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: number;
                    tranRequestDate?: string;
                    message?: string;
                    uuid?: string;
                    coreCode?: string;
                    coreRefId?: string;
                    traceNo?: string;
                    ubpTranId?: string;
                };
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "TF",
         *           "description": "Failed to credit Beneficiary Account",
         *           "details": {
         *             "senderRefId": 2019082,
         *             "tranRequestDate": "2019-08-16T07:37:16.333",
         *             "message": "UNABLE TO PROCESS",
         *             "uuid": "753a8744-4b01-4c86-9ca1-95a3f87e4a2e",
         *             "coreCode": "F",
         *             "coreRefId": "CONVB190808000001",
         *             "traceNo": "210939",
         *             "ubpTranId": "UB136",
         *             "reversalUbpTranId": "UB137"
         *           }
         *         }
         *       ]
         *     } */
        InstapayResponseTF3: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: number;
                    tranRequestDate?: string;
                    message?: string;
                    uuid?: string;
                    coreCode?: string;
                    coreRefId?: string;
                    traceNo?: string;
                    ubpTranId?: string;
                    reversalUbpTranId?: string;
                };
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "148120",
         *           "bank": "Sun Savings Bank",
         *           "brstn": null
         *         },
         *         {
         *           "code": "161207",
         *           "bank": "Sterling Bank Of Asia",
         *           "brstn": 11190019
         *         },
         *         {
         *           "code": "161233",
         *           "bank": "Malayan Bank Smb",
         *           "brstn": null
         *         },
         *         {
         *           "code": "161243",
         *           "bank": "Rcbc Savings Bank Inc.",
         *           "brstn": null
         *         },
         *         {
         *           "code": "161311",
         *           "bank": "Asia United Bank",
         *           "brstn": "011020011"
         *         },
         *         {
         *           "code": "161312",
         *           "bank": "Banco De Oro Unibank, Inc.",
         *           "brstn": "010530667"
         *         },
         *         {
         *           "code": "161317",
         *           "bank": "Bank Of Commerce",
         *           "brstn": "010440016"
         *         },
         *         {
         *           "code": "161319",
         *           "bank": "Bank Of The Philippine Islands",
         *           "brstn": 10040018
         *         },
         *         {
         *           "code": "161326",
         *           "bank": "Devt. Bank Of The Phils.",
         *           "brstn": 10590018
         *         },
         *         {
         *           "code": "161340",
         *           "bank": "Maybank Phils.,Inc.",
         *           "brstn": "010220016"
         *         },
         *         {
         *           "code": "161341",
         *           "bank": "Metropolitan Bank and Trust Co",
         *           "brstn": 10269996
         *         },
         *         {
         *           "code": "161345",
         *           "bank": "Phil. Bank Of Communications",
         *           "brstn": "010110016"
         *         },
         *         {
         *           "code": "161346",
         *           "bank": "Philippine National Bank",
         *           "brstn": 10080010
         *         },
         *         {
         *           "code": "161360",
         *           "bank": "Security Bank Corporation",
         *           "brstn": "010140015"
         *         },
         *         {
         *           "code": "161398",
         *           "bank": "Chinabank",
         *           "brstn": "10100013"
         *         },
         *         {
         *           "code": "161399",
         *           "bank": "Chinabank Savings",
         *           "brstn": "11129996"
         *         },
         *         {
         *           "code": "161400",
         *           "bank": "Chinatrust Banking Corp",
         *           "brstn": 10690015
         *         },
         *         {
         *           "code": "161401",
         *           "bank": "Eastwest Bank",
         *           "brstn": "10620014"
         *         },
         *         {
         *           "code": "161402",
         *           "bank": "Equicom Savings Bank",
         *           "brstn": "10960017"
         *         },
         *         {
         *           "code": "161403",
         *           "bank": "Omnipay",
         *           "brstn": null
         *         },
         *         {
         *           "code": "161404",
         *           "bank": "Paymaya",
         *           "brstn": null
         *         },
         *         {
         *           "code": "161405",
         *           "bank": "PSBank",
         *           "brstn": "10470992"
         *         },
         *         {
         *           "code": "161406",
         *           "bank": "Robinsons Bank",
         *           "brstn": "11070016"
         *         },
         *         {
         *           "code": "161407",
         *           "bank": "UCPB",
         *           "brstn": "10299995"
         *         },
         *         {
         *           "code": "161408",
         *           "bank": "UnionBank",
         *           "brstn": "10419995"
         *         },
         *         {
         *           "code": "161409",
         *           "bank": "RCBC Bank",
         *           "brstn": "10280014"
         *         },
         *         {
         *           "code": "161410",
         *           "bank": "Landbank Of The Phils",
         *           "brstn": "10350025"
         *         },
         *         {
         *           "code": "161411",
         *           "bank": "Yuanta Savings Bank",
         *           "brstn": null
         *         },
         *         {
         *           "code": "161412",
         *           "bank": "Philtrust Bank",
         *           "brstn": "10090039"
         *         },
         *         {
         *           "code": "161414",
         *           "bank": "G-Xchange, Inc.",
         *           "brstn": null
         *         },
         *         {
         *           "code": "161428",
         *           "bank": "DUNGGANUN BANK INC.",
         *           "brstn": 49020012
         *         },
         *         {
         *           "code": "161429",
         *           "bank": "ISLA BANK INC.",
         *           "brstn": null
         *         },
         *         {
         *           "code": "161430",
         *           "bank": "UCPB SAVINGS BANK",
         *           "brstn": null
         *         }
         *       ],
         *       "totalRecords": 34
         *     } */
        InstapayBankResponse3: {
            records?: {
                code?: string;
                bank?: string;
                brstn?: unknown;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "1001",
         *           "description": "Donation"
         *         },
         *         {
         *           "code": "1002",
         *           "description": "Payment"
         *         },
         *         {
         *           "code": "1003",
         *           "description": "Fund Transfer"
         *         }
         *       ],
         *       "totalRecords": "3"
         *     } */
        InstapayLibraryResponse3: {
            records?: {
                code?: string;
                description?: string;
            }[];
            totalRecords?: string;
        };
        /** @example {
         *       "errors": {
         *         "code": "-1",
         *         "message": "Missing invalid parameters"
         *       }
         *     } */
        PrepaidTopUpI2CErrorv1: {
            errors?: {
                code?: string;
                message?: string;
            }[];
        };
        /** @example {
         *       "senderPaymentId": "PAYMENT-0001",
         *       "paymentRequestDate": "2018-01-16T11:17:15.099",
         *       "amount": 100,
         *       "cardNumber": 6019990220000887,
         *       "fee": "Y"
         *     } */
        PrepaidTopUpI2CRequestv1: {
            senderPaymentId?: string;
            paymentRequestDate?: string;
            amount?: string;
            cardNumber?: string;
            fee?: string;
        };
        /** @example {
         *       "paymentId": "UB8121946416795",
         *       "createdAt": "2018-01-16T11:17:15.099",
         *       "state": "Payment Successful",
         *       "senderPaymentId": "PAYMENT-0001"
         *     } */
        PrepaidTopUpI2CResponsev1: {
            paymentId?: string;
            createdAt?: string;
            state?: string;
            senderPaymentId?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB8121946416795",
         *           "type": "PAYMENTS_I2C",
         *           "createdAt": "2018-01-16T11:17:15.099",
         *           "state": "Payment Successful",
         *           "senderPaymentId": "PAYMENT-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        PrepaidTopUpI2CVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderPaymentId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "0",
         *           "message": "All transactions not allowed",
         *           "details": {
         *             "status": "limited"
         *           }
         *         }
         *       ]
         *     } */
        StatusErrorv1: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    status?: string;
                };
            }[];
        };
        /** @example {
         *       "status": "Open",
         *       "message": "All transactions allowed"
         *     } */
        StatusResponsev1: {
            status?: string;
            message?: string;
        };
        /** @example {
         *       "loadableAmount": {
         *         "minimum": "100.0",
         *         "maximum": "100000.0"
         *       }
         *     } */
        CardLimitv1: {
            loadableAmount?: {
                minimum?: string;
                maximum?: string;
            };
        };
        /** @example {
         *       "errors": {
         *         "code": "-1",
         *         "message": "Missing invalid parameters"
         *       }
         *     } */
        PrepaidTopUpI2CError: {
            errors?: {
                code?: string;
                message?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": 12345678,
         *       "tranRequestDate": "2018-01-16T11:17:15.099",
         *       "amount": 100,
         *       "cardNumber": 6019990220000887,
         *       "fee": "Y"
         *     } */
        PrepaidTopUpI2CRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: string;
            cardNumber?: string;
            fee?: string;
        };
        /** @example {
         *       "ubpTranId": "UB8121946416795",
         *       "createdAt": "2018-01-16T11:17:15.099",
         *       "state": "Payment Successful",
         *       "senderRefId": "12345678"
         *     } */
        PrepaidTopUpI2CResponse: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB8121946416795",
         *           "type": "PAYMENTS_I2C",
         *           "createdAt": "2018-01-16T11:17:15.099",
         *           "state": "Payment Successful",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        PrepaidTopUpI2CVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "0",
         *           "message": "All transactions not allowed",
         *           "details": {
         *             "status": "limited"
         *           }
         *         }
         *       ]
         *     } */
        StatusError: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    status?: string;
                };
            }[];
        };
        /** @example {
         *       "status": "Open",
         *       "message": "All transactions allowed"
         *     } */
        StatusResponse: {
            status?: string;
            message?: string;
        };
        /** @example {
         *       "loadableAmount": {
         *         "minimum": "100.0",
         *         "maximum": "100000.0"
         *       }
         *     } */
        CardLimit: {
            loadableAmount?: {
                minimum?: string;
                maximum?: string;
            };
        };
        /** @example {
         *       "productCode": "15",
         *       "mobileNo": 9170000001
         *     } */
        PartnerBuyRequest: {
            productCode?: string;
            mobileNo?: string;
        };
        /** @example {
         *       "tranId": "00001"
         *     } */
        PartnerBuyResponse: {
            tranId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "0x2088",
         *           "message": "Insufficient loadwallet balance",
         *           "details": {}
         *         }
         *       ]
         *     } */
        PartnerBuyError: {
            errors?: {
                code?: string;
                message?: string;
                details?: Record<string, never>;
            }[];
        };
        /** @example [
         *         {
         *             "provider": "Globe",
         *             "codes": [
         *                 15,
         *                 20,
         *                 25,
         *                 30,
         *                 35,
         *                 40,
         *                 45,
         *                 50,
         *                 55,
         *                 60,
         *                 65,
         *                 70,
         *                 75,
         *                 80,
         *                 85,
         *                 90,
         *                 95,
         *                 100,
         *                 150
         *             ]
         *         },
         *         {
         *             "provider": "Sun",
         *             "codes": [
         *                 25,
         *                 50,
         *                 150,
         *                 450
         *             ]
         *         },
         *         {
         *             "provider": "Smart",
         *             "codes": [
         *                 15,
         *                 30,
         *                 50,
         *                 60,
         *                 100,
         *                 115,
         *                 200,
         *                 300,
         *                 500
         *             ]
         *         }
         *     ] */
        PartnerGetResponse: {
            provider?: string;
            codes?: number[];
        }[];
        /** @example {
         *       "errors": [
         *         {
         *           "code": "0x2088",
         *           "message": "Invalid Network",
         *           "details": {}
         *         }
         *       ]
         *     } */
        PartnerGetError: {
            errors?: {
                code?: string;
                message?: string;
                details?: Record<string, never>;
            }[];
        };
        /** @example {
         *       "date": "2015-10-03T15:29:16.333",
         *       "referenceId": "1234567890",
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "000000000001",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "100",
         *         "currency": "PHP",
         *         "receivingBank": "1",
         *         "purpose": "11 09",
         *         "instructions": "instructions data"
         *       }
         *     } */
        OnlinePDDTSTransferRequest: {
            date?: string;
            referenceId?: string;
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: string;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": "Reliance, Line 2, 1820A, 999, 987544, 122"
         *       },
         *       "beneficiary": {
         *         "name": "Rachelle",
         *         "address": "Reliance, Line 2, 1820A, 999, 987544, 122",
         *         "accountNumber": "100590250028"
         *       },
         *       "remittance": {
         *         "message": "~Record has been verified. ~Tran Id (Funding) is",
         *         "selFunction": "V",
         *         "chargeDetail": "OUR",
         *         "cableCharge": "100",
         *         "residence": "R",
         *         "currency": "PHP",
         *         "receivingBank": "1",
         *         "purpose": "11 09",
         *         "instructions": "1",
         *         "id": "E0591700000054",
         *         "amount": "100",
         *         "invoiceNumber": "1",
         *         "purposeDesc": ".",
         *         "date": ".",
         *         "status": "V"
         *       },
         *       "principalFund": {
         *         "conversion": {
         *           "rateCode": "BFT",
         *           "amount": "0.0000"
         *         },
         *         "accountCurrency": "PHP",
         *         "treasury": {
         *           "referenceNo": ".",
         *           "rate": "1"
         *         },
         *         "specialRate": ".",
         *         "transactionId": "UB33",
         *         "convertedAmount": "100.00"
         *       },
         *       "cableCharge": {
         *         "conversion": {
         *           "rateCode": "BFT",
         *           "amount": "0"
         *         },
         *         "accountCurrency": "PHP",
         *         "transactionId": "UB34",
         *         "treasury": {
         *           "referenceNo": ".",
         *           "rate": "1"
         *         },
         *         "specialRate": ".",
         *         "convertedAmount": "0"
         *       }
         *     } */
        OnlinePDDTSTransferResponse: {
            sender?: {
                name?: string;
                address?: string;
            };
            beneficiary?: {
                name?: string;
                address?: string;
                accountNumber?: string;
            };
            remittance?: {
                message?: string;
                selFunction?: string;
                chargeDetail?: string;
                cableCharge?: string;
                residence?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
                id?: string;
                amount?: string;
                invoiceNumber?: string;
                purposeDesc?: string;
                date?: string;
                status?: string;
            };
            principalFund?: {
                conversion?: {
                    rateCode?: string;
                    amount?: string;
                };
                accountCurrency?: string;
                treasury?: {
                    referenceNo?: string;
                    rate?: string;
                };
                specialRate?: string;
                transactionId?: string;
                convertedAmount?: string;
            };
            cableCharge?: {
                conversion?: {
                    rateCode?: string;
                    amount?: string;
                };
                accountCurrency?: string;
                transactionId?: string;
                treasury?: {
                    referenceNo?: string;
                    rate?: string;
                };
                specialRate?: string;
                convertedAmount?: string;
            };
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "-1",
         *           "message": "Invalid source account",
         *           "description": ""
         *         }
         *       ]
         *     } */
        OnlinePDDTSTransferError: {
            errors?: {
                code?: string;
                message?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "-1",
         *           "message": "Invalid source account",
         *           "description": ""
         *         }
         *       ]
         *     } */
        PDDTSTransfersViaPartnersErrors: {
            errors?: {
                code?: string;
                message?: string;
            }[];
        };
        /** @example {
         *       "date": "2015-10-03T15:29:16.333",
         *       "referenceId": "1234567890",
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "000000000001",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "100",
         *         "currency": "PHP",
         *         "receivingBank": "1",
         *         "purpose": "11 09",
         *         "instructions": "instructions data"
         *       }
         *     } */
        PDDTSTransfersViaPartnersRequest: {
            date?: string;
            referenceId?: string;
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: string;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": "Reliance, Line 2, 1820A, 999, 987544, 122"
         *       },
         *       "beneficiary": {
         *         "name": "Rachelle",
         *         "address": "Reliance, Line 2, 1820A, 999, 987544, 122",
         *         "accountNumber": "100590250028"
         *       },
         *       "remittance": {
         *         "message": "~Record has been verified. ~Tran Id (Funding) is",
         *         "selFunction": "V",
         *         "chargeDetail": "OUR",
         *         "cableCharge": "100",
         *         "residence": "R",
         *         "currency": "PHP",
         *         "receivingBank": "1",
         *         "purpose": "11 09",
         *         "instructions": "1",
         *         "id": "E0591700000054",
         *         "amount": "100",
         *         "invoiceNumber": "1",
         *         "purposeDesc": ".",
         *         "date": ".",
         *         "status": "V"
         *       },
         *       "principalFund": {
         *         "conversion": {
         *           "rateCode": "BFT",
         *           "amount": "0.0000"
         *         },
         *         "accountCurrency": "PHP",
         *         "treasury": {
         *           "referenceNo": ".",
         *           "rate": "1"
         *         },
         *         "specialRate": ".",
         *         "transactionId": "UB33",
         *         "convertedAmount": "100.00"
         *       },
         *       "cableCharge": {
         *         "conversion": {
         *           "rateCode": "BFT",
         *           "amount": "0"
         *         },
         *         "accountCurrency": "PHP",
         *         "transactionId": "UB34",
         *         "treasury": {
         *           "referenceNo": ".",
         *           "rate": "1"
         *         },
         *         "specialRate": ".",
         *         "convertedAmount": "0"
         *       }
         *     } */
        PDDTSTransfersViaPartnersResponse: {
            sender?: {
                name?: string;
                address?: string;
            };
            beneficiary?: {
                name?: string;
                address?: string;
                accountNumber?: string;
            };
            remittance?: {
                message?: string;
                selFunction?: string;
                chargeDetail?: string;
                cableCharge?: string;
                residence?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
                id?: string;
                amount?: string;
                invoiceNumber?: string;
                purposeDesc?: string;
                date?: string;
                status?: string;
            };
            principalFund?: {
                conversion?: {
                    rateCode?: string;
                    amount?: string;
                };
                accountCurrency?: string;
                treasury?: {
                    referenceNo?: string;
                    rate?: string;
                };
                specialRate?: string;
                transactionId?: string;
                convertedAmount?: string;
            };
            cableCharge?: {
                conversion?: {
                    rateCode?: string;
                    amount?: string;
                };
                accountCurrency?: string;
                transactionId?: string;
                treasury?: {
                    referenceNo?: string;
                    rate?: string;
                };
                specialRate?: string;
                convertedAmount?: string;
            };
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "-1",
         *           "message": "Invalid source account",
         *           "description": ""
         *         }
         *       ]
         *     } */
        OnlineEPCSTransfersErrors: {
            errors?: {
                code?: string;
                message?: string;
            }[];
        };
        /** @example {
         *       "date": "2015-10-03T15:29:16.333",
         *       "referenceId": "1234567890",
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "000000000001",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "100",
         *         "currency": "PHP",
         *         "receivingBank": "1",
         *         "purpose": "11 09",
         *         "instructions": "instructions data"
         *       }
         *     } */
        OnlineEPCSTransfersRequest: {
            date?: string;
            referenceId?: string;
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: string;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": "Reliance, Line 2, 1820A, 999, 987544, 122"
         *       },
         *       "beneficiary": {
         *         "name": "Rachelle",
         *         "address": "Reliance, Line 2, 1820A, 999, 987544, 122",
         *         "accountNumber": "100590250028"
         *       },
         *       "remittance": {
         *         "message": "~Record has been verified. ~Tran Id (Funding) is",
         *         "selFunction": "V",
         *         "chargeDetail": "OUR",
         *         "cableCharge": "100",
         *         "residence": "R",
         *         "currency": "PHP",
         *         "receivingBank": "1",
         *         "purpose": "11 09",
         *         "instructions": "1",
         *         "id": "E0591700000054",
         *         "amount": "100",
         *         "invoiceNumber": "1",
         *         "purposeDesc": ".",
         *         "date": ".",
         *         "status": "V"
         *       },
         *       "principalFund": {
         *         "conversion": {
         *           "rateCode": "BFT",
         *           "amount": "0.0000"
         *         },
         *         "accountCurrency": "PHP",
         *         "treasury": {
         *           "referenceNo": ".",
         *           "rate": "1"
         *         },
         *         "specialRate": ".",
         *         "transactionId": "UB33",
         *         "convertedAmount": "100.00"
         *       },
         *       "cableCharge": {
         *         "conversion": {
         *           "rateCode": "BFT",
         *           "amount": "0"
         *         },
         *         "accountCurrency": "PHP",
         *         "transactionId": "UB34",
         *         "treasury": {
         *           "referenceNo": ".",
         *           "rate": "1"
         *         },
         *         "specialRate": ".",
         *         "convertedAmount": "0"
         *       }
         *     } */
        OnlineEPCSTransfersResponse: {
            sender?: {
                name?: string;
                address?: string;
            };
            beneficiary?: {
                name?: string;
                address?: string;
                accountNumber?: string;
            };
            remittance?: {
                message?: string;
                selFunction?: string;
                chargeDetail?: string;
                cableCharge?: string;
                residence?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
                id?: string;
                amount?: string;
                invoiceNumber?: string;
                purposeDesc?: string;
                date?: string;
                status?: string;
            };
            principalFund?: {
                conversion?: {
                    rateCode?: string;
                    amount?: string;
                };
                accountCurrency?: string;
                treasury?: {
                    referenceNo?: string;
                    rate?: string;
                };
                specialRate?: string;
                transactionId?: string;
                convertedAmount?: string;
            };
            cableCharge?: {
                conversion?: {
                    rateCode?: string;
                    amount?: string;
                };
                accountCurrency?: string;
                transactionId?: string;
                treasury?: {
                    referenceNo?: string;
                    rate?: string;
                };
                specialRate?: string;
                convertedAmount?: string;
            };
        };
        /** @example {
         *       "date": "2015-10-03T15:29:16.333",
         *       "referenceId": "1234567890",
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "000000000001",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "100",
         *         "currency": "PHP",
         *         "receivingBank": "1",
         *         "purpose": "11 09",
         *         "instructions": "instructions data"
         *       }
         *     } */
        EPCSRequest: {
            date?: string;
            referenceId?: string;
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: string;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": "Reliance, Line 2, 1820A, 999, 987544, 122"
         *       },
         *       "beneficiary": {
         *         "name": "Rachelle",
         *         "address": "Reliance, Line 2, 1820A, 999, 987544, 122",
         *         "accountNumber": "100590250028"
         *       },
         *       "remittance": {
         *         "message": "~Record has been verified. ~Tran Id (Funding) is",
         *         "selFunction": "V",
         *         "chargeDetail": "OUR",
         *         "cableCharge": "100",
         *         "residence": "R",
         *         "currency": "PHP",
         *         "receivingBank": "1",
         *         "purpose": "11 09",
         *         "instructions": "1",
         *         "id": "E0591700000054",
         *         "amount": "100",
         *         "invoiceNumber": "1",
         *         "purposeDesc": ".",
         *         "date": ".",
         *         "status": "V"
         *       },
         *       "principalFund": {
         *         "conversion": {
         *           "rateCode": "BFT",
         *           "amount": "0.0000"
         *         },
         *         "accountCurrency": "PHP",
         *         "treasury": {
         *           "referenceNo": ".",
         *           "rate": "1"
         *         },
         *         "specialRate": ".",
         *         "transactionId": "UB33",
         *         "convertedAmount": "100.00"
         *       },
         *       "cableCharge": {
         *         "conversion": {
         *           "rateCode": "BFT",
         *           "amount": "0"
         *         },
         *         "accountCurrency": "PHP",
         *         "transactionId": "UB34",
         *         "treasury": {
         *           "referenceNo": ".",
         *           "rate": "1"
         *         },
         *         "specialRate": ".",
         *         "convertedAmount": "0"
         *       }
         *     } */
        EPCSResponse: {
            sender?: {
                name?: string;
                address?: string;
            };
            beneficiary?: {
                name?: string;
                address?: string;
                accountNumber?: string;
            };
            remittance?: {
                message?: string;
                selFunction?: string;
                chargeDetail?: string;
                cableCharge?: string;
                residence?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
                id?: string;
                amount?: string;
                invoiceNumber?: string;
                purposeDesc?: string;
                date?: string;
                status?: string;
            };
            principalFund?: {
                conversion?: {
                    rateCode?: string;
                    amount?: string;
                };
                accountCurrency?: string;
                treasury?: {
                    referenceNo?: string;
                    rate?: string;
                };
                specialRate?: string;
                transactionId?: string;
                convertedAmount?: string;
            };
            cableCharge?: {
                conversion?: {
                    rateCode?: string;
                    amount?: string;
                };
                accountCurrency?: string;
                transactionId?: string;
                treasury?: {
                    referenceNo?: string;
                    rate?: string;
                };
                specialRate?: string;
                convertedAmount?: string;
            };
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "-1",
         *           "message": "Invalid source account",
         *           "description": ""
         *         }
         *       ]
         *     } */
        EPCSError: {
            errors?: {
                code?: string;
                message?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        PaymayaErrorv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderPaymentId": "PAYMENT-0001",
         *       "paymentRequestDate": "2015-10-03T15:29:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "depositor": {
         *         "name": "John Doe",
         *         "mobileNumber": 9876543210
         *       }
         *     } */
        PaymayaRequestv1: {
            senderPaymentId?: string;
            paymentRequestDate?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            depositor?: {
                name?: string;
                mobileNumber?: string;
            };
        };
        /** @example {
         *       "paymentId": "UB2040227740073",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderPaymentId": "PAYMENT-0001"
         *     } */
        PaymayaResponsev1: {
            paymentId?: string;
            createdAt?: string;
            state?: string;
            senderPaymentId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        PaymayaError: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "depositor": {
         *         "name": "John Doe",
         *         "mobileNumber": 9876543210
         *       }
         *     } */
        PaymayaRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            depositor?: {
                name?: string;
                mobileNumber?: string;
            };
        };
        /** @example {
         *       "ubpTranId": "UB2040227740073",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderRefId": "12345678"
         *     } */
        PaymayaResponse: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "0x2088",
         *           "message": "Invalid Card number",
         *           "details": {}
         *         }
         *       ]
         *     } */
        EONCardVerifyError: {
            errors?: {
                code?: string;
                message?: string;
                details?: Record<string, never>;
            }[];
        };
        /** @example {
         *       "cardNo": "bfaa3f9a971f2910adb54da9cf5fba4ef9c46cbafdc8fb6487b7b4a0da7c00c3f14ef10599d3ae17c65ef32dc041221e8df6f756a8653a8ced0f0969832c7fdb514f888637f74fb8f5e22ada9af1bb4398a576fcd128787e349abe82dd735d3d5250cf9051663cc4fecd579fa4a92ecd860c41fffacb4e7eb8fe5655c40161938cbb9a22ce622166fb4444540f168f42c823432cdbf0bdc24809cda007e27f39b0e11e6c79468c86237665c6b25a24eac07346cbbbfb490b57296de36124ba1423057267d3669f43fd0d922519fec87f9c9fbcf05305756f85878c3ed9fb0b32dd9fed0b4eb0f053837f6907c59b02661ec5cacb0678ba82726fb030b735c079",
         *       "encryptedCvv": "243",
         *       "expDate": "1222",
         *       "authCode": 27836
         *     } */
        EONCardVerifyRequest: {
            cardNo?: string;
            encryptedCvv?: string;
            expDate?: string;
            authCode?: string;
        };
        /** @example {
         *       "encrypted card no": "bfaa3f9a971f2910adb54da9cf5fba4ef9c46cbafdc8fb6487b7b4a0da7c00c3f14ef10599d3ae17c65ef32dc041221e8df6f756a8653a8ced0f0969832c7fdb514f888637f74fb8f5e22ada9af1bb4398a576fcd128787e349abe82dd735d3d5250cf9051663cc4fecd579fa4a92ecd860c41fffacb4e7eb8fe5655c40161938cbb9a22ce622166fb4444540f168f42c823432cdbf0bdc24809cda007e27f39b0e11e6c79468c86237665c6b25a24eac07346cbbbfb490b57296de36124ba1423057267d3669f43fd0d922519fec87f9c9fbcf05305756f85878c3ed9fb0b32dd9fed0b4eb0f053837f6907c59b02661ec5cacb0678ba82726fb030b735c079",
         *       "expiry date": "1222",
         *       "status": "Verified",
         *       "response code": 200,
         *       "description": {}
         *     } */
        EONCardVerifyResponse: {
            "encrypted card no"?: string;
            "expiry date"?: string;
            status?: string;
            "response code"?: number;
            description?: Record<string, never>;
        };
        /** @example {
         *       "cardNo": "0accd74232a8e12de50ef276f2085ae156864e35978a93a3827a0d980810f1e126a4bbf1a5a6958c6deef78507c353cc80ebb362dad81414545f22dd484941c641eb5c7302063f5cb33188174a307949471b98ee72c8a91ed8ec4056e9194946033ee106a9ddb60251cca1ff6f22daad1acd2ab8b9f36fff8baa3a3f3bafa686676bfd5fa78dffdf71b6029daf1da2e57798d7c1403130f53100c0421327702d9a458efa6b4adb63fe7dc10750e96f9e2323a3a16412683cd35ca8397b311484fc1fc62ebde251b895d0c28d82f6f4f3af9442f1071e87583d7810246ad86af174b2864f0c0ba3ad2b603b7ec52890224c6575e06061576455620ea256707eaa",
         *       "txnAmount": "5000",
         *       "fee": "500",
         *       "mid": "000010000000017",
         *       "strRefNum": 1100121109,
         *       "authCode": "279124",
         *       "tmsnDateTime": 22113900,
         *       "txnType": "Sale",
         *       "encryptedCvv": "162",
         *       "merchantName": "TEST",
         *       "remarks": "TEST"
         *     } */
        SaleRequest: {
            cardNo?: string;
            txnAmount?: string;
            fee?: string;
            mid?: string;
            strRefNum?: string;
            authCode?: string;
            tmsnDateTime?: string;
            txnType?: string;
            encryptedCvv?: string;
            merchantName?: string;
            remarks?: string;
        };
        /** @example [
         *       {
         *         "New Encrypted Card": "",
         *         "Status": "Verified EON BIN",
         *         "Response Code": "200",
         *         "Response Description": {}
         *       }
         *     ] */
        SaleResponse: {
            "New Encrypted Card"?: string;
            status?: string;
            "Response Code"?: string;
            "Response Description"?: Record<string, never>;
        }[];
        /** @example {
         *       "cardNo": "0accd74232a8e12de50ef276f2085ae156864e35978a93a3827a0d980810f1e126a4bbf1a5a6958c6deef78507c353cc80ebb362dad81414545f22dd484941c641eb5c7302063f5cb33188174a307949471b98ee72c8a91ed8ec4056e9194946033ee106a9ddb60251cca1ff6f22daad1acd2ab8b9f36fff8baa3a3f3bafa686676bfd5fa78dffdf71b6029daf1da2e57798d7c1403130f53100c0421327702d9a458efa6b4adb63fe7dc10750e96f9e2323a3a16412683cd35ca8397b311484fc1fc62ebde251b895d0c28d82f6f4f3af9442f1071e87583d7810246ad86af174b2864f0c0ba3ad2b603b7ec52890224c6575e06061576455620ea256707eaa",
         *       "txnAmount": "5000",
         *       "fee": "500",
         *       "mid": "000010000000017",
         *       "strRefNum": "805319273629",
         *       "authCode": "072713",
         *       "tmsnDateTime": 222192540,
         *       "txnType": "SaleRev"
         *     } */
        SaleRevRequest: {
            cardNo?: string;
            txnAmount?: string;
            fee?: string;
            mid?: string;
            strRefNum?: string;
            authCode?: string;
            tmsnDateTime?: string;
            txnType?: string;
        };
        /** @example [
         *       {
         *         "Encrypted Card no": "0accd74232a8e12de50ef276f2085ae156864e35978a93a3827a0d980810f1e126a4bbf1a5a6958c6deef78507c353cc80ebb362dad81414545f22dd484941c641eb5c7302063f5cb33188174a307949471b98ee72c8a91ed8ec4056e9194946033ee106a9ddb60251cca1ff6f22daad1acd2ab8b9f36fff8baa3a3f3bafa686676bfd5fa78dffdf71b6029daf1da2e57798d7c1403130f53100c0421327702d9a458efa6b4adb63fe7dc10750e96f9e2323a3a16412683cd35ca8397b311484fc1fc62ebde251b895d0c28d82f6f4f3af9442f1071e87583d7810246ad86af174b2864f0c0ba3ad2b603b7ec52890224c6575e06061576455620ea256707eaa",
         *         "Authcode": "",
         *         "TMSNDate and time": 222192540,
         *         "TRrefnumber": "",
         *         "Status": "Verified EON BIN ",
         *         "Response Code": "200",
         *         "Response Description": {}
         *       }
         *     ] */
        SaleRevResponse: {
            "Encrypted Card no"?: string;
            Authcode?: string;
            "TMSNDate and time"?: string;
            TRrefnumber?: string;
            status?: string;
            "Response Code"?: string;
            "Response Description"?: Record<string, never>;
        }[];
        /** @example {
         *       "Status": "",
         *       "Response Code": "",
         *       "Response Description": [
         *         {
         *           "Transaction Reference Number": " ",
         *           "Date and Time of Transaction": "2018-04-19T06:31:56.905Z",
         *           "Payment Status": "",
         *           "Merchant ID": "",
         *           "Merchant Name": "",
         *           "City": "",
         *           "Amount": "",
         *           "Charges": "",
         *           "Settlement Status": ""
         *         }
         *       ],
         *       "Record Count": "5",
         *       "Record Per Page": "1",
         *       "Page": 5
         *     } */
        TransactionHistoryResponse: {
            Status?: string;
            "Response Code"?: string;
            "Response Description"?: {
                "Transaction Reference Number"?: string;
                "Date and Time of Transaction"?: string;
                "Payment Status"?: string;
                "Merchant ID"?: string;
                "Merchant Name"?: string;
                City?: string;
                Amount?: string;
                Charges?: string;
                "Settlement Status"?: string;
            }[];
            recCount?: string;
            recPerPage?: string;
            Page?: number;
        };
        /** @example {
         *       "lastUpdated": "2018-10-17T04:39:12.674439Z",
         *       "units": {
         *         "time": "local time (PHT)",
         *         "temperature": "Degree Celsius (deg C)",
         *         "windSpeed": "Kilometers per hour (kph)",
         *         "solarRadiation": "Watts per meter squared (wpm2)",
         *         "meanSeaLevelPressure": "Hectopascals (hPa)",
         *         "rain": "Millimeters (mm)",
         *         "dewpoint": "Degree Celsius (deg C)",
         *         "windGust": "Kilometers per hour (kph)",
         *         "windDirection": "Degrees (deg)",
         *         "heatIndex": "Degree Celsius (deg C)",
         *         "totalCloudCover": "Percent (%)",
         *         "rainProbability": "Percent (%)"
         *       },
         *       "latitude": "14.49",
         *       "longitude": "121.07",
         *       "records": [
         *         {
         *           "timestamp": "2018-10-31T14:00:00+08:00",
         *           "temperature": 30.2
         *         },
         *         {
         *           "timestamp": "2018-10-31T15:00:00+08:00",
         *           "temperature": 30.2
         *         },
         *         {
         *           "timestamp": "2018-10-31T16:00:00+08:00",
         *           "temperature": 29.8
         *         },
         *         {
         *           "timestamp": "2018-10-31T17:00:00+08:00",
         *           "temperature": 28
         *         },
         *         {
         *           "timestamp": "2018-10-31T18:00:00+08:00",
         *           "temperature": 28.6
         *         },
         *         {
         *           "timestamp": "2018-10-31T19:00:00+08:00",
         *           "temperature": 28
         *         },
         *         {
         *           "timestamp": "2018-10-31T20:00:00+08:00",
         *           "temperature": 25.8
         *         },
         *         {
         *           "timestamp": "2018-10-31T21:00:00+08:00",
         *           "temperature": 27.4
         *         },
         *         {
         *           "timestamp": "2018-10-31T22:00:00+08:00",
         *           "temperature": 26.8
         *         },
         *         {
         *           "timestamp": "2018-10-31T23:00:00+08:00",
         *           "temperature": 26
         *         },
         *         {
         *           "timestamp": "2018-11-01T00:00:00+08:00",
         *           "temperature": 26.3
         *         },
         *         {
         *           "timestamp": "2018-11-01T01:00:00+08:00",
         *           "temperature": 26
         *         }
         *       ]
         *     } */
        ForecastResponse: {
            lastUpdated?: string;
            units?: {
                time?: string;
                temperature?: string;
                windSpeed?: string;
                solarRadiation?: string;
                meanSeaLevelPressure?: string;
                rain?: string;
                dewpoint?: string;
                windGust?: string;
                windDirection?: string;
                heatIndex?: string;
                totalCloudCover?: string;
                rainProbability?: string;
            };
            latitude?: string;
            longitude?: string;
            records?: {
                timestamp?: string;
                temperature?: number;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        CoinsPHErrorv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderPaymentId": "PAYMENT-0001",
         *       "paymentRequestDate": "2015-10-03T15:29:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "depositor": {
         *         "name": "John Doe",
         *         "referenceNumber": 9123456789
         *       }
         *     } */
        CoinsPHRequestv1: {
            senderPaymentId?: string;
            paymentRequestDate?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            depositor?: {
                name?: string;
                referenceNumber?: string;
            };
        };
        /** @example {
         *       "paymentId": "UB2040227740063",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderPaymentId": "PAYMENT-0001"
         *     } */
        CoinsPHResponsev1: {
            paymentId?: string;
            createdAt?: string;
            state?: string;
            senderPaymentId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        CoinsPHError: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "depositor": {
         *         "name": "John Doe",
         *         "referenceNumber": 9123456789
         *       }
         *     } */
        CoinsPHRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            depositor?: {
                name?: string;
                referenceNumber?: string;
            };
        };
        /** @example {
         *       "ubpTranId": "UB2040227740063",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Succesful",
         *       "senderRefId": "12345678"
         *     } */
        CoinsPHResponse: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "productCode": "15",
         *       "mobileNo": 9170000001
         *     } */
        LoadPurchaseRequest: {
            productCode?: string;
            mobileNo?: string;
        };
        /** @example {
         *       "tranId": "00001"
         *     } */
        LoadPurchaseResponse: {
            tranId?: string;
        };
        /** @example {
         *       "errors": {
         *         "code": "0x2088",
         *         "message": "Insufficient loadwallet balance",
         *         "details": {}
         *       }
         *     } */
        LoadPurchaseErrors: {
            errors?: {
                code?: string;
                message?: string;
                details?: Record<string, never>;
            }[];
        };
        /** @example {
         *       "token": "rY5CFD9ja3as2I/pjQBjdTBD5UZ8E9Kj5EwUBSAs7dUvW/9sl5SUZdJf+rV9R6r336yyXooR/vLsvnCnrUyaW6yJSV4HnTdycYqmijwCzMubvIhS000I2HQVxlhLo1E/7RhKTSYWjBVO1Zf/fX0Va0rqhN05ZOYAGuCb"
         *     } */
        UnlinkAccountRequest: {
            token?: string;
        };
        /** @example {
         *       "message": "Session successfully deleted."
         *     } */
        UnlinkAccountResponse: {
            message?: string;
        };
        /** @example {
         *       "error": {
         *         "code": -4,
         *         "message": "Not authorized. Malformed token."
         *       }
         *     } */
        UnlinkAccountErrors: {
            error?: {
                code?: number;
                message?: string;
            };
        };
        /** @example {
         *       "senderTransferId": "TRANSFER-0001",
         *       "transferRequestDate": "2018-08-10T08:40:45.897",
         *       "sender": {
         *         "name": "Juan Cruz",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": 107324511489,
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "3000.00",
         *         "currency": "PHP",
         *         "receivingBank": "161203",
         *         "purpose": "5 632",
         *         "instructions": "instructions data"
         *       }
         *     } */
        SingleRequestv1: {
            senderTransferId?: number;
            transferRequestDate?: string;
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: number;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "senderTransferId": "TRANSFER-0001",
         *       "transferId": "UB2040227740070",
         *       "createdAt": "2018-08-10T08:40:45.897",
         *       "state": "Sent for Processing"
         *     } */
        SingleResponsev1: {
            senderTransferId?: string;
            transferId?: string;
            createdAt?: string;
            state?: string;
        };
        /** @example {
         *       "senderBatchTransferId": "TBATCH-010718",
         *       "transactions": [
         *         {
         *           "senderTransferId": "TEST-0107201801",
         *           "transferRequestDate": "2015-10-03T15:29:16.333",
         *           "particulars": "particulars",
         *           "sender": {
         *             "name": "Juan1",
         *             "address": {
         *               "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *               "line2": "PARK CALOOCAN CITY",
         *               "city": "Caloocan",
         *               "province": "142",
         *               "zipCode": "1900",
         *               "country": "204"
         *             }
         *           },
         *           "beneficiary": {
         *             "accountNumber": 107324511489,
         *             "name": "Rachelle",
         *             "address": "Reliance Line 2 Mandaluyong"
         *           },
         *           "remittance": {
         *             "amount": "100.01",
         *             "currency": "PHP",
         *             "receivingBank": 161203,
         *             "purpose": "11 09",
         *             "instructions": "instructions data"
         *           }
         *         },
         *         {
         *           "senderTransferId": "TEST-0107201802",
         *           "transferRequestDate": "2015-10-03T15:29:16.333",
         *           "particulars": "particulars",
         *           "sender": {
         *             "name": "Juan2",
         *             "address": {
         *               "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *               "line2": "PARK CALOOCAN CITY",
         *               "city": "Caloocan",
         *               "province": "142",
         *               "zipCode": "1900",
         *               "country": "204"
         *             }
         *           },
         *           "beneficiary": {
         *             "accountNumber": 107324511489,
         *             "name": "Rachelle",
         *             "address": "Reliance Line 2 Mandaluyong"
         *           },
         *           "remittance": {
         *             "amount": "1",
         *             "currency": "PHP",
         *             "receivingBank": 161203,
         *             "purpose": "11 09",
         *             "instructions": "instructions data"
         *           }
         *         },
         *         {
         *           "senderTransferId": "TEST-0107201803",
         *           "transferRequestDate": "2015-10-03T15:29:16.333",
         *           "particulars": "particulars",
         *           "sender": {
         *             "name": "Juan3",
         *             "address": {
         *               "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *               "line2": "PARK CALOOCAN CITY",
         *               "city": "Caloocan",
         *               "province": "142",
         *               "zipCode": "1900",
         *               "country": "204"
         *             }
         *           },
         *           "beneficiary": {
         *             "accountNumber": 107324511489,
         *             "name": "Rachelle",
         *             "address": "Reliance Line 2 Mandaluyong"
         *           },
         *           "remittance": {
         *             "amount": "200",
         *             "currency": "PHP",
         *             "receivingBank": 161203,
         *             "purpose": "11 09",
         *             "instructions": "instructions data"
         *           }
         *         },
         *         {
         *           "senderTransferId": "TEST-0107201804",
         *           "transferRequestDate": "2015-10-03T15:29:16.333",
         *           "particulars": "particulars",
         *           "sender": {
         *             "name": "Juan4",
         *             "address": {
         *               "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *               "line2": "PARK CALOOCAN CITY",
         *               "city": "Caloocan",
         *               "province": "142",
         *               "zipCode": "1900",
         *               "country": "204"
         *             }
         *           },
         *           "beneficiary": {
         *             "accountNumber": 107324511489,
         *             "name": "Rachelle",
         *             "address": "Reliance Line 2 Mandaluyong"
         *           },
         *           "remittance": {
         *             "amount": "200",
         *             "currency": "PHP",
         *             "receivingBank": 161203,
         *             "purpose": "11 09",
         *             "instructions": "instructions data"
         *           }
         *         }
         *       ]
         *     } */
        BatchRequestv1: {
            senderBatchTransferId?: string;
            transactions?: {
                senderTransferId?: number;
                transferRequestDate?: string;
                particulars?: string;
                sender?: {
                    name?: string;
                    address?: string;
                };
                beneficiary?: {
                    accountNumber?: number;
                    name?: string;
                    address?: string;
                };
                remittance?: {
                    amount?: number;
                    currency?: string;
                    receivingBank?: number;
                    purpose?: string;
                    intermedBank?: string;
                    instructions?: string;
                    remarks?: string;
                };
            }[];
        };
        /** @example {
         *       "senderBatchTransferId": "TRANSFER-0001",
         *       "transferId": "UB2040227740070",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Sent for Processing"
         *     } */
        BatchResponsev1: {
            senderBatchTransferId?: string;
            transferId?: string;
            createdAt?: string;
            state?: string;
        };
        /** @example {
         *       "errors": {
         *         "code": 1,
         *         "message": "We could not recognize the partner id passed."
         *       }
         *     } */
        PesonetPartnerErrorv1: {
            errors?: unknown[];
            items?: {
                code?: number;
                message?: string;
            };
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "004",
         *           "bank": "BANK OF THE PHILIPPINE ISLANDS"
         *         },
         *         {
         *           "code": "005",
         *           "bank": "THE STANDARD CHARTERED BANK"
         *         }
         *       ],
         *       "totalRecords": 2
         *     } */
        RetrieveResponsev1: {
            records?: {
                code?: string;
                bank?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB2040227740070",
         *           "type": "PESONET",
         *           "amount": "30.00",
         *           "createdAt": "2018-08-10T08:40:45.897",
         *           "updatedAt": "",
         *           "state": "Sent for Processing",
         *           "senderTransferId": "TRANSFER-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        PesonetVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                amount?: string;
                createdAt?: string;
                updatedAt?: string;
                state?: string;
                senderTransferId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderBatchTransferId": "TRANSFER-BATCH-0001",
         *       "records": [
         *         {
         *           "tranId": "UB2040227740070",
         *           "type": "PESONET",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Debited Source Account",
         *           "senderTransferId": "TRANSFER-0001"
         *         },
         *         {
         *           "tranId": "UB7225615436181",
         *           "type": "PESONET",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Failed to Debit Source Account",
         *           "senderTransferId": "TRANSFER-0002"
         *         }
         *       ],
         *       "totalRecords": 2
         *     } */
        BatchPesonetVerificationv1: {
            senderBatchTransferId?: string;
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderTransferId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2018-08-10T08:40:45.897",
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "107324511489",
         *         "name": "Juan",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "3000.00",
         *         "currency": "PHP",
         *         "receivingBank": "161203",
         *         "purpose": "5 632",
         *         "instructions": "instructions data"
         *       }
         *     } */
        SingleRequest: {
            senderRefId?: number;
            tranRequestDate?: string;
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: number;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "ubpTranId": "UB2040227740070",
         *       "createdAt": "2018-08-10T08:40:45.897",
         *       "state": "Sent for Processing"
         *     } */
        SingleResponse: {
            senderRefId?: string;
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
        };
        /** @example {
         *       "senderBatchTransferId": "TRANSFER-0001",
         *       "transactions": [
         *         {
         *           "senderRefId": "12345678",
         *           "tranRequestDate": "2015-10-03T15:29:16.333",
         *           "sender": {
         *             "name": "Juan Dela Cruz",
         *             "address": {
         *               "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *               "line2": "PARK CALOOCAN CITY",
         *               "city": "Caloocan",
         *               "province": "142",
         *               "zipCode": "1900",
         *               "country": "204"
         *             }
         *           },
         *           "beneficiary": {
         *             "accountNumber": "107324511489",
         *             "name": "Juan"
         *           },
         *           "remittance": {
         *             "amount": "3000.00",
         *             "currency": "PHP",
         *             "receivingBank": "161203",
         *             "purpose": "5 632",
         *             "instructions": "instructions data"
         *           }
         *         },
         *         {
         *           "senderRefId": "12345679",
         *           "tranRequestDate": "2015-10-03T15:29:16.333",
         *           "sender": {
         *             "name": "Juan Dela Cruz",
         *             "address": {
         *               "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *               "line2": "PARK CALOOCAN CITY",
         *               "city": "Caloocan",
         *               "province": "142",
         *               "zipCode": "1900",
         *               "country": "204"
         *             }
         *           },
         *           "beneficiary": {
         *             "accountNumber": "107324511489",
         *             "name": "Juan"
         *           },
         *           "remittance": {
         *             "amount": "3000.00",
         *             "currency": "PHP",
         *             "receivingBank": "161203",
         *             "purpose": "5 632",
         *             "instructions": "instructions data"
         *           }
         *         }
         *       ]
         *     } */
        BatchRequest: {
            senderBatchTransferId?: string;
            transactions?: {
                senderRefId?: number;
                tranRequestDate?: string;
                particulars?: string;
                sender?: {
                    name?: string;
                    address?: string;
                };
                beneficiary?: {
                    accountNumber?: number;
                    name?: string;
                    address?: string;
                };
                remittance?: {
                    amount?: number;
                    currency?: string;
                    receivingBank?: number;
                    purpose?: string;
                    intermedBank?: string;
                    instructions?: string;
                    remarks?: string;
                };
            }[];
        };
        /** @example {
         *       "senderBatchTransferId": "TRANSFER-0001",
         *       "transferId": "UB2040227740070",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Sent for Processing"
         *     } */
        BatchResponse: {
            senderBatchTransferId?: string;
            transferId?: string;
            createdAt?: string;
            state?: string;
        };
        /** @example {
         *       "errors": {
         *         "code": 1,
         *         "message": "We could not recognize the partner id passed."
         *       }
         *     } */
        PesonetPartnerError: {
            errors?: unknown[];
            items?: {
                code?: number;
                message?: string;
            };
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": 161203,
         *           "bank": "Bank Of China, Manila Branch"
         *         },
         *         {
         *           "code": 161207,
         *           "bank": "Sterling Bank Of Asia"
         *         }
         *       ],
         *       "totalRecords": 2
         *     } */
        RetrieveResponse: {
            records?: {
                code?: string;
                bank?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB2040227740070",
         *           "type": "PESONET",
         *           "amount": "30.00",
         *           "createdAt": "2018-08-10T08:40:45.897",
         *           "updatedAt": "",
         *           "state": "Sent for Processing",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        PesonetVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                amount?: string;
                createdAt?: string;
                updatedAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderBatchTransferId": "TRANSFER-0001",
         *       "records": [
         *         {
         *           "ubpTranId": "UB2040227740070",
         *           "type": "PESONET",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Debited Source Account",
         *           "senderRefId": "12345678"
         *         },
         *         {
         *           "ubpTranId": "UB7225615436181",
         *           "type": "PESONET",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Failed to Debit Source Account",
         *           "senderRefId": "12345679"
         *         }
         *       ],
         *       "totalRecords": 2
         *     } */
        BatchPesonetVerification: {
            senderBatchTransferId?: string;
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "TEST1231SB",
         *       "tranRequestDate": "2018-08-10T08:40:45.897",
         *       "sender": {
         *         "name": "Juan dela Cruz",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "Caloocan",
         *           "zipCode": "1900",
         *           "country": "Philippines"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "107324511489",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "Caloocan",
         *           "zipCode": "1900",
         *           "country": "Philippines"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "30.00",
         *         "currency": "PHP",
         *         "receivingBank": 161203,
         *         "purpose": "1001",
         *         "instructions": "instructions data"
         *       }
         *     } */
        SingleRequestv3: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Object containing the details of the sender */
            sender?: {
                /** @description Name of the sender. Maximum of 250 alphanumeric characters(a-zA-Z0-9.). */
                name?: string;
                /** @description Object containing the details of the sender's address. */
                address?: {
                    /** @description Address specifics of sender. Maximum of 19(line1 + city) alphanumeric characters(a-zA-Z0-9.). */
                    line1?: string;
                    /** @description Address specifics of sender. Maximum of 100 alphanumeric characters (a-zA-Z0-9.). */
                    line2?: string;
                    /** @description City of sender. Maximum of 19(line1 + city) alphanumeric characters (a-zA-Z0-9.). */
                    city?: string;
                    /** @description Province of sender. Maximum of 100 alphanumeric characters (a-zA-Z0-9.). */
                    province?: string;
                    /** @description Zipcode of sender. Maximum of 100 numeric characters (0-9). */
                    zipCode?: number;
                    /** @description Country of sender. Maximum of 250 alphanumeric characters (a-zA-Z0-9.). */
                    country?: string;
                };
            };
            /** @description Object containing the details of the recipient */
            beneficiary?: {
                /** @description Bank account number of recipient. Maximum of 200 alphanumeric characters (0-9). */
                accountNumber?: string;
                /** @description Name of recipient. Maximum of 300 characters (a-zA-Z). */
                name?: string;
                /** @description Object containing the details of the recipient's address */
                address?: {
                    /** @description Address specifics of recipient. Maximum of 100 alphanumeric characters(#.,`'!~'^%$#()&*|\/ñÑA-Za-z0-9 -). */
                    line1?: string;
                    /** @description Address specifics of recipient. Maximum of 100 alphanumeric characters(#.,`'!~'^%$#()&*|\/ñÑA-Za-z0-9 -). */
                    line2?: string;
                    /** @description City of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    city?: string;
                    /** @description Province of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    province?: string;
                    /** @description Zipcode of recipient. Maximum of 100 numeric characters(0-9). */
                    zipCode?: number;
                    /** @description Country of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    country?: string;
                };
            };
            /** @description Object containing the details of the transaction */
            remittance?: {
                /** @description Amount to be sent to recipient. Maximum of 100 alphanumeric characters(0-9). */
                amount?: string;
                /** @description Currency used in the transaction. Accepted values = "PHP". Maximum of 3 characters(A-Z). */
                currency?: string;
                /** @description Code of recipient's Bank. Bank codes can be obtained using the Instapay List of Receiving Bank's endpoint. Maximum of 100 alphanumeric characters(a-zA-Z0-9-). */
                receivingBank?: string;
                /** @description Code used to identifiy the purpose of a transaction. Purpose codes can be obtained using the Instapay List of Libraries endpoint. Maximum of 4 characters(0-9). */
                purpose?: string;
                /** @description Additional information of the transaction. Maximum of 4 alphanumeric characters(a-zA-Z0-9-). */
                instructions?: string;
            };
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "TEST1231SB",
         *       "state": "Sent for Processing",
         *       "uuid": "f21b837e-3044-4902-8b10-44c58aabd400",
         *       "description": "Transaction is sent for processing",
         *       "type": "PESONET",
         *       "amount": "30.00",
         *       "ubpTranId": "UB8291906576991",
         *       "remittanceId": "E90118RYQXQJMFIX",
         *       "tranRequestDate": "2018-08-10T08:40:45.897"
         *     } */
        SingleResponsev3: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            remittanceId?: string;
            tranRequestDate?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "161203",
         *           "bank": "Bank Of China",
         *           "brstn": "011140014"
         *         },
         *         {
         *           "code": "161207",
         *           "bank": "Sterling Bank Of Asia",
         *           "brstn": 11190019
         *         }
         *       ],
         *       "totalRecords": 2
         *     } */
        RetrieveResponsev3: {
            records?: {
                code?: string;
                bank?: string;
                brstn?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "TRAN123456789",
         *         "code": "SP",
         *         "state": "Credited Beneficiary Account",
         *         "uuid": "bc9bd559-cc9e-4060-b9ae-08c053bcdb45",
         *         "description": "Credited to the customer's account",
         *         "type": "PESONET",
         *         "amount": "30.00",
         *         "ubpTranId": "PESONET",
         *         "remittanceId": "E90118XUVXYITCWN",
         *         "createdAt": "2019-10-10T17:35:35.000Z",
         *         "updatedAt": null
         *       }
         *     } */
        PesonetVerificationv3: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                remittanceId?: string;
                createdAt?: string;
                updatedAt?: unknown;
            };
        };
        /** @example {
         *       "senderRefId": "TEST662022",
         *       "status": "success",
         *       "remittanceId": "E90118IZMGFUPPOJ"
         *     } */
        TransactionUpdateRequestv3: {
            senderRefId?: string;
            status?: string;
            remittanceId?: string;
        };
        /** @example {
         *       "message": "Transaction successfully updated",
         *       "tranStatus": "TS"
         *     } */
        TransactionUpdateResponsev3: {
            message?: string;
            tranStatus?: string;
        };
        /** @example {
         *       "errors": {
         *         "code": 1,
         *         "message": "Could not recognize Reference ID"
         *       }
         *     } */
        TransactionError: {
            errors?: {
                code?: number;
                message?: string;
            };
        };
        /** @example {
         *       "amount": 10000
         *     } */
        DepositRequest: {
            amount?: string;
        };
        /** @example {
         *       "message": "Account successfully loaded.",
         *       "balance": "1000"
         *     } */
        DepositResponse: {
            message?: string;
            balance?: string;
        };
        /** @example {
         *       "message": "Account number does not exist."
         *     } */
        DepositError: {
            message?: string;
        };
        /** @example {
         *       "senderRefId": "LOAD-0001",
         *       "loadRequestDate": "2015-10-03T15:29:16.333",
         *       "productCode": "25",
         *       "mobileNo": 9170000001,
         *       "remarks": "Load Purchase remarks"
         *     } */
        GlobeLoadRequestv1: {
            senderRefId?: string;
            loadRequestDate?: string;
            productCode?: string;
            mobileNo?: string;
            remarks?: string;
        };
        /** @example {
         *       "loadId": "1",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Successful",
         *       "senderRefId": "12345678"
         *     } */
        GlobeLoadResponsev1: {
            loadId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "provider": "Globe",
         *       "codes": [
         *         15,
         *         20,
         *         25,
         *         30,
         *         35,
         *         40,
         *         45,
         *         50,
         *         55,
         *         60,
         *         65,
         *         70,
         *         75,
         *         80,
         *         85,
         *         90,
         *         95,
         *         100,
         *         150
         *       ]
         *     } */
        GlobeLoadProductsResponsev1: {
            provider?: string;
            codes?: number[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB9727565699722",
         *           "type": "LOAD_PURCHASE",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Payment Successful",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        GlobeVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderLoadId": "LOAD-0001",
         *       "loadRequestDate": "2015-10-03T15:29:16.333",
         *       "productCode": "25",
         *       "mobileNo": 9170000001,
         *       "remarks": "Load Purchase remarks"
         *     } */
        GlobeLoadRequestv2: {
            senderLoadId?: string;
            loadRequestDate?: string;
            productCode?: string;
            mobileNo?: string;
            remarks?: string;
        };
        /** @example {
         *       "loadId": "1",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Successful",
         *       "senderLoadId": "LOAD-0001"
         *     } */
        GlobeLoadResponsev2: {
            loadId?: string;
            createdAt?: string;
            state?: string;
            senderLoadId?: string;
        };
        /** @example {
         *       "provider": "Globe",
         *       "codes": [
         *         15,
         *         20,
         *         25,
         *         30,
         *         35,
         *         40,
         *         45,
         *         50,
         *         55,
         *         60,
         *         65,
         *         70,
         *         75,
         *         80,
         *         85,
         *         90,
         *         95,
         *         100,
         *         150
         *       ]
         *     } */
        GlobeLoadProductsResponsev2: {
            provider?: string;
            codes?: number[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB9727565699722",
         *           "type": "LOAD_PURCHASE",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Payment Successful",
         *           "senderLoadId": "LOAD-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        GlobeVerificationv2: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderLoadId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "productCode": "25",
         *       "mobileNo": 9170000001,
         *       "remarks": "Load Purchase remarks"
         *     } */
        GlobeLoadRequestv3: {
            senderRefId?: string;
            tranRequestDate?: string;
            productCode?: string;
            mobileNo?: string;
            remarks?: string;
        };
        /** @example {
         *       "ubpTranId": "1",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Successful",
         *       "senderRefId": "12345678"
         *     } */
        GlobeLoadResponsev3: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "provider": "Globe",
         *       "codes": [
         *         15,
         *         20,
         *         25,
         *         30,
         *         35,
         *         40,
         *         45,
         *         50,
         *         55,
         *         60,
         *         65,
         *         70,
         *         75,
         *         80,
         *         85,
         *         90,
         *         95,
         *         100,
         *         150
         *       ]
         *     } */
        GlobeLoadProductsResponsev3: {
            provider?: string;
            codes?: number[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB9727565699722",
         *           "type": "LOAD_PURCHASE",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Payment Successful",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        GlobeVerificationv3: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "productCode": "25",
         *       "mobileNo": 9170000001,
         *       "remarks": "Load Purchase remarks"
         *     } */
        SmartLoadRequestv1: {
            senderRefId?: string;
            tranRequestDate?: string;
            productCode?: string;
            mobileNo?: string;
            remarks?: string;
        };
        /** @example {
         *       "loadId": "1",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Successful",
         *       "senderRefId": "12345678"
         *     } */
        SmartLoadResponsev1: {
            loadId?: string;
            createdAt?: string;
            state?: string;
            senderRefId?: string;
        };
        /** @example {
         *       "codes": [
         *         15,
         *         30,
         *         50,
         *         60,
         *         100,
         *         115,
         *         200,
         *         300,
         *         150
         *       ]
         *     } */
        SmartLoadProductsResponsev1: {
            codes?: number[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB9727565699722",
         *           "type": "LOAD_PURCHASE",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Payment Successful",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        SmartVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderLoadId": "LOAD-0001",
         *       "loadRequestDate": "2015-10-03T15:29:16.333",
         *       "productCode": "25",
         *       "mobileNo": 9170000001,
         *       "remarks": "Load Purchase remarks"
         *     } */
        SmartLoadRequestv2: {
            senderLoadId?: string;
            loadRequestDate?: string;
            productCode?: string;
            mobileNo?: string;
            remarks?: string;
        };
        /** @example {
         *       "loadId": "1",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Successful",
         *       "senderLoadId": "LOAD-0001"
         *     } */
        SmartLoadResponsev2: {
            loadId?: string;
            createdAt?: string;
            state?: string;
            senderLoadId?: string;
        };
        /** @example {
         *       "codes": [
         *         15,
         *         30,
         *         50,
         *         60,
         *         100,
         *         115,
         *         200,
         *         300,
         *         150
         *       ]
         *     } */
        SmartLoadProductsResponsev2: {
            codes?: number[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB9727565699722",
         *           "type": "LOAD_PURCHASE",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Payment Successful",
         *           "senderLoadId": "LOAD-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        SmartVerificationv2: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderTransferId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2015-10-03T15:29:16.333",
         *       "productCode": "25",
         *       "mobileNo": 9170000001,
         *       "remarks": "Load Purchase remarks"
         *     } */
        SmartLoadRequestv3: {
            senderRefId?: string;
            tranRequestDate?: string;
            productCode?: string;
            mobileNo?: string;
            remarks?: string;
        };
        /** @example {
         *       "ubpTranId": "1",
         *       "createdAt": "2015-10-03T15:29:16.333",
         *       "state": "Payment Successful",
         *       "senderRefId": 12345678
         *     } */
        SmartLoadResponsev3: {
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
            senderLoadId?: string;
        };
        /** @example {
         *       "codes": [
         *         15,
         *         30,
         *         50,
         *         60,
         *         100,
         *         115,
         *         200,
         *         300,
         *         150
         *       ]
         *     } */
        SmartLoadProductsResponsev3: {
            codes?: number[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB9727565699722",
         *           "type": "LOAD_PURCHASE",
         *           "createdAt": "2015-10-03T15:29:16.333",
         *           "state": "Payment Successful",
         *           "senderLoadId": "LOAD-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        SmartVerificationv3: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderTransferId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": 400,
         *           "message": "Missing creditor information"
         *         }
         *       ]
         *     } */
        OutwardErrorv1: {
            errors?: {
                code?: string;
                message?: string;
            }[];
        };
        /** @example {
         *       "senderTransferId": "TRANSFER-0001",
         *       "transferRequestDate": "2018-08-10T08:40:45.897",
         *       "sender": {
         *         "name": "Juan Cruz",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": 107324511489,
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "3000.00",
         *         "currency": "PHP",
         *         "receivingBank": "161203",
         *         "purpose": "5 632",
         *         "instructions": "instructions data"
         *       }
         *     } */
        OutwardRequestv1: {
            senderTransferId?: number;
            transferRequestDate?: string;
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: number;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "senderTransferId": "TRANSFER-0001",
         *       "transferId": "UB2040227740070",
         *       "createdAt": "2018-08-10T08:40:45.897",
         *       "state": "Payment Succesful"
         *     } */
        OutwardResponsev1: {
            senderTransferId?: string;
            transferId?: string;
            createdAt?: string;
            state?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": 400,
         *           "message": "Missing creditor information"
         *         }
         *       ]
         *     } */
        OutwardError: {
            errors?: {
                code?: string;
                message?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2018-08-10T08:40:45.897",
         *       "sender": {
         *         "name": "Juan Dela Cruz",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber": "107324511489",
         *         "name": "Juan",
         *         "address": {
         *           "line1": "241 A.DEL MUNDO ST BET. 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": "142",
         *           "zipCode": "1900",
         *           "country": "204"
         *         }
         *       },
         *       "remittance": {
         *         "amount": "3000.00",
         *         "currency": "PHP",
         *         "receivingBank": "161203",
         *         "purpose": "5 632",
         *         "instructions": "instructions data"
         *       }
         *     } */
        OutwardRequest: {
            senderRefId?: number;
            tranRequestDate?: string;
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            beneficiary?: {
                accountNumber?: number;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "ubpTranId": "UB2040227740070",
         *       "createdAt": "2018-08-10T08:40:45.897",
         *       "state": "Payment Succesful"
         *     } */
        OutwardResponse: {
            senderRefId?: string;
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
        };
        /** @example {
         *       "senderPaymentId": "PAYMENT-0001",
         *       "paymentRequestDate": "2018-01-16T11:17:15.099",
         *       "loanAccount": "109659422809",
         *       "amount": "100"
         *     } */
        LoanRequestv1: {
            senderPaymentId?: string;
            paymentRequestDate?: string;
            loanAccount?: string;
            amount?: string;
        };
        /** @example {
         *       "paymentId": "UB2565970798022",
         *       "createdAt": "2018-01-16T11:17:15.099",
         *       "state": "Payment Succesful",
         *       "senderPaymentId": "PAYMENT-0001"
         *     } */
        LoanResponsev1: {
            /**
             * @description UnionBank generated id
             * @example UBP000001
             */
            paymentId?: string;
            /**
             * @description UTC date and time the payment was created
             * @example 2017-10-10T12:11:50Z
             */
            createdAt?: string;
            /**
             * @description Payment status
             * @example SUCCESS
             */
            state?: string;
            /**
             * @description Unique id generated by the merchant
             * @example 0001
             */
            senderPaymentId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        LoanErrorv1: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "tranId": "UB2565970798022",
         *           "type": "LOANS_PAYMENT",
         *           "createdAt": "2018-01-16T11:17:15.099",
         *           "state": "Payment Successful",
         *           "senderPaymentId": "PAYMENT-0001"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        LoanVerificationv1: {
            records?: {
                tranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderPaymentId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2018-01-16T11:17:15.099",
         *       "loanAccount": "109659422809",
         *       "amount": "100"
         *     } */
        LoanRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            loanAccount?: string;
            amount?: string;
        };
        /** @example {
         *       "ubpTranId": "UB2565970798022",
         *       "createdAt": "2018-01-16T11:17:15.099",
         *       "state": "Payment Succesful",
         *       "senderRefId": "12345678"
         *     } */
        LoanResponse: {
            /** @example UBP000001 */
            ubpTranId?: string;
            /** @example 2017-10-10T12:11:50Z */
            createdAt?: string;
            /** @example SUCCESS */
            state?: string;
            /** @example 0001 */
            senderRefId?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "404",
         *           "message": "Not Found",
         *           "description": ""
         *         }
         *       ]
         *     } */
        LoanError: {
            errors?: {
                code?: string;
                message?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB2565970798022",
         *           "type": "LOANS_PAYMENT",
         *           "createdAt": "2018-01-16T11:17:15.099",
         *           "state": "Payment Successful",
         *           "senderRefId": "12345678"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        LoanVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "records": [
         *         {
         *           "recordNumber": "1",
         *           "tranId": "S869993",
         *           "tranType": "D",
         *           "amount": "36.81",
         *           "currency": "PHP",
         *           "tranDate": "2017-03-25T00:00:00.000",
         *           "remarks2": "",
         *           "remarks": "Interest run",
         *           "balance": "99741.14",
         *           "balanceCurrency": "PHP",
         *           "postedDate": "2017-07-28T22:31:13.000",
         *           "tranDescription": "100018122478:Int.Pd:01-01-2017 to 03-31-2017"
         *         }
         *       ],
         *       "totalRecords": "1",
         *       "lastRunningBalance": "100048.070000"
         *     } */
        AccountHistoryResponse: {
            records?: {
                recordNumber?: string;
                tranId?: string;
                tranType?: string;
                amount?: string;
                currency?: string;
                tranDate?: string;
                remarks2?: string;
                remarks?: string;
                balance?: string;
                balanceCurrency?: string;
                postedDate?: string;
                tranDescription?: string;
            }[];
            totalRecords?: string;
            lastRunningBalance?: string;
        };
        /** @example {
         *       "amortization": {
         *         "monthly": 15000
         *       }
         *     } */
        AutoLoanResponse: {
            amortization?: {
                monthly?: number;
            };
        };
        /** @example {
         *       "brands": [
         *         "AUDI",
         *         "BMW",
         *         "CHEVROLET",
         *         "CHRYSLER",
         *         "DODGE",
         *         "FORD",
         *         "FOTON",
         *         "GREAT WALL",
         *         "HAIMA",
         *         "HINO",
         *         "HONDA",
         *         "HOWO",
         *         "HYUNDAI",
         *         "ISUZU",
         *         "JAC",
         *         "JAGUAR",
         *         "JEEP",
         *         "JINBEI",
         *         "JMC",
         *         "KIA",
         *         "LAND ROVER",
         *         "LEXUS",
         *         "MAHINDRA",
         *         "MAN",
         *         "MASERATI",
         *         "MAZDA",
         *         "MERCEDES",
         *         "MERCEDES BENZ",
         *         "MG",
         *         "MINI",
         *         "MITSUBISHI",
         *         "NISSAN",
         *         "PEUGEOT",
         *         "PORSCHE",
         *         "RANGE ROVER",
         *         "SHACMAN",
         *         "SINOTRUK",
         *         "SUBARU",
         *         "SUZUKI",
         *         "TATA",
         *         "TGS",
         *         "TOYOTA",
         *         "VOLKSWAGEN",
         *         "VOLVO",
         *         "YUTONG"
         *       ]
         *     } */
        AutoBrands: {
            brands?: string[];
        };
        /** @example [
         *       {
         *         "code": "000743",
         *         "brand": "AUDI",
         *         "model": "A3 1.8 TURBO FSI S-TRONIC",
         *         "srp": 2790000
         *       },
         *       {
         *         "code": 759,
         *         "brand": "AUDI",
         *         "model": "Q5 2.0 TDI QUATTRO S-TRONIC",
         *         "srp": 4950000
         *       },
         *       {
         *         "code": "003067",
         *         "brand": "AUDI",
         *         "model": "A3 2.0 TDI ATTRACTION",
         *         "srp": 2630000
         *       },
         *       {
         *         "code": 3068,
         *         "brand": "AUDI",
         *         "model": "A3 2.0 TDI AMBITION",
         *         "srp": 2730000
         *       },
         *       {
         *         "code": "003071",
         *         "brand": "AUDI",
         *         "model": "A6 1.8 TURBO FSI S-TRONIC",
         *         "srp": 4950000
         *       }
         *     ] */
        AutoVehicles: {
            code?: string;
            brand?: string;
            model?: string;
            srp?: number;
        }[];
        /** @example {
         *       "amortization": {
         *         "monthly": 67101.58
         *       }
         *     } */
        HousingLoanResponse: {
            amortization?: {
                monthly?: number;
            };
        };
        /** @example {
         *       "ccDiscounts": [
         *         {
         *           "name": "Zalora Discount",
         *           "description": "This promo is open to all UnionBank Credit and Debit cardholders who will purchase on the ZALORA website or ZALORA app within the promo period.",
         *           "merchant": "Zalora",
         *           "permitNumber": "DTI-FTEB Permit No. 1541, Series of 2018",
         *           "percentage": "12%",
         *           "minimumPurchase": "P500",
         *           "expiration": "Promo period is until December 31, 2018 only."
         *         },
         *         {
         *           "name": "Splash Island Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing",
         *           "merchant": "Splash Island",
         *           "permitNumber": "DTI-FTEB Permit No. 6063. Series of 2018",
         *           "percentage": "50%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from April 15, 2018 to April 14, 2019"
         *         },
         *         {
         *           "name": "Jinio Discount",
         *           "description": "This promo is open to all UnionBank Credit and Debit Cardholders “(Cardholders)” in good credit standing.",
         *           "merchant": "Jinio",
         *           "permitNumber": "DTI-FTEB Permit No. 6065. Series of 2018",
         *           "percentage": "15%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo period is from April 15, 2018 to April 15, 2019"
         *         },
         *         {
         *           "name": "Fashion Smile Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Fashion Smile",
         *           "permitNumber": "DTI-FTEB Permit No. 1004. Series of 2018",
         *           "percentage": "20%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from February 1 to December 31, 2018"
         *         },
         *         {
         *           "name": "Aramesh Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Aramesh",
         *           "permitNumber": "DTI-FTEB Permit No. 1004. Series of 2018",
         *           "percentage": "15%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from February 1 to December 31, 2018"
         *         }
         *       ]
         *     } */
        CreditCardDiscount: {
            dcDiscounts?: {
                name?: string;
                description?: string;
                merchant?: string;
                permitNumber?: string;
                percentage?: string;
                minimumPurchase?: string;
                expiration?: string;
            }[];
        };
        /** @example {
         *       "ccPromos": [
         *         {
         *           "name": "Allegra's Kitchen Discount",
         *           "description": "Free Mac and Cheese or Allegra’s Fried Chicken for a minimum single receipt of P700 using your UnionBank Credit or Debit Card",
         *           "merchant": "Allegra's Kitchen",
         *           "permitNumber": "DTI-FTEB Permit No. 4063, Series of 2018",
         *           "percentage": "10%",
         *           "minimumPurchase": "P700",
         *           "expiration": "Promo period is from March 15 to December 31, 2018"
         *         },
         *         {
         *           "name": "Berjaya Makati Hotel Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Berjaya Makati Hotel",
         *           "permitNumber": "DTI-FTEB Permit No. 6250, Series of 2018",
         *           "Percentage": "60%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from June 1, 2018 to May 31, 2019"
         *         },
         *         {
         *           "name": "Bluewater Maribago Beach Resort Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Bluewater Maribago Beach Resort",
         *           "permitNumber": "DTI-FTEB Permit No. 1744, Series of 2018",
         *           "percentage": "20%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from June 1, 2018 to May 31, 2019"
         *         },
         *         {
         *           "name": "Bluewater Panglao Beach Resort Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Bluewater Panglao Beach Resort",
         *           "permitNumber": "DTI-FTEB Permit No. 1744, Series of 2018",
         *           "percentage": "15%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from June 1, 2018 to May 31, 2019"
         *         },
         *         {
         *           "name": "Bluewater Sumilon Beach Resort Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Bluewater Sumilon Beach Resort",
         *           "permitNumber": "DTI-FTEB Permit No. 1744, Series of 2018",
         *           "percentage": "15%",
         *           "minimumPurchase": "P1000",
         *           "xxpiration": "Promo is from June 1, 2018 to May 31, 2019"
         *         }
         *       ]
         *     } */
        CreditCardPromos: {
            ccPromos?: {
                name?: string;
                description?: string;
                merchant?: string;
                permitNumber?: string;
                percentage?: string;
                minimumPurchase?: string;
                expiration?: string;
            }[];
        };
        /** @example {
         *       "dcDiscounts": [
         *         {
         *           "name": "Zalora Discount",
         *           "description": "This promo is open to all UnionBank Credit and Debit cardholders who will purchase on the ZALORA website or ZALORA app within the promo period.",
         *           "merchant": "Zalora",
         *           "permitNumber": "DTI-FTEB Permit No. 1541, Series of 2018",
         *           "percentage": "12%",
         *           "minimumPurchase": "P500",
         *           "expiration": "Promo period is until December 31, 2018 only."
         *         },
         *         {
         *           "name": "Splash Island Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing",
         *           "merchant": "Splash Island",
         *           "permitNumber": "DTI-FTEB Permit No. 6063. Series of 2018",
         *           "percentage": "50%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from April 15, 2018 to April 14, 2019"
         *         },
         *         {
         *           "name": "Jinio Discount",
         *           "description": "This promo is open to all UnionBank Credit and Debit Cardholders “(Cardholders)” in good credit standing.",
         *           "merchant": "Jinio",
         *           "permitNumber": "DTI-FTEB Permit No. 6065. Series of 2018",
         *           "percentage": "15%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo period is from April 15, 2018 to April 15, 2019"
         *         },
         *         {
         *           "name": "Fashion Smile Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Fashion Smile",
         *           "permitNumber": "DTI-FTEB Permit No. 1004. Series of 2018",
         *           "percentage": "20%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from February 1 to December 31, 2018"
         *         },
         *         {
         *           "name": "Aramesh Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Aramesh",
         *           "permitNumber": "DTI-FTEB Permit No. 1004. Series of 2018",
         *           "percentage": "15%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from February 1 to December 31, 2018"
         *         }
         *       ]
         *     } */
        DebitCardDiscount: {
            dcDiscounts?: {
                name?: string;
                description?: string;
                merchant?: string;
                permitNumber?: string;
                percentage?: string;
                minimumPurchase?: string;
                expiration?: string;
            }[];
        };
        /** @example {
         *       "dcPromos": [
         *         {
         *           "name": "Allegra's Kitchen Discount",
         *           "description": "Free Mac and Cheese or Allegra’s Fried Chicken for a minimum single receipt of P700 using your UnionBank Credit or Debit Card",
         *           "merchant": "Allegra's Kitchen",
         *           "permitNumber": "DTI-FTEB Permit No. 4063, Series of 2018",
         *           "percentage": "10%",
         *           "minimumPurchase": "P700",
         *           "expiration": "Promo period is from March 15 to December 31, 2018"
         *         },
         *         {
         *           "name": "Berjaya Makati Hotel Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Berjaya Makati Hotel",
         *           "permitNumber": "DTI-FTEB Permit No. 6250, Series of 2018",
         *           "Percentage": "60%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from June 1, 2018 to May 31, 2019"
         *         },
         *         {
         *           "name": "Bluewater Maribago Beach Resort Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Bluewater Maribago Beach Resort",
         *           "permitNumber": "DTI-FTEB Permit No. 1744, Series of 2018",
         *           "percentage": "20%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from June 1, 2018 to May 31, 2019"
         *         },
         *         {
         *           "name": "Bluewater Panglao Beach Resort Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Bluewater Panglao Beach Resort",
         *           "permitNumber": "DTI-FTEB Permit No. 1744, Series of 2018",
         *           "percentage": "15%",
         *           "minimumPurchase": "P1000",
         *           "expiration": "Promo is from June 1, 2018 to May 31, 2019"
         *         },
         *         {
         *           "name": "Bluewater Sumilon Beach Resort Discount",
         *           "description": "Promo is open to all active UnionBank Credit and Debit Cardholders of good credit standing.",
         *           "merchant": "Bluewater Sumilon Beach Resort",
         *           "permitNumber": "DTI-FTEB Permit No. 1744, Series of 2018",
         *           "percentage": "15%",
         *           "minimumPurchase": "P1000",
         *           "xxpiration": "Promo is from June 1, 2018 to May 31, 2019"
         *         }
         *       ]
         *     } */
        DebitCardPromos: {
            ccPromos?: {
                name?: string;
                description?: string;
                merchant?: string;
                permitNumber?: string;
                percentage?: string;
                minimumPurchase?: string;
                expiration?: string;
            }[];
        };
        /** @example {
         *       "accountNumber": "109490002511",
         *       "cashKey": "1234"
         *     } */
        RegistrationRequest: {
            accountNumber?: string;
            cashKey?: string;
        };
        /** @example {
         *       "message": "Successfully registered"
         *     } */
        RegistrationResponse: {
            message?: string;
        };
        /** @example {
         *       "accountNumber": "80000016",
         *       "amount": 1000,
         *       "cashKey": "1234"
         *     } */
        WithdrawalRequest: {
            accountNumber?: string;
            amount?: number;
            cashKey?: string;
        };
        /** @example {
         *       "message": "Cash Code successfully setup and sent to your mobile number.",
         *       "expiryDate": "08-Aug-2018 11:33:19"
         *     } */
        WithdrawalResponse: {
            message?: string;
            expiryDate?: string;
        };
        /** @example {
         *       "senderId": "UnionBank",
         *       "mobileNumber": "639756971908"
         *     } */
        OTPSendRequest: {
            senderId?: string;
            mobileNumber?: string;
        };
        /** @example {
         *       "requestId": "99aecec5075546cbaf2a87e9fb725532"
         *     } */
        OTPSendResponse: {
            requestId?: string;
        };
        /** @example {
         *       "requestId": "99aecec5075546cbaf2a87e9fb725532",
         *       "pin": "111111"
         *     } */
        OTPVerifyRequest: {
            requestId?: string;
            pin?: string;
        };
        /** @example {
         *       "message": "OTP Verified"
         *     } */
        OTPVerifyResponse: {
            message?: string;
        };
        /** @example {
         *       "sessionToken": "rY5CFD9ja3as2I/pjQdicfPFu/w9XLj168LKv7FQZE7GmmsOdlY+kg4xMho/dM4nzL0cl0QOikEZ+14uZzoj7utjq+J05ruS8FhFQGtCTmSmh+LHZrdcoFLJD6x+8Z78sozhI023U"
         *     } */
        OnlineAccountInformation: {
            /** @description the session token of the customer generated in the metadata of the response body when requesting for an online access token */
            sessionToken?: string;
        };
        /** @example {
         *       "account_token": "aWQiOjB9iNmIsICOzYjN1IDM5UDMwEjI6ISZeyJ2YWx1",
         *       "masked_an": "6638"
         *     } */
        OnlineAccountInformationResponse: {
            account_token?: string;
            masked_an?: string;
        };
        /** @example {
         *       "senderRefId": "000112344321",
         *       "eonAccount": "109659422809",
         *       "amount": "100.00"
         *     } */
        TopUpRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description EON Account number */
            eonAccount?: string;
            /** @description Amount to top up */
            amount?: Record<string, never>;
        };
        /** @example {
         *       "senderRefId": "000112344321",
         *       "tranRequestDate": "2019-08-16T07:37:16.333",
         *       "eonAccount": "109659422809",
         *       "amount": "100.00",
         *       "fees": {
         *         "amount": "10.00"
         *       }
         *     } */
        EONTopUpRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description EON Account number */
            eonAccount?: string;
            /** @description Amount to be TopUp */
            amount?: Record<string, never>;
            /** @description Fees amount */
            "fees.amount"?: Record<string, never>;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": 41,
         *       "state": "Successfully processed request",
         *       "uuid\"": "e60eb6a7-996c-41b1-8b4e-560241da740b",
         *       "description": "Successful Request",
         *       "type": "EON_TRANSFERS",
         *       "amount": 1,
         *       "ubpTranId": "UB5231",
         *       "coreCode": 0,
         *       "authCode": "da740b",
         *       "tranFinacleDate": "2021-05-18"
         *     } */
        TopUpResponse: {
            code?: string;
            senderRefId?: number;
            state?: string;
            tranRequestDate?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            coreCode?: string;
            authCode?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": 41,
         *       "state": "Successfully processed request",
         *       "uuid\"": "e60eb6a7-996c-41b1-8b4e-560241da740b",
         *       "description": "Successful Request",
         *       "type": "EON_TRANSFERS",
         *       "amount": 1,
         *       "ubpTranId": "UB5231",
         *       "coreCode": 0,
         *       "authCode": "da740b",
         *       "tranFinacleDate": "2021-05-18"
         *     } */
        EONTopUpResponse: {
            code?: string;
            senderRefId?: number;
            state?: string;
            tranRequestDate?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            coreCode?: string;
            authCode?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB2172482376917",
         *           "type": "CASA_TO_EON_TRANSFER",
         *           "createdAt": "2019-02-14T00:07:16.000Z",
         *           "state": "CA",
         *           "senderRefId": "123123"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        EONVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "records": {
         *         "senderRefId": "UBP123123",
         *         "code": "TS",
         *         "state": "Successful transaction",
         *         "uuid": "7e3ba663-8bcf-4792-8ab6-3b7581c0259d",
         *         "description": null,
         *         "type": "EON_TRANSFERS",
         *         "amount": 1,
         *         "ubpTranId": "c0259d",
         *         "reversalUbpTranId": null,
         *         "trace": "RequestProcessed",
         *         "tranRequestDate": "2021-06-22T03:30:16.000Z",
         *         "tranFinacleDate": "2021-05-18",
         *         "createdAt": "2021-06-25T12:07:06.000Z",
         *         "updatedAt": "2021-06-25T12:07:08.000"
         *       },
         *       "totalRecords": 1
         *     } */
        EONVerificationResponse: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "0001",
         *       "refnumber": "8602746013876224",
         *       "amount": "1000"
         *     } */
        TopUpRefRequest: {
            senderRefId?: string;
            refnumber?: string;
            amount?: string;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2019-08-16T07:37:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "description": "Payment",
         *       "processor": "UBP",
         *       "recipient": {
         *         "name": {
         *           "first": "Juan",
         *           "middle": "S",
         *           "last": "Dela Cruz"
         *         },
         *         "address": {
         *           "line1": "UnionBank Plaza",
         *           "line2": "asdasd",
         *           "barangay": "101",
         *           "city": "Pasig",
         *           "province": "Metro Manila"
         *         },
         *         "email": "test@unionbankph.com",
         *         "mobileNumber": 9171234567,
         *         "birthDate": "2019-08-16",
         *         "nationality": "Madagascarian"
         *       }
         *     } */
        DragonpayRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            description?: string;
            processor?: string;
            recipient?: {
                name?: {
                    first?: string;
                    middle?: string;
                    last?: string;
                };
                address?: {
                    line1?: string;
                    line2?: string;
                    barangay?: string;
                    city?: string;
                    province?: string;
                };
                email?: string;
                mobileNumber?: string;
                birthDate?: string;
                nationality?: string;
            };
        };
        /** @example {
         *       "message": "Request for cash payout has been successfully completed.",
         *       "voucherId": "FGA4TL8A"
         *     } */
        DragonpayResponse: {
            message?: string;
            voucherId?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "CEBL",
         *           "name": "CEBL Cebuana Lhuillier Cash Pick-up"
         *         },
         *         {
         *           "code": "LBC",
         *           "name": "LBC Cash Pick-up"
         *         },
         *         {
         *           "code": "PRHB",
         *           "name": "PeraHub Cash Pick-up"
         *         }
         *       ]
         *     } */
        DragonpayLibraries: {
            records?: {
                code?: string;
                name?: string;
            }[];
        };
        /** @example {
         *       "record": [
         *         {
         *           "type": "dragonpay_payout",
         *           "createdAt": "2019-02-27T11:23:23.000Z",
         *           "state": "Pending",
         *           "senderRefId": "312983"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        DragonpayVerification: {
            record?: {
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "payload": {
         *         "ubpTranId": "UB71481710713",
         *         "createdAt": "2017-10-10T12:11:50.333",
         *         "state": "Payment Successful",
         *         "senderRefId": "0001"
         *       },
         *       "signature": "36424e7f2e2e7dcd5582af580fbbd5aa272651f625741554bf7f699dc105957ca8ea9a5ab6575e01f9f472c5480225070b1f26969d5cccdcd0a6a1fda3275580261603cbab3f9f94e2a0b76df8319618d8b108f91735df46e585a4b8c1bf80e3b789e042965dc15f637e04accd5d05c0981d26f517d2c8342d63fc4ffdb0f818af73c636cd707be9fa9a8a4c517e7affaaca57f39f74f123c67eb277bc829c0e98fbf71cdc34ffcdfa85e305065c3ab5b7ed737c06a510a2e5d916c616279360c5725dc8862929236052ee187b800312671eb76d4e1f5e3f02c0addd3bffc314737ff76e33e207d7e393c7474aa1483cd3b2588df5a9d4e19a5a05e761e9c1b0",
         *       "publicKey": "-----BEGIN PUBLIC KEY-----MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWQwBmi+XQWuf1tCuep6LQWa1dom2bbN/WwE4ss6wH5rnhYcYTUHFbX7VhaCgQbT7FUdJogRtnR7g1y5dgt27yALsioYyfEvk6dOr+L3HkJ8/Z6pour9qqba79jLWgvPJrGX3zM09qeI0UK/8U2N0l2Yb4FVUsb+k9YZiELmV/yrjJbqa/xMgPj9H7AOWSdk7TPnSbI340U1qhJUR31DuNc7fvEUsNYqrouWwcVsTaiM1vC2ktlaN+414v50Wj6oaH+4iiJk6BoJegAXc6pbCKrc+gyvPgSANMAt46uAWSP4KbTfEgkkjfiM6grbpTWTY5j4ii4fU+u+OGSaT7qLUwIDAQAB-----END PUBLIC KEY-----"
         *     } */
        VerifySignatureRequest: {
            payload?: {
                ubpTranId?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            };
            signature?: string;
            publicKey?: string;
        };
        /** @example {
         *       "message": "Signature is valid."
         *     } */
        VerifySignatureResponse: {
            message?: string;
        };
        /** @example {
         *       "message": "Signature is invalid."
         *     } */
        VerifySignatureError: {
            message?: string;
        };
        /** @example {
         *       "customer": {
         *         "name": {
         *           "first": "First",
         *           "last": "Last",
         *           "middle": "Middle"
         *         },
         *         "sex": "M",
         *         "nic": 1234567890,
         *         "title": "Mr",
         *         "birthDate": "01/01/2000",
         *         "birthPlace": "Birth Place",
         *         "nationality": "Filipino",
         *         "fundSource": 1,
         *         "mobileNumber": 9999999999,
         *         "email": "email@email.com",
         *         "motherMaidenName": "Maiden Name",
         *         "presentAddress": {
         *           "line1": "Line 1",
         *           "line2": "Line 2",
         *           "line3": "Line 3",
         *           "city": "City",
         *           "province": "Province",
         *           "zipCode": 0,
         *           "country": "Country"
         *         },
         *         "category": "NORM"
         *       },
         *       "employment": {
         *         "company": "Company Corporation",
         *         "workNature": "IT",
         *         "status": "EMP"
         *       },
         *       "id": {
         *         "type": "SSS",
         *         "number": 0
         *       }
         *     } */
        CustomerRequest: {
            customer?: {
                name?: {
                    first?: string;
                    last?: string;
                    middle?: string;
                };
                sex?: string;
                nic?: string;
                title?: string;
                birthDate?: string;
                birthPlace?: string;
                nationality?: string;
                fundSource?: string;
                mobileNumber?: string;
                email?: string;
                motherMaidenName?: string;
                presentAddress?: {
                    line1?: string;
                    line2?: string;
                    line3?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
                category?: string;
            };
            employment?: {
                company?: string;
                workNature?: string;
                status?: string;
            };
            id?: {
                type?: string;
                number?: string;
            };
        };
        /** @example {
         *       "message": "Successfully created Customer.",
         *       "customerId": "13179"
         *     } */
        CustomerResponse: {
            message?: string;
            customerId?: string;
        };
        /** @example {
         *       "bankCode": "0001",
         *       "branchCode": "0000001",
         *       "productCode": "PRD000",
         *       "customerId": 13179
         *     } */
        CardRequest: {
            bankCode?: string;
            branchCode?: string;
            productCode?: string;
            customerId?: string;
        };
        /** @example {
         *       "message": "Successfully created a Card.",
         *       "account": {
         *         "number": 999938066080000100000,
         *         "type": "pp",
         *         "currency": "608",
         *         "status": "9"
         *       },
         *       "card": {
         *         "number": "4373150200000234",
         *         "cvv2": "823",
         *         "expiryDate": "2901"
         *       }
         *     } */
        CardResponse: {
            message?: string;
            account?: {
                number?: string;
                type?: string;
                currency?: string;
                status?: string;
            };
            card?: {
                number?: string;
                cvv2?: string;
                expiryDate?: string;
            };
        };
        /** @example {
         *       "availBalance": "10000.00",
         *       "currentBalance": "9000.00",
         *       "accountLimit": "50000.00"
         *     } */
        CardBalance: {
            availBalance?: string;
            currentBalance?: string;
            accountLimit?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "EMP",
         *           "description": "Employed"
         *         },
         *         {
         *           "code": "CON",
         *           "description": "Consultant"
         *         },
         *         {
         *           "code": "SEB",
         *           "description": "Self-employed with own business"
         *         },
         *         {
         *           "code": "SEF",
         *           "description": "Self-employed as online freelancer"
         *         },
         *         {
         *           "code": "UEH",
         *           "description": "Unemployed, Housewife"
         *         },
         *         {
         *           "code": "UER",
         *           "description": "Unemployed, Retired"
         *         },
         *         {
         *           "code": "UES",
         *           "description": "Unemployed, Student"
         *         }
         *       ],
         *       "totalRecords": "7"
         *     } */
        IBLLibraries: {
            records?: {
                code?: string;
                description?: string;
            }[];
            totalRecords?: string;
        };
        /** @example {
         *       "customer": {
         *         "name": {
         *           "first": "First",
         *           "last": "Last",
         *           "middle": "Middle"
         *         },
         *         "sex": "M",
         *         "nic": 1234567890,
         *         "title": "Mr",
         *         "birthDate": "01/01/2000",
         *         "birthPlace": "Birth Place",
         *         "nationality": "Filipino",
         *         "fundSource": 1,
         *         "mobileNumber": 9999999999,
         *         "email": "email@email.com",
         *         "motherMaidenName": "Maiden Name",
         *         "presentAddress": {
         *           "line1": "Line 1",
         *           "line2": "Line 2",
         *           "line3": "Line 3",
         *           "city": "City",
         *           "province": "Province",
         *           "zipCode": "1233",
         *           "country": "Country"
         *         },
         *         "category": "NORM"
         *       },
         *       "employment": {
         *         "company": "Company Corporation",
         *         "workNature": "IT",
         *         "status": "EMP"
         *       },
         *       "id": {
         *         "type": "SSS",
         *         "number": "000000"
         *       }
         *     } */
        IBLCardActivation: {
            customer?: {
                name?: {
                    first?: string;
                    last?: string;
                    middle?: string;
                };
                sex?: string;
                nic?: number;
                title?: string;
                birthDate?: string;
                birthPlace?: string;
                nationality?: string;
                fundSource?: number;
                mobileNumber?: string;
                email?: string;
                motherMaidenName?: string;
                presentAddress?: {
                    line1?: string;
                    line2?: string;
                    line3?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
                category?: string;
            };
            employment?: {
                company?: string;
                workNature?: string;
                status?: string;
            };
            id?: {
                type?: string;
                number?: string;
            };
        };
        /** @example {
         *       "message": "Card is Activated, Request Force PIN Change"
         *     } */
        IBLCardActivationResponse: {
            message?: string;
        };
        /** @example {
         *       "PIN": "456789",
         *       "newPIN": "123456",
         *       "activationCode": "12345"
         *     } */
        IBLCardPin: {
            PIN?: string;
            newPIN?: string;
            activationCode?: string;
        };
        /** @example {
         *       "message": "Successfully Changed PIN."
         *     } */
        IBLCardPinResponse: {
            message?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "card": {
         *             "number": "4373150200000168",
         *             "productType": "PRD725",
         *             "status": "9"
         *           },
         *           "account": {
         *             "number": 999938066080000100000,
         *             "currency": "608",
         *             "availableBalance": "0.00",
         *             "currentBalance": "0.00",
         *             "limit": "0"
         *           },
         *           "expiryDate": "02/29"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        IBLLinkCardResponse: {
            records?: {
                card?: {
                    number?: string;
                    productType?: string;
                    status?: string;
                };
                account?: {
                    number?: string;
                    currency?: string;
                    availableBalance?: string;
                    currentBalance?: string;
                    limit?: string;
                };
                expiryDate?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "cardNumber": 4373150200000168,
         *       "amount": 1000,
         *       "currency": 608
         *     } */
        IBLTopUpRequest: {
            cardNumber?: number;
            amount?: number;
            currency?: number;
        };
        /** @example {
         *       "message": "Topup successful.",
         *       "transmissionDate": "0215153211"
         *     } */
        IBLTopUpResponse: {
            message?: string;
            transmissionDate?: string;
        };
        /** @example {
         *       "senderRefId": "123",
         *       "tranRequestDate": "2019-01-01T01:01:01.111",
         *       "customer": {
         *         "birthPlace": "Pasig",
         *         "birthDate": "1987-06-15",
         *         "nationality": 9,
         *         "civilStatus": "S",
         *         "sex": "F",
         *         "homePhoneNumber": "5111111",
         *         "mobileNumber": "639277251453",
         *         "email": "juan@gmail.com",
         *         "fundSource": "19000",
         *         "title": "MS",
         *         "shortName": "TEST",
         *         "name": {
         *           "first": "JUAN",
         *           "last": "DELA CRUZ",
         *           "middle": "TEST"
         *         },
         *         "presentAddress": {
         *           "line1": "Present",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122",
         *           "startDate": "2017-05-15"
         *         },
         *         "permanentAddress": {
         *           "line1": "Permanent",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122",
         *           "startDate": "2010-07-21"
         *         },
         *         "motherMaidenName": "Jane dela Cruz",
         *         "passport": {
         *           "id": "EB123456789",
         *           "countryOfIssue": "PH"
         *         }
         *       },
         *       "employment": {
         *         "name": "UnionBank",
         *         "occupation": "Z3",
         *         "status": "Salaried",
         *         "industryType": "00001",
         *         "workNature": "17000",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "1820A",
         *           "province": "999",
         *           "zipCode": "987544",
         *           "country": "122",
         *           "startDate": "2017-08-21"
         *         },
         *         "phoneNumber": "5111111"
         *       },
         *       "document": {
         *         "placeOfIssue": "122",
         *         "dateOfIssue": "2017-01-01",
         *         "referenceId": "ART87901",
         *         "organization": "LTO",
         *         "code": "00001",
         *         "type": "17000"
         *       },
         *       "partnerName": "TRUEMONEY",
         *       "customerCode": "RA250001"
         *     } */
        OverdraftAccountRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            customer?: {
                birthPlace?: string;
                birthDate?: string;
                nationality?: string;
                civilStatus?: string;
                sex?: string;
                homePhoneNumber?: string;
                mobileNumber?: string;
                email?: string;
                fundSource?: string;
                title?: string;
                shortName?: string;
                name?: {
                    first?: string;
                    last?: string;
                    middle?: string;
                };
                presentAddress?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                    startDate?: string;
                };
                permanentAddress?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                    startDate?: string;
                };
                motherMaidenName?: string;
                passport?: {
                    id?: string;
                    countryOfIssue?: string;
                };
            };
            employment?: {
                name?: string;
                occupation?: string;
                status?: string;
                industryType?: string;
                workNature?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                    startDate?: string;
                };
                phoneNumber?: string;
            };
            document?: {
                placeOfIssue?: string;
                dateOfIssue?: string;
                referenceId?: string;
                organization?: string;
                code?: string;
                type?: string;
            };
            partnerName?: string;
            customerCode?: string;
        };
        /** @example {
         *       "status": "Account Opened",
         *       "accountToken": "rY5CFD9ja3as2I/pjQdidPHNWrs2qQPIJIMg5yuP9SPPt/9GJCHmc6VJRTUOS2+ops/yibVNp2m8VHhzMuZbuTTPHMEV4LqBZUNVmuWg6X8Zm2tmFSAez0mtDcGAsjb+Fr7a7aYPGIh7NCBZg8ZL9JPyJmyvPx+DIADE"
         *     } */
        OverdraftAccountResponse: {
            status?: string;
            accountToken?: string;
        };
        /** @example {
         *       "outstandingBalance": "0",
         *       "creditLimit": "2500"
         *     } */
        OverdraftAccountStatus: {
            outstandingBalance?: string;
            creditLimit?: string;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2018-01-16T11:17:15.099",
         *       "amount": "100"
         *     } */
        LoanPaymentRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: string;
        };
        /** @example {
         *       "senderRefId": "0001111",
         *       "ubpTranId": "UB7660269150510",
         *       "createdAt": "2018-01-16T11:17:15.099",
         *       "state": "Credited Beneficiary Account"
         *     } */
        LoanPaymentResponse: {
            senderRefId?: string;
            ubpTranId?: string;
            createdAt?: string;
            state?: string;
        };
        /** @example {
         *       "senderRefId": "12345678",
         *       "tranRequestDate": "2018-01-16T11:17:15.099",
         *       "amount": "100"
         *     } */
        AvailmentRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: string;
        };
        /** @example {
         *       "senderRefId": "1231212",
         *       "ubpTranId": "UB882006029131",
         *       "amount": "100",
         *       "tranDate": "2018-01-16T11:17:15.099",
         *       "state": "Credited Beneficiary Account",
         *       "dueDate": "4/4/2019"
         *     } */
        AvailmentResponse: {
            senderRefId?: string;
            ubpTranId?: string;
            amount?: string;
            tranDate?: string;
            state?: string;
            dueDate?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "ubpTranId": "UB5339490463956",
         *           "type": "ODA_LOAN",
         *           "createdAt": "2018-01-16T11:17:15.000Z",
         *           "state": "Credited Beneficiary Account",
         *           "senderRefId": "1231212"
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        AvailmentVerification: {
            records?: {
                ubpTranId?: string;
                type?: string;
                createdAt?: string;
                state?: string;
                senderRefId?: string;
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "0001",
         *       "tranDate": "2017-10-10T12:11:50.333",
         *       "amount": "1000",
         *       "expFxRoute": "2019-04-01T00:00:00.000",
         *       "currencyFrom": "PHP",
         *       "currencyTo": "USD"
         *     } */
        ForexRequest: {
            senderRefId?: string;
            tranDate?: string;
            amount?: string;
            expFxRoute?: string;
            currencyFrom?: string;
            currencyTo?: string;
        };
        /** @example {
         *       "ubpTranId": "UB4208860322832",
         *       "tranDate": "2019-04-01T00:00:00.000",
         *       "senderRefId": "0001",
         *       "transferredAmount": 51650,
         *       "state": "Successful"
         *     } */
        ForexResponse: {
            ubpTranId?: string;
            tranDate?: string;
            senderRefId?: string;
            transferredAmount?: number;
            state?: string;
        };
        /** @example {
         *       "merchantId": "1",
         *       "items": [
         *         {
         *           "value": "100",
         *           "quantity": "1"
         *         }
         *       ],
         *       "referenceNo": "UB123",
         *       "sender": {
         *         "name": "Juan del Cruz",
         *         "mobile": 9123456789,
         *         "email": "email@sample.com"
         *       },
         *       "recipient": {
         *         "name": "John Doe",
         *         "mobile": 9987654321,
         *         "email": "email@sample.com"
         *       },
         *       "message": "Hello",
         *       "tags": "tags"
         *     } */
        OrderForm: {
            merchantId?: string;
            items?: {
                value?: string;
                quantity?: string;
            }[];
            referenceNo?: string;
            sender?: {
                name?: string;
                mobile?: string;
                email?: string;
            };
            recipient?: {
                name?: string;
                mobile?: string;
                email?: string;
            };
            message?: string;
            tags?: string;
        };
        /** @example {
         *       "status": "Successful",
         *       "orderId": "999999",
         *       "referenceNo": "UB123",
         *       "urls": [
         *         "http://gft.ph/111a111"
         *       ],
         *       "credits": {
         *         "balance": "500.00",
         *         "used": "100.00"
         *       }
         *     } */
        OrderFormResponse: {
            status?: string;
            orderId?: string;
            referenceNo?: string;
            urls?: string[];
            credits?: {
                balance?: string;
                used?: string;
            };
        };
        /** @example {
         *       "referenceNo": "UB123"
         *     } */
        OrderResendForm: {
            referenceNo?: string;
        };
        /** @example {
         *       "status": "Successful"
         *     } */
        OrderResendResponse: {
            status?: string;
        };
        /** @example [
         *       {
         *         "merchantId": "1",
         *         "name": "Nautica",
         *         "logoUrl": "http://images.giftaway.ph/abc.png",
         *         "tagline": "Water-inspired Lifestyle Apparel",
         *         "category": "Shop",
         *         "subcategory": "Apparel",
         *         "locationCount": "2",
         *         "denominationCount": "4",
         *         "isVirtual": "false",
         *         "hasMarkup": "false"
         *       }
         *     ] */
        MerchantsResponse: {
            merchantId?: string;
            name?: string;
            logoUrl?: string;
            tagline?: string;
            category?: string;
            subcategory?: string;
            locationCount?: string;
            denominationCount?: string;
            isVirtual?: string;
            hasMarkup?: string;
        }[];
        /** @example {
         *       "merchant_id": "60",
         *       "name": "Nautica",
         *       "logoUrl": "http://images.giftaway.ph/abc.png",
         *       "tagline": "Water-inspired Lifestyle Apparel",
         *       "category": "Shop",
         *       "subcategory": "Apparel",
         *       "locations": [
         *         {
         *           "location_id": "262",
         *           "name": "Alabang Town Center",
         *           "streetLine1": "Corporate Avenue cor Civic Dr Filinvest Corporate City",
         *           "streetLine2": "",
         *           "businessHours": "* M, T, W, Th, F: 11:00AM - 9:00PM * Sat, Sun: 10:00AM - 10:00PM",
         *           "city": "Muntinlupa",
         *           "longitude": "121.029064",
         *           "latitude": "14.424529"
         *         }
         *       ],
         *       "contacts": [
         *         "(02) 869-7083"
         *       ],
         *       "denominations": [
         *         {
         *           "denominationId": "228",
         *           "logoUrl": "http://images.giftaway.ph/abc.png",
         *           "name": "500",
         *           "value": "500.00",
         *           "price": "500.00",
         *           "shortDescription": "Good for simple accessories",
         *           "description": ""
         *         }
         *       ],
         *       "isVirtual": "false",
         *       "hasCustom": "true",
         *       "hasMarkup": "false",
         *       "minimumCustomValue": 100,
         *       "maximumCustomValue": 20000,
         *       "finePrint": " *Each eGift has a unique code that corresponds to an amount or item. To use the eGift at the store, the code must be given by the recipient to the store manager for validation.",
         *       "recommendations": "###Recommendations * Timeless shirts and polos * Bottoms such as jeans or shorts",
         *       "highlights": "###Highlights * Classic sports and casual wear * Comfortable material and fit",
         *       "writeup": " Tastefully explore what the world offers by wearing Nautica. This brand was founded on 1983 as a collection of men’s outerwear. It soon expanded its reach to apparel and accessories catering to women and children as well."
         *     } */
        MerchantIdResponse: {
            merchant_id?: string;
            name?: string;
            logoUrl?: string;
            tagline?: string;
            category?: string;
            subcategory?: string;
            locations?: {
                location_id?: string;
                name?: string;
                streetLine1?: string;
                streetLine2?: string;
                businessHours?: string;
                city?: string;
                longitude?: string;
                latitude?: string;
            }[];
            contacts?: string[];
            denominations?: {
                denominationId?: string;
                logoUrl?: string;
                name?: string;
                value?: string;
                price?: string;
                shortDescription?: string;
                description?: string;
            }[];
            isVirtual?: string;
            hasCustom?: string;
            hasMarkup?: string;
            minimumCustomValue?: number;
            maximumCustomValue?: number;
            finePrint?: string;
            recommendations?: string;
            highlights?: string;
            writeup?: string;
        };
        /** @example {
         *       "status": "Successful",
         *       "orderId": "999999",
         *       "referenceNo": "UB123",
         *       "urls": [
         *         "http://gft.ph/111a111"
         *       ]
         *     } */
        OroderRefNumResponse: {
            status?: string;
            orderId?: string;
            referenceNo?: string;
            urls?: string[];
        };
        /** @example {
         *       "message": "Successfully get all Operators.",
         *       "totalRecords": 1,
         *       "records": [
         *         {
         *           "operatorId": "3127",
         *           "operator": "ABS-CBN Mobile Philippines",
         *           "countryId": "840",
         *           "country": "Philippines",
         *           "destinationCurrency": "PHP"
         *         }
         *       ]
         *     } */
        LibraryOperators: {
            message?: string;
            totalRecords?: number;
            records?: {
                operatorId?: string;
                operator?: string;
                countryId?: string;
                country?: string;
                destinationCurrency?: string;
            }[];
        };
        /** @example {
         *       "message": "Successfully get all Countries.",
         *       "totalRecords": 3,
         *       "records": [
         *         {
         *           "countryId": "840",
         *           "country": "Philippines",
         *           "destinationCurrency": "PHP"
         *         },
         *         {
         *           "countryId": "766",
         *           "country": "India",
         *           "destinationCurrency": "INR"
         *         },
         *         {
         *           "countryId": "863",
         *           "country": "Singapore",
         *           "destinationCurrency": "SGD"
         *         }
         *       ]
         *     } */
        DtoneLibraryResponse: {
            message?: string;
            totalRecords?: number;
            records?: {
                countryId?: string;
                country?: string;
                destinationCurrency?: string;
            }[];
        };
        /** @example {
         *       "message": "Successfully get all Products.",
         *       "totalRecords": 16,
         *       "records": [
         *         {
         *           "productId": "10",
         *           "operatorId": "246",
         *           "operator": "Globe Telecom Philippines",
         *           "countryId": "840",
         *           "country": "Philippines",
         *           "destinationCurrency": "PHP",
         *           "retailPriceList": "12"
         *         },
         *         {
         *           "productId": "15",
         *           "operatorId": "246",
         *           "operator": "Globe Telecom Philippines",
         *           "countryId": "840",
         *           "country": "Philippines",
         *           "destinationCurrency": "PHP",
         *           "retailPriceList": "18"
         *         },
         *         {
         *           "productId": "25",
         *           "operatorId": "246",
         *           "operator": "Globe Telecom Philippines",
         *           "countryId": "840",
         *           "country": "Philippines",
         *           "destinationCurrency": "PHP",
         *           "retailPriceList": "29.9"
         *         }
         *       ]
         *     } */
        OperatorProducts: {
            message?: string;
            totalRecords?: number;
            records?: {
                productId?: string;
                operatorId?: string;
                operator?: string;
                countryId?: string;
                country?: string;
                destinationCurrency?: string;
                retailPriceList?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "20190824802",
         *       "tranRequestDate": "2019-08-16T07:37:16.333",
         *       "mobileNumber": "639275559167",
         *       "product": "10",
         *       "remarks": "Load top up remarks",
         *       "particulars": "Load top up particulars"
         *     } */
        DtoneTopUp: {
            senderRefId?: string;
            tranRequestDate?: string;
            mobileNumber?: string;
            product?: string;
            remarks?: string;
            particulars?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "20190824802",
         *       "ubpTranId": "UB5070916640061",
         *       "tranRequestDate": "2019-11-04T07:14:18.957",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "ebb96b32-1a2b-4a87-a52e-58cddce3fde4",
         *       "coreRefId": "398482888",
         *       "operatorReferenceId": "6399635203",
         *       "reversalUbpTranId": "UB417461"
         *     } */
        DtoneTopUpResponse: {
            code?: string;
            senderRefId?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
            state?: string;
            uuid?: string;
            coreRefId?: string;
            operatorReferenceId?: string;
            reversalUbpTranId?: string;
        };
        /** @example {
         *       "requirements": [
         *         {
         *           "code": "01",
         *           "requirement": "Proof of Billing Address",
         *           "validItems": [
         *             {
         *               "code": "01",
         *               "idName": "Mayor's Permit"
         *             },
         *             {
         *               "code": "02",
         *               "idName": "Lease Contract"
         *             },
         *             {
         *               "code": "03",
         *               "idName": "Utility Bills (such as Meralco, Water Bills, etc.)"
         *             },
         *             {
         *               "code": "04",
         *               "idName": "DTI Certificate for Sole Proprietors"
         *             }
         *           ],
         *           "notes": [
         *             {
         *               "code": "01",
         *               "message": "Only utility bills dated within the last two (2) months can be accepted."
         *             },
         *             {
         *               "code": "02",
         *               "message": "Your declared address and other information should match with other Business Documents."
         *             },
         *             {
         *               "code": "03",
         *               "message": "Watermark should be clearly visible."
         *             },
         *             {
         *               "code": "04",
         *               "message": "Certification should be in the last 5 years."
         *             }
         *           ]
         *         },
         *         {
         *           "code": "02",
         *           "requirement": "DTI or SEC Certificate",
         *           "validItems": [
         *             {
         *               "code": "01",
         *               "idName": "SEC Certificate for Corporations"
         *             }
         *           ],
         *           "notes": [
         *             {
         *               "code": "01",
         *               "message": "Dry seal should be clearly visible."
         *             },
         *             {
         *               "code": "02",
         *               "message": "For Partnerships, please submit your updated Article of Partnership together with your SEC Certificate."
         *             },
         *             {
         *               "code": "03",
         *               "message": "Your declared address and other information should match with other Business Documents."
         *             }
         *           ]
         *         },
         *         {
         *           "code": "03",
         *           "requirement": "BIR Certificate of Registration",
         *           "validItems": [
         *             {
         *               "code": "01",
         *               "idName": "Form 2303"
         *             }
         *           ],
         *           "notes": [
         *             {
         *               "code": "01",
         *               "message": "Your declared address and other information should match with other Business Documents."
         *             }
         *           ]
         *         },
         *         {
         *           "code": "04",
         *           "requirement": "General Information Sheet",
         *           "validItems": [
         *             {
         *               "code": "01",
         *               "idName": "Form 2303"
         *             }
         *           ],
         *           "notes": [
         *             {
         *               "code": "01",
         *               "message": "For corporations only."
         *             },
         *             {
         *               "code": "02",
         *               "message": "Submit copies of all pages of your most recently filed General Information Sheet for verification purposes."
         *             },
         *             {
         *               "code": "03",
         *               "message": "Please ensure that the document has a stamp from the SEC."
         *             }
         *           ]
         *         }
         *       ]
         *     } */
        BusinessRequirements: {
            requirements?: {
                code?: string;
                requirement?: string;
                validItems?: {
                    code?: string;
                    idName?: string;
                }[];
                notes?: {
                    code?: string;
                    message?: string;
                }[];
            }[];
        };
        /** @example {
         *       "requirements": [
         *         {
         *           "code": "01",
         *           "requirement": "1 Valid Government ID of the Business Owner or a Board Member",
         *           "validItems": [
         *             {
         *               "code": "01",
         *               "idName": "Passport"
         *             },
         *             {
         *               "code": "02",
         *               "idName": "Driver's License"
         *             },
         *             {
         *               "code": "03",
         *               "idName": "TIN ID"
         *             },
         *             {
         *               "code": "04",
         *               "idName": "PRC ID"
         *             },
         *             {
         *               "code": "05",
         *               "idName": "Postal ID"
         *             },
         *             {
         *               "code": "06",
         *               "idName": "Unified Multi-Purpose ID"
         *             }
         *           ],
         *           "notes": [
         *             {
         *               "code": "01",
         *               "message": "Must be the ID of the Business Owner or a Board Member"
         *             },
         *             {
         *               "code": "02",
         *               "message": "Must have the person’s signature on the ID."
         *             },
         *             {
         *               "code": "03",
         *               "message": "Must still be valid"
         *             },
         *             {
         *               "code": "04",
         *               "message": "The ID must be colored and not black & white"
         *             },
         *             {
         *               "code": "05",
         *               "message": "Scanned ID’s are accepted"
         *             }
         *           ]
         *         }
         *       ]
         *     } */
        PersonalRequirements: {
            requirements?: {
                code?: string;
                requirement?: string;
                validItems?: {
                    code?: string;
                    idName?: string;
                }[];
                notes?: {
                    code?: string;
                    message?: string;
                }[];
            }[];
        };
        /** @example {
         *       "acceptedId": [
         *         {
         *           "code": "1",
         *           "name": "Philippine Passport"
         *         },
         *         {
         *           "code": "2",
         *           "name": "Driver's License"
         *         },
         *         {
         *           "code": "3",
         *           "name": "Tax Identification Number (TIN) Card"
         *         },
         *         {
         *           "code": "4",
         *           "name": "Unified Multi-Purpose ID (UMID) Card"
         *         },
         *         {
         *           "code": "5",
         *           "name": "Government Service Insurance System (GSIS) e-Card"
         *         },
         *         {
         *           "code": "6",
         *           "name": "Social Security System (SSS) Card"
         *         },
         *         {
         *           "code": "7",
         *           "name": "PhilHealth ID"
         *         },
         *         {
         *           "code": "8",
         *           "name": "Voter's ID"
         *         },
         *         {
         *           "code": "9",
         *           "name": "Postal ID"
         *         },
         *         {
         *           "code": "10",
         *           "name": "Senior Citizen ID"
         *         },
         *         {
         *           "code": "11",
         *           "name": "OFW ID"
         *         },
         *         {
         *           "code": "12",
         *           "name": "Government Office and GOCC ID, e.g. Armed forces of the Philippines (AFP ID), Home Development Mutual Fund (HDMF ID)"
         *         }
         *       ]
         *     } */
        AdvanceLendingResponse: {
            acceptedId?: {
                code?: string;
                name?: string;
            }[];
        };
        /** @example {
         *       "data": {
         *         "listings": {
         *           "billers": [
         *             {
         *               "name": "SONY LIFE INSURANCE",
         *               "code": "BC_SONYL",
         *               "type": "INSURANCE, PRE-NEED, & HEALTHCARE",
         *               "fee": "0.00",
         *               "logo": "https://multipayph.s3.ap-southeast-1.amazonaws.com/billers/BC_SONYL.png",
         *               "category": "INSURANCE",
         *               "meta": [
         *                 {
         *                   "label": "Policy Number",
         *                   "field": "account_number",
         *                   "type": "Number",
         *                   "is_required": true
         *                 },
         *                 {
         *                   "label": "Amount",
         *                   "field": "amount",
         *                   "type": "Number",
         *                   "is_required": true
         *                 },
         *                 {
         *                   "label": "Due Date",
         *                   "field": "due_date",
         *                   "type": "Calendar",
         *                   "is_required": true
         *                 }
         *               ]
         *             },
         *             {
         *               "name": "Maritime Industry Authority",
         *               "code": "MARINA",
         *               "type": "GOVERNMENT",
         *               "fee": "50.00",
         *               "logo": "https://ucarecdn.com/5ce27553-ead2-4290-a716-d52b1f1fc7ff/",
         *               "category": "GOVERNMENT",
         *               "meta": [
         *                 {
         *                   "label": "Reference Number",
         *                   "field": "account_number"
         *                 },
         *                 {
         *                   "label": "Amount",
         *                   "field": "amount"
         *                 }
         *               ]
         *             },
         *             {
         *               "name": "MERALCO - CMS",
         *               "code": "BC_MECOA",
         *               "type": "ELECTRICITY",
         *               "fee": "0.00",
         *               "logo": "https://multipayph.s3.ap-southeast-1.amazonaws.com/billers/BC_MECOA.png",
         *               "category": "UTILITIES",
         *               "meta": [
         *                 {
         *                   "label": "Meralco Reference No.",
         *                   "field": "account_number",
         *                   "type": "Text",
         *                   "is_required": true
         *                 },
         *                 {
         *                   "label": "Pay For",
         *                   "field": "pay_for",
         *                   "type": "Dropdown",
         *                   "is_required": true,
         *                   "options": [
         *                     {
         *                       "key": "Total Current Amount",
         *                       "value": "TCA"
         *                     },
         *                     {
         *                       "key": "Balance From Previous Billing",
         *                       "value": "B"
         *                     },
         *                     {
         *                       "key": "Current Charges",
         *                       "value": "C"
         *                     },
         *                     {
         *                       "key": "Total Amount Due",
         *                       "value": "T"
         *                     }
         *                   ]
         *                 },
         *                 {
         *                   "label": "Amount",
         *                   "field": "amount",
         *                   "type": "Number",
         *                   "is_required": true
         *                 },
         *                 {
         *                   "label": "Mobile Number",
         *                   "field": "mobile_number",
         *                   "type": "mobilenumber",
         *                   "is_required": true
         *                 }
         *               ]
         *             }
         *           ]
         *         }
         *       }
         *     } */
        DA5Biller: {
            data?: {
                listings?: {
                    billers?: {
                        name?: string;
                        code?: string;
                        type?: string;
                        fee?: string;
                        logo?: string;
                        category?: string;
                        meta?: {
                            label?: string;
                            field?: string;
                            type?: string;
                            is_required?: boolean;
                        }[];
                    }[];
                };
            };
        };
        /** @example {
         *       "records": [
         *         {
         *           "record": {
         *             "senderRefId": "00001",
         *             "code": "TS",
         *             "uuid": "93703e37-5711-466b-8c5e-822d9fa2c203",
         *             "description": "Credited Beneficiary Account",
         *             "type": "DA_BILLS",
         *             "ubpTranId": "UB343",
         *             "reversalTranId": "null",
         *             "amount": "10",
         *             "daTransactionId": "1A85192670000105",
         *             "daTransactionNo": "192671A8560000105",
         *             "receiptValidationNo": "381A85153518",
         *             "createdAt": "2019-09-24T15:45:58.000Z",
         *             "updatedAt": "2019-09-24T15:46:02.000Z"
         *           }
         *         }
         *       ],
         *       "totalRecords": 1
         *     } */
        DA5CheckBills: {
            records?: {
                record?: {
                    senderRefId?: string;
                    code?: string;
                    uuid?: string;
                    description?: string;
                    type?: string;
                    ubpTranId?: string;
                    reversalTranId?: string;
                    amount?: string;
                    daTransactionId?: string;
                    daTransactionNo?: string;
                    receiptValidationNo?: string;
                    createdAt?: string;
                    updatedAt?: string;
                };
            }[];
            totalRecords?: number;
        };
        /** @example {
         *       "senderRefId": "00001",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "biller": "BC_SONYL",
         *       "account_number": "0000016241",
         *       "amount": "10",
         *       "due_date": "2019-12-31"
         *     } */
        DA5PayBillsRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            biller?: string;
            account_number?: string;
            amount?: string;
            due_date?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "50012321341231",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "ubpTranId": "UB458",
         *       "state": "You have successfully processed this transaction",
         *       "uuid": "33f07a29-d60c-4d8e-a8e2-3bc624a54232",
         *       "daTransactionId": "1A85192670000105",
         *       "daTransactionNo": "192671A8560000105",
         *       "recieptVslidatioNo": "381A85153518"
         *     } */
        DA5PayBillsResponse: {
            code?: string;
            senderRefId?: string;
            tranRequestDate?: string;
            ubpTranId?: string;
            state?: string;
            uuid?: string;
            daTransactionId?: string;
            daTransactionNo?: string;
            recieptVslidatioNo?: string;
        };
        /** @example {
         *       "senderRefId": "UB0000001232",
         *       "tranRequestDate": "2020-02-03T12:50:59.123",
         *       "reasonForCancellation": "CONVID19"
         *     } */
        InsuranceCancelRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            reasonForCancellation?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "TF",
         *           "description": "Failed to process request",
         *           "details": {
         *             "senderRefId": "UB0000001232",
         *             "tranRequestDate": "2020-02-03T12:50:59.123",
         *             "message": "Cancelled",
         *             "uuid": "1c1256b2-3333-4bff-9101-e51250c8d9fa",
         *             "coreCode": "F"
         *           }
         *         }
         *       ]
         *     } */
        InsuranceCancelResponse: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: string;
                    tranRequestDate?: string;
                    message?: string;
                    uuid?: string;
                    coreCode?: string;
                };
            }[];
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UB0000001232",
         *         "code": "SP",
         *         "state": "Credited Beneficiary Account",
         *         "uuid": "1c1256b2-3333-4bff-9101-e51250c8d9fa",
         *         "description": "Credited to the customer's account",
         *         "type": "INLIFE_INSURANCE",
         *         "amount": "150.00",
         *         "ubpTranId": null,
         *         "orderItemId": "API-UB0000001232-Test UBP SB ",
         *         "planCode": "UBPGDS1906",
         *         "tranFinacleDate": "2018-11-12",
         *         "createdAt": "2020-04-22T19:49:01.000Z",
         *         "updatedAt": null
         *       }
         *     } */
        InsuranceGetResponse: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: unknown;
                orderItemId?: string;
                planCode?: string;
                tranFinacleDate?: string;
                createdAt?: string;
                updatedAt?: unknown;
            };
        };
        /** @example {
         *       "memberEmailAddress": "juandelacruz@gmail.com",
         *       "memberMobileNo": 9091435254
         *     } */
        InsurancePlanRequest: {
            memberEmailAddress?: string;
            memberMobileNo?: string;
        };
        /** @example {
         *       "planList": [
         *         {
         *           "id": 1,
         *           "planCode": "UBPGDS1906",
         *           "planName": "Duo Shield",
         *           "premium": "150.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/logo/Duo Shield.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/Duo Shield.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Shield Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Duo Shield_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Duo Shield_1.jpg"
         *         },
         *         {
         *           "id": 2,
         *           "planCode": "UBPGFS1902",
         *           "planName": "Family Shield",
         *           "premium": "260.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/Family Shield.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/Family Shield.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Shield Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Family Shield_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Family Shield_1.jpg"
         *         },
         *         {
         *           "id": 3,
         *           "planCode": "UBPGGT1801",
         *           "planName": "InLife Premium Protect Plus",
         *           "premium": "1200.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/InLife Premium Protect Plus.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/InLife Premium Protect Plus.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Protect Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Premium Protect Plus_0.jpg",
         *           "planBenefits1benefit": null
         *         },
         *         {
         *           "id": 4,
         *           "planCode": "UBPGGT1802",
         *           "planName": "InLife Premium Protect",
         *           "premium": "1100.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/InLife Premium Protect.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/InLife Premium Protect.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Protect Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Premium Protect_0.jpg",
         *           "planBenefits1benefit": null
         *         },
         *         {
         *           "id": 5,
         *           "planCode": "UBPGGT1803",
         *           "planName": "InLife Protect Plus",
         *           "premium": "500.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/InLife Protect Plus.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/InLife Protect Plus.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Protect Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Protect Plus_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Protect Plus_1.jpg"
         *         },
         *         {
         *           "id": 6,
         *           "planCode": "UBPGGT1804",
         *           "planName": "InLife Protect",
         *           "premium": "400.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/InLife Protect.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/InLife Protect.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Protect Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Protect_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Protect_1.jpg"
         *         },
         *         {
         *           "id": 7,
         *           "planCode": "UBPGGT1907",
         *           "planName": "InLife Protect 250",
         *           "premium": "250.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/InLife Protect 250.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/InLife Protect 250.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Protect Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Protect 250_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Protect 250_1.jpg"
         *         },
         *         {
         *           "id": 8,
         *           "planCode": "UBPGGT1908",
         *           "planName": "InLife Premium Protect 1000",
         *           "premium": "1000.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/InLife Premium Protect 1000.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/InLife Premium Protect 1000.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Protect Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Premium Protect 1000_0.jpg",
         *           "planBenefits1benefit": null
         *         },
         *         {
         *           "id": 9,
         *           "planCode": "UBPGJS1901",
         *           "planName": "Junior Shield",
         *           "premium": "195.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/logo/Junior Shield.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/Junior Shield.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Shield Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Junior Shield_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Junior Shield_1.jpg"
         *         },
         *         {
         *           "id": 10,
         *           "planCode": "UBPGLS1904",
         *           "planName": "Legacy Shield",
         *           "premium": "355.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/Legacy Shield.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/Legacy Shield.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Shield Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Legacy Shield_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Legacy Shield_1.jpg"
         *         },
         *         {
         *           "id": 11,
         *           "planCode": "UBPGPS1903",
         *           "planName": "Parent Shield",
         *           "premium": "285.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/Parent Shield.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlist.azurewebsites.net/images/products/details/Parent Shield.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Shield Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Parent Shield_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Parent Shield_1.jpg"
         *         },
         *         {
         *           "id": 12,
         *           "planCode": "UBPGPS1905",
         *           "planName": "Personal Shield",
         *           "premium": "99.00",
         *           "stocks": "0",
         *           "planLogo": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/logo/Personal Shield.jpg",
         *           "planBanner": null,
         *           "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/Personal Shield.jpg",
         *           "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *           "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *           "additionalInfo": null,
         *           "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Shield Plans.jpg",
         *           "planExclusions": null,
         *           "termsandconditions": null,
         *           "declarationofhealth": null,
         *           "qrCode": "https://insularlife.com.ph/img.jpg",
         *           "lineOfBusiness": "GROUP",
         *           "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *           "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *           "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Personal Shield_0.jpg",
         *           "planBenefits1benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/Personal Shield_1.jpg"
         *         }
         *       ],
         *       "responseCode": "200",
         *       "responseDesc": "Success"
         *     } */
        InsurancePlanResponse: {
            planList?: {
                id?: number;
                planCode?: string;
                planName?: string;
                premium?: string;
                stocks?: string;
                planLogo?: string;
                planBanner?: unknown;
                planDetails?: string;
                activationProcess?: string;
                freeLook?: string;
                additionalInfo?: unknown;
                refund?: string;
                planExclusions?: unknown;
                termsandconditions?: unknown;
                declarationofhealth?: unknown;
                qrCode?: string;
                lineOfBusiness?: string;
                planWidget0widget?: string;
                planWidget1widget?: string;
                planBenefits0benefit?: string;
                planBenefits1benefit?: string;
            }[];
            responseCode?: string;
            responseDesc?: string;
        };
        /** @example {
         *       "planCode": "UBPGGT1801"
         *     } */
        InsurancePlanSearchRequest: {
            planCode?: string;
        };
        /** @example {
         *       "id": 3,
         *       "planCode": "UBPGGT1801",
         *       "planName": "InLife Premium Protect Plus",
         *       "premium": "1200.00",
         *       "stocks": "0",
         *       "planLogo": "https://uat-inlifeproductlist.azurewebsites.net/images/products/logo/InLife Premium Protect Plus.jpg",
         *       "planBanner": null,
         *       "planDetails": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/details/InLife Premium Protect Plus.jpg",
         *       "activationProcess": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/ActivationProcess.jpg",
         *       "freeLook": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/generalinfo/FreeLook.jpg",
         *       "additionalInfo": null,
         *       "refund": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/category/refund/Protect Plans.jpg",
         *       "planExclusions": null,
         *       "termsandconditions": null,
         *       "declarationofhealth": null,
         *       "qrCode": "https://insularlife.com.ph/img.jpg",
         *       "lineOfBusiness": "GROUP",
         *       "planWidget0widget": "https://insularlife.com/ph/img.jpg",
         *       "planWidget1widget": "https://insularlife.com/ph/img.jpg",
         *       "planBenefits0benefit": "https://uat-inlifeproductlistadmin.azurewebsites.net/images/products/benefits/InLife Premium Protect Plus_0.jpg",
         *       "planBenefits1benefit": null
         *     } */
        InsurancePlanSearchResponse: {
            id?: number;
            planCode?: string;
            planName?: string;
            premium?: string;
            stocks?: string;
            planLogo?: string;
            planBanner?: unknown;
            planDetails?: string;
            activationProcess?: string;
            freeLook?: string;
            additionalInfo?: unknown;
            refund?: string;
            planExclusions?: unknown;
            termsandconditions?: unknown;
            declarationofhealth?: unknown;
            qrCode?: string;
            lineOfBusiness?: string;
            planWidget0widget?: string;
            planWidget1widget?: string;
            planBenefits0benefit?: string;
            planBenefits1benefit?: unknown;
        };
        /** @example {
         *       "senderRefId": "UB0000001232",
         *       "tranRequestDate": "2020-02-03T12:50:59.123",
         *       "planCode": "UBPGDS1906",
         *       "lineOfBusiness": "GROUP",
         *       "memberEmailAddress": "juandelacruz@gmail.com",
         *       "memberMobileNo": 9338661634
         *     } */
        InsuranceSingleRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            planCode?: string;
            lineOfBusiness?: string;
            memberEmailAddress?: string;
            memberMobileNo?: string;
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "UB0000001232",
         *       "state": "Sent for Processing",
         *       "uuid": "1c1256b2-3333-4bff-9101-e51250c8d9fa",
         *       "description": "Request is sent for processing",
         *       "type": "INLIFE_INSURANCE",
         *       "amount": "150.00",
         *       "ubpTranId": "UB3058313497667",
         *       "tranRequestDate": "2020-02-03T12:50:59.123",
         *       "orderItemId": "API-UB0000001232-Test UBP SB ",
         *       "url": "https://uat-inlifeactivationpage.azurewebsites.net/ecomm/Registration/Register?ReferenceKey=42fab2a05253ef504cefae1e84183860da116456e623b626bc1fd39bbf500119fde6f598c930cf792228fb070b97fe41a6c1a6bc2ff40adf9aaf5fdc5451d0fb7bb35dc03f5e6239efdca86487ef2e8e89c8534f6a444ffc404476cfe1aa23557343b9998b06b93377b6bb5cfaf84d813bd214ed3c9d36a571f3c4ad18a1b27ee5f0b20798018a18e387856e8e25f21d1ffabf993b2a3fd13921928a8b6a8f7f68ce0ee36be31b5b7023f1ea14294c44ebb212a0920e441de1b8468e993b83719d9a71c7dff8e64cd1d63050921b5b06aae06fbf69152bdefcf0aab3276eb31c9fac1a6ba8fb0ed28febfe85f41ba57537eaf9187e8edd90604c7d4ddbdeb1da",
         *       "tranFinacleDate": "2018-11-12"
         *     } */
        InsuranceSingleResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
            orderItemId?: string;
            url?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "amount": 100,
         *       "cardNumber": "4915 7808 4210 8170"
         *     } */
        GetgoTopUpViaPartnersv3Request: {
            amount?: number;
            cardNumber?: string;
        };
        /** @example {
         *       "amount": 100,
         *       "referenceNumber": "2412682",
         *       "expiryDate": 1587619774
         *     } */
        GetgoTopUpViaPartnersv3Response: {
            amount?: number;
            referenceNumber?: string;
            expiryDate?: number;
        };
        /** @example {
         *       "amount": "100",
         *       "transactionId": "396f526b-ef2a-4c50-ba0c-9173a3057889",
         *       "cardNumber": "***************8170",
         *       "expiryDate": "1587619774"
         *     } */
        GetgoTopUpViaPartnersv3Details: {
            amount?: string;
            transactionId?: string;
            cardNumber?: string;
            expiryDate?: string;
        };
        /** @example {
         *       "record": [
         *         {
         *           "senderRefId": "UBGETGO001",
         *           "state": "Failed to processed request",
         *           "code": "TF",
         *           "uuid": "550e91ac-k50s-4dcf-81c9-56bq06ede45e",
         *           "description": "Transaction has Failed",
         *           "type": "GETGO_TOPUP",
         *           "amount": null,
         *           "ubpTranId": null,
         *           "referenceNumber": null,
         *           "tranRequestDate": "2020-05-07T10:23:16.000Z",
         *           "createdAt": "2020-06-10T13:54:10.000Z",
         *           "updatedAt": "2020-06-10T13:54:57.000Z"
         *         },
         *         {
         *           "senderRefId": "UBGETGO001",
         *           "state": "Failed to processed request",
         *           "code": "TF",
         *           "uuid": "550e91ac-k50s-4dcf-81c9-56bq06ede45e",
         *           "description": "Transaction has Failed",
         *           "type": "GETGO_TOPUP",
         *           "amount": null,
         *           "ubpTranId": null,
         *           "referenceNumber": null,
         *           "tranRequestDate": "2020-05-07T10:23:16.000Z",
         *           "createdAt": "2020-06-10T13:54:10.000Z",
         *           "updatedAt": "2020-06-10T13:54:57.000Z"
         *         }
         *       ]
         *     } */
        GetgoTopUpViaPartnersv3CheckStatus: {
            record?: {
                senderRefId?: string;
                state?: string;
                code?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: unknown;
                ubpTranId?: unknown;
                referenceNumber?: unknown;
                tranRequestDate?: string;
                createdAt?: string;
                updatedAt?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "7738655",
         *       "tranRequestDate": "2020-05-07T10:23:17.333",
         *       "transactionId": "c10b0e8c-ea15-458d-bc00-d882502493c3"
         *     } */
        GetgoTopUpViaPartnersv3SingleRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            transactionId?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "7738655",
         *       "tranRequestDate": "2020-08-05T08:28:37.377",
         *       "ubpTranId": "UB128279",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "c902249b-5232-41f0-bfa2-3e2d3da84e13",
         *       "coreRefId": "c10b0e8c-ea15-458d-bc00-d882502493c3",
         *       "referenceNumber": 7738655
         *     } */
        GetgoTopUpViaPartnersv3SingleResponse: {
            code?: string;
            senderRefId?: string;
            tranRequestDate?: string;
            ubpTranId?: string;
            state?: string;
            uuid?: string;
            coreRefId?: string;
            referenceNumber?: number;
        };
        /** @example {
         *       "products": [
         *         {
         *           "id": "f8b4b88656ce482f98209b8bfd754f83",
         *           "name": "Travel PA (Family/Group), anywhere in the World",
         *           "description": "Ensure your family/group against loss directly and independently of all other causes from bodily injury caused by accident, 24 hours a day, within cover period,  while traveling",
         *           "plans": [
         *             {
         *               "id": "5bc9d95392da418e83880ac4768c2ba9",
         *               "product_id": "f8b4b88656ce482f98209b8bfd754f83",
         *               "name": "Silver",
         *               "parameters": [
         *                 "num_people"
         *               ],
         *               "currency": "PHP",
         *               "premium_amount": "10.8",
         *               "max_claim_amount": "10000",
         *               "max_claim_count": "1",
         *               "coverage_period": {
         *                 "duration_type": "days",
         *                 "duration": "4"
         *               }
         *             },
         *             {
         *               "id": "b3142986f04a4e3a851193b683291b6a",
         *               "product_id": "f8b4b88656ce482f98209b8bfd754f83",
         *               "name": "Gold",
         *               "parameters": [
         *                 "num_people"
         *               ],
         *               "currency": "PHP",
         *               "premium_amount": "162",
         *               "max_claim_amount": "150000",
         *               "max_claim_count": "1",
         *               "coverage_period": {
         *                 "duration_type": "days",
         *                 "duration": "7"
         *               }
         *             }
         *           ]
         *         },
         *         {
         *           "id": "52986c52f2a2423ab95b7ef4b1db0270",
         *           "name": "Personal Driver/Family Driver PA",
         *           "description": "Ensure your driver's safety should anything happen to them while they are under your employ or running errands for you as he drives you to several places. Cover for accidental death and disabilty.",
         *           "plans": [
         *             {
         *               "id": "d3a874b68522465ca6313a1c02e3b467",
         *               "product_id": "52986c52f2a2423ab95b7ef4b1db0270",
         *               "name": "Silver",
         *               "parameters": null,
         *               "currency": "PHP",
         *               "premium_amount": "5.5",
         *               "max_claim_amount": "10000",
         *               "max_claim_count": "1",
         *               "coverage_period": {
         *                 "duration_type": "calendar_month",
         *                 "duration": "3"
         *               }
         *             },
         *             {
         *               "id": "670c42bbeead408091849d55efd97cd2",
         *               "product_id": "52986c52f2a2423ab95b7ef4b1db0270",
         *               "name": "Gold",
         *               "parameters": null,
         *               "currency": "PHP",
         *               "premium_amount": "55",
         *               "max_claim_amount": "100000",
         *               "max_claim_count": "1",
         *               "coverage_period": {
         *                 "duration_type": "calendar_month",
         *                 "duration": "6"
         *               }
         *             }
         *           ]
         *         }
         *       ]
         *     } */
        IglooGetAllProducts: {
            products?: {
                id?: string;
                name?: string;
                description?: string;
                plans?: {
                    id?: string;
                    product_id?: string;
                    name?: string;
                    parameters?: string[];
                    currency?: string;
                    premium_amount?: string;
                    max_claim_amount?: string;
                    max_claim_count?: string;
                    coverage_period?: {
                        duration_type?: string;
                        duration?: string;
                    };
                }[];
            }[];
        };
        /** @example {
         *       "id": "62b393a762634505bf3d812472fa7ebd",
         *       "name": "Group PA - each member (minimum 10 members)",
         *       "description": "Ensure your company's or business' employees safety and cover for accidental death and disability. Minimum 10 members)",
         *       "plans": [
         *         {
         *           "id": "cfeed28688f947c2b45fedc85a1ebe19",
         *           "product_id": "62b393a762634505bf3d812472fa7ebd",
         *           "name": "Silver",
         *           "parameters": [
         *             "num_people"
         *           ],
         *           "currency": "PHP",
         *           "premium_amount": "9",
         *           "max_claim_amount": "10000",
         *           "max_claim_count": "1",
         *           "coverage_period": {
         *             "duration_type": "calendar_month",
         *             "duration": "3"
         *           }
         *         },
         *         {
         *           "id": "4a1ba4b3a0474e8ab120b9846e8354b4",
         *           "product_id": "62b393a762634505bf3d812472fa7ebd",
         *           "name": "Gold",
         *           "parameters": [
         *             "num_people"
         *           ],
         *           "currency": "PHP",
         *           "premium_amount": "90",
         *           "max_claim_amount": "100000",
         *           "max_claim_count": "1",
         *           "coverage_period": {
         *             "duration_type": "calendar_month",
         *             "duration": "6"
         *           }
         *         },
         *         {
         *           "id": "79b15f1da1104aae92f67571b8473e29",
         *           "product_id": "62b393a762634505bf3d812472fa7ebd",
         *           "name": "Platinum",
         *           "parameters": [
         *             "num_people"
         *           ],
         *           "currency": "PHP",
         *           "premium_amount": "225",
         *           "max_claim_amount": "250000",
         *           "max_claim_count": "1",
         *           "coverage_period": {
         *             "duration_type": "calendar_month",
         *             "duration": "12"
         *           }
         *         }
         *       ]
         *     } */
        IglooGetProduct: {
            id?: string;
            name?: string;
            description?: string;
            plans?: {
                id?: string;
                product_id?: string;
                name?: string;
                parameters?: string[];
                currency?: string;
                premium_amount?: string;
                max_claim_amount?: string;
                max_claim_count?: string;
                coverage_period?: {
                    duration_type?: string;
                    duration?: string;
                };
            }[];
        };
        /** @example {
         *       "plans": [
         *         {
         *           "id": "ce7fbc9cc7604a6ba96f5d8a5711cbb9",
         *           "product_name": "Burial Assistance - per Insured Person",
         *           "name": "Silver",
         *           "currency": "PHP",
         *           "premium_amount": "25",
         *           "max_claim_amount": "10000",
         *           "max_claim_count": "1",
         *           "coverage_period": {
         *             "duration_type": "calendar_month",
         *             "duration": "3"
         *           }
         *         },
         *         {
         *           "id": "85196d04dbf541428ad1661eaeb3bd62",
         *           "product_name": "Employment Assistance (Loss of Income)",
         *           "name": "Silver",
         *           "currency": "PHP",
         *           "premium_amount": "25",
         *           "max_claim_amount": "3000",
         *           "max_claim_count": "1",
         *           "coverage_period": {
         *             "duration_type": "calendar_month",
         *             "duration": "3"
         *           }
         *         },
         *         {
         *           "id": "1c23dce6d98248938bd77044ed415280",
         *           "product_name": "Murder and Unprovoked Assault",
         *           "name": "Silver",
         *           "currency": "PHP",
         *           "premium_amount": "12",
         *           "max_claim_amount": "10000",
         *           "max_claim_count": "1",
         *           "coverage_period": {
         *             "duration_type": "calendar_month",
         *             "duration": "3"
         *           }
         *         },
         *         {
         *           "id": "430fd8ae95424f88b8a5999753805467",
         *           "product_name": "Personal Third Party Liability +++",
         *           "name": "Silver",
         *           "currency": "PHP",
         *           "premium_amount": "15",
         *           "max_claim_amount": "10000",
         *           "max_claim_count": "1",
         *           "coverage_period": {
         *             "duration_type": "calendar_month",
         *             "duration": "3"
         *           }
         *         }
         *       ]
         *     } */
        IglooGetAddOns: {
            plans?: {
                id?: string;
                product_name?: string;
                name?: string;
                currency?: string;
                premium_amount?: string;
                max_claim_amount?: string;
                max_claim_count?: string;
                coverage_period?: {
                    duration_type?: string;
                    duration?: string;
                };
            }[];
        };
        /** @example {
         *       "planId": "cfeed28688f947c2b45fedc85a1ebe19",
         *       "addonPlanIds": [
         *         "ce7fbc9cc7604a6ba96f5d8a5711cbb9"
         *       ],
         *       "parameters": [
         *         {
         *           "name": "num_people",
         *           "value": "10"
         *         }
         *       ]
         *     } */
        IglooPremiumRequest: {
            planId?: string;
            addonPlanIds?: string[];
            parameters?: {
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "premium": "340",
         *       "uuid": "cef9f74a-ebb0-49a9-84bb-be68f7a981a6"
         *     } */
        IglooPremiumResponse: {
            premium?: string;
            uuid?: string;
        };
        /** @example {
         *       "senderRefId": "2031223412",
         *       "tranRequestDate": "2020-05-07T10:23:16.333",
         *       "amount": "340",
         *       "planInfo": {
         *         "planId": "cfeed28688f947c2b45fedc85a1ebe19",
         *         "addonPlanIds": [
         *           "ce7fbc9cc7604a6ba96f5d8a5711cbb9"
         *         ],
         *         "parameters": [
         *           {
         *             "name": "num_people",
         *             "value": "10"
         *           }
         *         ]
         *       },
         *       "buyerInfo": {
         *         "id": "buyer-123",
         *         "firstName": "John",
         *         "lastName": "Wick",
         *         "birthday": "2018-03-20",
         *         "email": "juandelacruz@gmail.com",
         *         "phoneNumber": 9999999999,
         *         "address": "Jkt Indonesia",
         *         "postCode": "12345"
         *       }
         *     } */
        IglooPurchasePolicyRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: string;
            planInfo?: {
                planId?: string;
                addonPlanIds?: string[];
                parameters?: {
                    name?: string;
                    value?: string;
                }[];
            };
            buyerInfo?: {
                id?: string;
                firstName?: string;
                lastName?: string;
                birthday?: string;
                email?: string;
                phoneNumber?: string;
                address?: string;
                postCode?: string;
            };
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "421",
         *       "state": "Sent for Processing",
         *       "uuid": "44484066-b454-4038-9b87-111f9e40a388",
         *       "description": "Request is sent for processing",
         *       "ubpTranId": "UB755",
         *       "finacleDate": "2019-02-04",
         *       "policyId": "buyer-123",
         *       "activationUrl": "https://web.ubp.staging.axinan.com?user_id=UBP-buyer-123&session_token=2sVBeaNBSfVOpYtDwwzqHYAR1DtbkWGPeF0pHj2Hjcw&action=activate",
         *       "claimUrl": "https://web.ubp.staging.axinan.com?user_id=UBP-buyer-123&session_token=2sVBeaNBSfVOpYtDwwzqHYAR1DtbkWGPeF0pHj2Hjcw&action=claim",
         *       "status": "Policy Issued",
         *       "createdAt": "2020-07-07T02:59:43.352Z",
         *       "updatedAt": "2020-07-07T02:59:43.352Z"
         *     } */
        IglooPurchasePolicyResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            ubpTranId?: string;
            finacleDate?: string;
            policyId?: string;
            activationUrl?: string;
            claimUrl?: string;
            status?: string;
            createdAt?: string;
            updatedAt?: string;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "2031223416",
         *         "code": "SP",
         *         "state": "Sent for Processing",
         *         "uuid": "d98bf0d7-7c02-483a-ad20-2219ad75d936",
         *         "description": "Request is sent for processing",
         *         "type": "AXINAN_INSURANCE",
         *         "amount": "340",
         *         "ubpTranId": "",
         *         "reversalUbpTranId": "",
         *         "policyId": null,
         *         "activationUrl": "",
         *         "claimUrl": "",
         *         "trace": null,
         *         "tranRequestDate": "2020-05-07T10:23:16.000Z",
         *         "tranFinacleDate": "2019-02-06",
         *         "createdAt": "2020-07-08T13:05:26.000Z",
         *         "updatedAt": "2020-07-08T13:05:27.000Z"
         *       }
         *     } */
        IglooCheckStatusPolicyResponse: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                reversalUbpTranId?: string;
                policyId?: unknown;
                activationUrl?: string;
                claimUrl?: string;
                trace?: unknown;
                tranRequestDate?: string;
                tranFinacleDate?: string;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example {
         *       "senderRefId": "UB000260",
         *       "tranRequestDate": "2019-09-29T15:29:50.111",
         *       "recipientName": {
         *         "firstName": "Robertson",
         *         "lastName": "Chiang",
         *         "middleName": "Sy"
         *       },
         *       "recipientAddress": {
         *         "line1": "123 Sesame Street",
         *         "line2": "Childrens Television Workshop",
         *         "barangay": "Ugong",
         *         "city": "Pasig",
         *         "province": "Metro Manila"
         *       },
         *       "recipientEmail": "test@unionbankph.com",
         *       "recipientMobileNo": 9171234567,
         *       "recipientBirthDate": "1970-11-17",
         *       "recipientNationality": "Philippines",
         *       "amount": "1",
         *       "procId": "CEBL",
         *       "payoutDate": "2020-05-01T23:59:59.111"
         *     } */
        DragonpayPostRequestv3: {
            senderRefId?: string;
            tranRequestDate?: string;
            recipientName?: {
                firstName?: string;
                lastName?: string;
                middleName?: string;
            };
            recipientAddress?: {
                line1?: string;
                line2?: string;
                barangay?: string;
                city?: string;
                province?: string;
            };
            recipientEmail?: string;
            recipientMobileNo?: string;
            recipientBirthDate?: string;
            recipientNationality?: string;
            amount?: string;
            procId?: string;
            payoutDate?: string;
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "UB000261",
         *       "state": "Sent for Processing",
         *       "uuid": "a96a89b6-2e12-4acf-8214-a3cadb6d6758",
         *       "description": "Request status for processing",
         *       "type": "DP_CASHOUT",
         *       "amount": "1",
         *       "ubpTranId": "UB1127762643341",
         *       "dragonpayId": "5SSH01BZ",
         *       "tranRequestDate": "2019-09-29T15:29:50.111",
         *       "tranFinacleDate": "2019-09-29"
         *     } */
        DragonpayPostResponsev3: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            dragonpayId?: string;
            tranRequestDate?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "code": "TC",
         *       "senderRefId": "UB000259",
         *       "state": "Request cancelled",
         *       "uuid": "a905d821-68b1-4ae6-a4b4-099065dd6d99",
         *       "description": "Voided successfully",
         *       "type": "DP_CASHOUT",
         *       "amount": "1",
         *       "ubpTranId": "UB5305446106230",
         *       "reversalUbpTranId": "UB9075178623975",
         *       "coreCode": 0
         *     } */
        DragonpayVoidRespv3: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            reversalUbpTranId?: string;
            coreCode?: number;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UB000260",
         *         "code": "SP",
         *         "state": "Sent for Processing",
         *         "uuid": "9a2a1bff-e27f-49ab-b2b9-7965384a4473",
         *         "description": "Request status for processing",
         *         "type": "DP_CASHOUT",
         *         "amount": "1",
         *         "ubpTranId": "UB8871665422860",
         *         "reversalUbpTranId": "",
         *         "dragonpayId": "JOH3NJW3",
         *         "claimReferenceCode": "",
         *         "claimedStatus": "For Processing",
         *         "tranRequestDate": "2019-09-29T07:29:50.000Z",
         *         "tranFinacleDate": "2019-09-29",
         *         "createdAt": "2020-08-25T01:40:08.000Z",
         *         "updatedAt": ""
         *       }
         *     } */
        DragonpayGetTransactionv3: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                reversalUbpTranId?: string;
                dragonpayId?: string;
                claimReferenceCode?: string;
                claimedStatus?: string;
                tranRequestDate?: string;
                tranFinacleDate?: string;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "AUB",
         *           "name": "AUB",
         *           "description": "Asia United Bank CA/SA"
         *         },
         *         {
         *           "code": "BDO",
         *           "name": "BDO",
         *           "description": "Banco de Oro CA/SA"
         *         },
         *         {
         *           "code": "BFB",
         *           "name": "BPI Family",
         *           "description": "BPI Family Bank"
         *         },
         *         {
         *           "code": "BITC",
         *           "name": "Coins.ph",
         *           "description": ""
         *         },
         *         {
         *           "code": "BOC",
         *           "name": "BankCom",
         *           "description": ""
         *         },
         *         {
         *           "code": "BOG",
         *           "name": "BogusBank",
         *           "description": ""
         *         },
         *         {
         *           "code": "BPI",
         *           "name": "BPI",
         *           "description": "BPI CA/SAA"
         *         },
         *         {
         *           "code": "CBC",
         *           "name": "Chinabank",
         *           "description": ""
         *         },
         *         {
         *           "code": "CEBL",
         *           "name": "Cebuana",
         *           "description": "Cebuana Lhuillier Cash Pick-up"
         *         },
         *         {
         *           "code": "DBP",
         *           "name": "DBP",
         *           "description": ""
         *         },
         *         {
         *           "code": "EWB",
         *           "name": "EastWest",
         *           "description": "EastWest CA/SA"
         *         },
         *         {
         *           "code": "GCSH",
         *           "name": "Globe GCash",
         *           "description": "GCash"
         *         },
         *         {
         *           "code": "LBC",
         *           "name": "LBC",
         *           "description": "LBC Cash Pick-up"
         *         },
         *         {
         *           "code": "LBP",
         *           "name": "Landbank",
         *           "description": "Landbank CA/SA"
         *         },
         *         {
         *           "code": "MAY",
         *           "name": "Maybank",
         *           "description": ""
         *         },
         *         {
         *           "code": "MBTC",
         *           "name": "Metrobank",
         *           "description": "Metrobank CA/SA"
         *         },
         *         {
         *           "code": "MLH",
         *           "name": "MLhuillier",
         *           "description": ""
         *         },
         *         {
         *           "code": "PBCM",
         *           "name": "PBCom",
         *           "description": ""
         *         },
         *         {
         *           "code": "PNB",
         *           "name": "PNB",
         *           "description": "PNB individual CA/SA"
         *         },
         *         {
         *           "code": "PRHB",
         *           "name": "PeraHub",
         *           "description": "PeraHub Cash Pick-up (soon)"
         *         },
         *         {
         *           "code": "PSB",
         *           "name": "PSBank",
         *           "description": ""
         *         },
         *         {
         *           "code": "RCBC",
         *           "name": "RCBC",
         *           "description": "RCBC CA/SA, RCBC Savings Bank CA/SA, RCBC MyWallet"
         *         },
         *         {
         *           "code": "RCBP",
         *           "name": "RCBC Cash",
         *           "description": "RCBC/RCBC Savings Bank Cash Pick-up (soon)"
         *         },
         *         {
         *           "code": "RDP",
         *           "name": "RD Pawnshop",
         *           "description": ""
         *         },
         *         {
         *           "code": "SBA",
         *           "name": "Sterling Bank",
         *           "description": ""
         *         },
         *         {
         *           "code": "SBC",
         *           "name": "Security Bank",
         *           "description": "Security Bank CA/SA"
         *         },
         *         {
         *           "code": "SMRT",
         *           "name": "Smart Money",
         *           "description": "Smart Money (reserved)"
         *         },
         *         {
         *           "code": "TRMY",
         *           "name": "TrueMoney",
         *           "description": "TrueMoney Cash Pick-up (soon)"
         *         },
         *         {
         *           "code": "UBP",
         *           "name": "Unionbank",
         *           "description": "Unionbank CA/SA, EON"
         *         },
         *         {
         *           "code": "UCPB",
         *           "name": "UCPB",
         *           "description": "UCPB CA/SA"
         *         }
         *       ]
         *     } */
        DragonpayGetLibrariesv3: {
            records?: {
                code?: string;
                name?: string;
                description?: string;
            }[];
        };
        /** @example {
         *       "status": 200,
         *       "amount": "5001",
         *       "fee": 20,
         *       "result": "successful"
         *     } */
        DA5FeesResponse: {
            status?: number;
            amount?: string;
            fee?: number;
            result?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "F",
         *           "message": "Invalid or Missing Amount",
         *           "details": {
         *             "da5": {
         *               "errorCode": "D4210",
         *               "message": "failed"
         *             }
         *           }
         *         }
         *       ]
         *     } */
        DA5FeesErrorResponse: {
            errors?: {
                code?: string;
                message?: string;
                details?: {
                    da5?: {
                        errorCode?: string;
                        message?: string;
                    };
                };
            }[];
        };
        /** @example {
         *       "senderRefId": "20200501071020",
         *       "tranRequestDate": "2019-08-16T07:37:16.333",
         *       "DACN": "DA512704083780"
         *     } */
        DA5CancelRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            DACN?: string;
        };
        /** @example {
         *       "code": "TC",
         *       "senderRefId": "20200501071020",
         *       "state": "Request Cancelled",
         *       "uuid": "37546965-d9f2-44fd-94cf-5a694dea2c74",
         *       "description": "Request has been cancelled",
         *       "reversalUbpTranId": "UB9832",
         *       "reversalFInacleDate": "2019-05-29"
         *     } */
        DA5CancelResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            reversalUbpTranId?: string;
            reversalFInacleDate?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": -32,
         *           "description": "Failed to process request",
         *           "details": {
         *             "senderRefId": "20200501071020",
         *             "message": "No record match for the given parameters",
         *             "uuid": "8a215f77-4f38-4be5-8387-70bdb6d49b9f",
         *             "transaction": "RefIdValidation"
         *           }
         *         }
         *       ]
         *     } */
        DA5CancelErrorResponse: {
            errors?: {
                code?: number;
                description?: string;
                details?: {
                    senderRefId?: string;
                    message?: string;
                    uuid?: string;
                    transaction?: string;
                };
            }[];
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "20200501071020",
         *         "code": "SP",
         *         "state": "Sent for Processing",
         *         "uuid": "a0d6d6d6-b654-481c-af2d-dc900c55b704",
         *         "description": "Request is sent for processing",
         *         "type": "DA5_PAYOUT",
         *         "amount": "115",
         *         "fee": "15",
         *         "ubpTranId": "UB9828",
         *         "reversalUbpTranId": null,
         *         "DACN": "DA512704083780",
         *         "result": "OK",
         *         "trace": "RequestProcessed",
         *         "tranRequestDate": "2019-08-16T07:37:16.000Z",
         *         "tranFinacleDate": "2019-05-29",
         *         "tranReversalFinacleDate": null,
         *         "createdAt": "2020-09-28T13:20:06.000Z",
         *         "updatedAt": "2020-09-28T13:20:17.000Z"
         *       }
         *     } */
        DA5GetTransactionResponse: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                fee?: string;
                ubpTranId?: string;
                reversalUbpTranId?: unknown;
                DACN?: string;
                result?: string;
                trace?: string;
                tranRequestDate?: string;
                tranFinacleDate?: string;
                tranReversalFinacleDate?: unknown;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": -2,
         *           "message": "Transaction Not Found."
         *         }
         *       ]
         *     } */
        DA5GetTransactionErrorResponse: {
            errors?: {
                code?: number;
                message?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "20200501071033",
         *       "tranRequestDate": "2019-08-16T07:37:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100",
         *         "fee": "15"
         *       },
         *       "sender": {
         *         "name": {
         *           "first": "Juan",
         *           "middle": "Dela",
         *           "last": "Cruz"
         *         },
         *         "birthday": "07/27/1921",
         *         "address": "Maginhawa",
         *         "municipality": "Quezon City",
         *         "province": "Metro Manila",
         *         "mobileNumber": 9055121727
         *       },
         *       "receiver": {
         *         "name": {
         *           "first": "Francis",
         *           "middle": "Dela",
         *           "last": "Cruz"
         *         },
         *         "birthday": "12/12/1988",
         *         "address": "Golden Street",
         *         "municipality": "Marikina",
         *         "province": "Metro Manila",
         *         "mobileNumber": 9055121727
         *       }
         *     } */
        DA5SendRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: {
                currency?: string;
                value?: string;
                fee?: string;
            };
            sender?: {
                name?: {
                    first?: string;
                    middle?: string;
                    last?: string;
                };
                birthday?: string;
                address?: string;
                municipality?: string;
                province?: string;
                mobileNumber?: string;
            };
            receiver?: {
                name?: {
                    first?: string;
                    middle?: string;
                    last?: string;
                };
                birthday?: string;
                address?: string;
                municipality?: string;
                province?: string;
                mobileNumber?: string;
            };
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "20200501071020",
         *       "state": "Sent for processing",
         *       "uuid": "a0d6d6d6-b654-481c-af2d-dc900c55b704",
         *       "description": "Request is sent for processing",
         *       "ubpTranId": "UB9828",
         *       "finacleDate": "2019-05-29",
         *       "DACN": "DA512704083780",
         *       "message": "Success",
         *       "result": "OK"
         *     } */
        DA5SendResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            ubpTranId?: string;
            finacleDate?: string;
            DACN?: string;
            message?: string;
            result?: string;
        };
        /** @example {
         *       "senderRefId": "UBAB01770",
         *       "tranRequestDate": "2020-02-03T12:50:59.123",
         *       "accountNo": "109594480006",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "1.00"
         *       },
         *       "remarks": "Transfer remarks",
         *       "particulars": "Transfer particulars",
         *       "info": [
         *         {
         *           "index": 1,
         *           "name": "Recipient",
         *           "value": "Juan Dela Cruz"
         *         },
         *         {
         *           "index": 2,
         *           "name": "Message",
         *           "value": "Happy Birthday"
         *         }
         *       ]
         *     } */
        PartnerCashInRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            accountNo?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            info?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBAB01770",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "6935898c-8696-464e-9443-d174107bc540",
         *       "description": "Successful transaction",
         *       "type": "CASH_IN",
         *       "amount": "1.00",
         *       "ubpTranId": "UB342075303586",
         *       "tranRequestDate": "2020-02-03T12:50:59.123",
         *       "tranFinacleDate": "2020-10-09"
         *     } */
        PartnerCashInResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UBAB01770",
         *         "code": "TS",
         *         "state": "Credited Beneficiary Account",
         *         "uuid": "6935898c-8696-464e-9443-d174107bc540",
         *         "description": "Successful request",
         *         "type": "CASH_IN",
         *         "amount": "1.00",
         *         "ubpTranId": "UB342075303586",
         *         "tranRequestDate": "2020-02-03T04:50:59.000Z",
         *         "finacleDate": "2020-10-09",
         *         "createdAt": "2020-10-09T02:23:00.890",
         *         "updatedAt": ""
         *       }
         *     } */
        PartnerCashInGetResponse: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                tranRequestDate?: string;
                finacleDate?: string;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example {
         *       "senderRefId": "UB0002820",
         *       "tranRequestDate": "2019-09-29T15:29:50.111",
         *       "recipientName": {
         *         "firstName": "Robertson",
         *         "lastName": "Chiang",
         *         "middleName": "Sy"
         *       },
         *       "recipientAddress": {
         *         "line1": "123 Sesame Street",
         *         "line2": "Childrens Television Workshop",
         *         "barangay": "Ugong",
         *         "city": "Pasig",
         *         "province": "Metro Manila"
         *       },
         *       "recipientEmail": "test@unionbankph.com",
         *       "recipientMobileNo": 9171234567,
         *       "recipientBirthDate": "1970-11-17",
         *       "recipientNationality": "Philippines",
         *       "amount": "1",
         *       "procId": "CEBL",
         *       "payoutDate": "2020-05-01T23:59:59.111"
         *     } */
        CashPayoutbyDragonpayRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            recipientName?: {
                firstName?: string;
                lastName?: string;
                middleName?: string;
            };
            recipientAddress?: {
                line1?: string;
                line2?: string;
                barangay?: string;
                city?: string;
                province?: string;
            };
            recipientEmail?: string;
            recipientMobileNo?: string;
            recipientBirthDate?: string;
            recipientNationality?: string;
            amount?: string;
            procId?: string;
            payoutDate?: string;
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "UB0002820",
         *       "state": "Sent for Processing",
         *       "uuid": "c82273ea-aa15-4a88-bd34-e521d519c5be",
         *       "description": "Request status for processing",
         *       "type": "DP_CASHOUT",
         *       "amount": "1",
         *       "ubpTranId": "UB3654593350852",
         *       "dragonpayId": "YPG1GOL4",
         *       "tranRequestDate": "2019-09-29T15:29:50.111",
         *       "tranFinacleDate": "2019-09-29"
         *     } */
        CashPayoutbyDragonpayResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            dragonpayId?: string;
            tranRequestDate?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "status": 200,
         *       "reason": "OK",
         *       "data": {
         *         "listings": {
         *           "billers": [
         *             {
         *               "name": "Maritime Industry Authority",
         *               "code": "MARINA",
         *               "type": "GOVERNMENT",
         *               "fee": "50.00",
         *               "logo": "https://ucarecdn.com/5ce27553-ead2-4290-a716-d52b1f1fc7ff/",
         *               "category": "GOVERNMENT",
         *               "meta": [
         *                 {
         *                   "label": "Reference Number",
         *                   "field": "account_number",
         *                   "is_required": "true",
         *                   "type": "Text"
         *                 },
         *                 {
         *                   "label": "Amount",
         *                   "field": "amount",
         *                   "type": "Number",
         *                   "is_required": "true"
         *                 }
         *               ]
         *             },
         *             {
         *               "name": "MERALCO - CMS",
         *               "code": "BC_MECOA",
         *               "type": "ELECTRICITY",
         *               "fee": "0.00",
         *               "logo": "https://multipayph.s3.ap-southeast-1.amazonaws.com/billers/BC_MECOA.png",
         *               "category": "UTILITIES",
         *               "meta": [
         *                 {
         *                   "label": "Meralco Reference No.",
         *                   "field": "account_number",
         *                   "type": "Text",
         *                   "is_required": true
         *                 },
         *                 {
         *                   "label": "Pay For",
         *                   "field": "pay_for",
         *                   "type": "Dropdown",
         *                   "is_required": true,
         *                   "options": [
         *                     {
         *                       "key": "Total Current Amount",
         *                       "value": "TCA"
         *                     },
         *                     {
         *                       "key": "Balance From Previous Billing",
         *                       "value": "B"
         *                     },
         *                     {
         *                       "key": "Current Charges",
         *                       "value": "C"
         *                     },
         *                     {
         *                       "key": "Total Amount Due",
         *                       "value": "T"
         *                     }
         *                   ]
         *                 },
         *                 {
         *                   "label": "Amount",
         *                   "field": "amount",
         *                   "type": "Number",
         *                   "is_required": true
         *                 }
         *               ]
         *             }
         *           ]
         *         }
         *       }
         *     } */
        MultisysBillerResponse: {
            status?: number;
            reason?: string;
            data?: {
                listings?: {
                    billers?: {
                        name?: string;
                        code?: string;
                        type?: string;
                        fee?: string;
                        logo?: string;
                        category?: string;
                        meta?: {
                            label?: string;
                            field?: string;
                            is_required?: string;
                            type?: string;
                        }[];
                    }[];
                };
            };
        };
        /** @example {
         *       "status": 200,
         *       "reason": "OK",
         *       "data": {
         *         "name": "MERALCO - CMS",
         *         "code": "BC_MECOA",
         *         "type": "ELECTRICITY",
         *         "fee": "0.00",
         *         "logo": "https://multipayph.s3.ap-southeast-1.amazonaws.com/billers/BC_MECOA.png",
         *         "category": "UTILITIES",
         *         "meta": [
         *           {
         *             "label": "Meralco Reference No.",
         *             "field": "account_number",
         *             "type": "Text",
         *             "is_required": true
         *           },
         *           {
         *             "label": "Pay For",
         *             "field": "pay_for",
         *             "type": "Dropdown",
         *             "is_required": true,
         *             "options": [
         *               {
         *                 "key": "Total Current Amount",
         *                 "value": "TCA"
         *               },
         *               {
         *                 "key": "Balance From Previous Billing",
         *                 "value": "B"
         *               },
         *               {
         *                 "key": "Current Charges",
         *                 "value": "C"
         *               },
         *               {
         *                 "key": "Total Amount Due",
         *                 "value": "T"
         *               }
         *             ]
         *           },
         *           {
         *             "label": "Amount",
         *             "field": "amount",
         *             "type": "Number",
         *             "is_required": true
         *           }
         *         ]
         *       }
         *     } */
        MultisysBillerCodeResponse: {
            status?: number;
            reason?: string;
            data?: {
                name?: string;
                code?: string;
                type?: string;
                fee?: string;
                logo?: string;
                category?: string;
                meta?: {
                    label?: string;
                    field?: string;
                    type?: string;
                    is_required?: boolean;
                    options?: {
                        key: string;
                        value: string;
                    }[];
                }[];
            };
        };
        /** @example {
         *       "status": 200,
         *       "reason": "OK",
         *       "data": [
         *         {
         *           "label": "Reference Number",
         *           "field": "account_number",
         *           "is_required": "true",
         *           "type": "Text"
         *         },
         *         {
         *           "label": "Amount",
         *           "field": "amount",
         *           "type": "Number",
         *           "is_required": "true"
         *         }
         *       ]
         *     } */
        MultisysBillerReferenceResponse: {
            status?: number;
            reason?: string;
            data?: {
                label?: string;
                field?: string;
                is_required?: string;
                type?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "UB000004",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "accountNumber": "0000016241",
         *       "biller": "MARINA",
         *       "dueDate": "2019-12-31",
         *       "amount": "100"
         *     } */
        MultisysBillerPaymentRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            accountNumber?: string;
            biller?: string;
            dueDate?: string;
            amount?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UB000004",
         *       "state": "Successfully processed request",
         *       "uuid": "57e4a0a2-9e20-4e48-8997-3fb4db1137b8",
         *       "description": "Successful Request",
         *       "type": "MULTISYS_BILLSPAY",
         *       "amount": "100",
         *       "ubpTranId": "UB563",
         *       "multisys": {
         *         "refno": "0000016241",
         *         "txnid": "202030057e4a0a",
         *         "biller": "MARINA",
         *         "ReceiptValidationNo": "2020-10-26T07:18:58.013",
         *         "TransactionDateTime": "2020-10-26T07:18:58.013",
         *         "TransactionNo": "202030057e4a0a",
         *         "mecomRefNo": "202030057e4a0a"
         *       },
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "tranFinacleDate": "2020-10-26"
         *     } */
        MultisysBillerPaymentResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            multisys?: {
                refno?: string;
                txnid?: string;
                biller?: string;
                ReceiptValidationNo?: string;
                TransactionDateTime?: string;
                TransactionNo?: string;
                mecomRefNo?: string;
            };
            tranRequestDate?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UB000002",
         *         "code": "TS",
         *         "state": "Successfully processed request",
         *         "uuid": "64bc075e-c29c-4e20-b49a-e67e360da495",
         *         "description": "Successful request",
         *         "type": "MULTISYS_BILLSPAY",
         *         "amount": "100",
         *         "ubpTranId": "UB486",
         *         "tranRequestDate": "2020-02-03T04:00:59.000Z",
         *         "finacleDate": "2020-09-28",
         *         "createdAt": "2020-10-27T06:30:49.997",
         *         "updatedAt": ""
         *       }
         *     } */
        MultisysBillerCheckStatusResponse: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                tranRequestDate?: string;
                finacleDate?: string;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example {
         *       "senderRefId": "UB00000000000000176",
         *       "tranRequestDate": "2019-08-16T07:37:16.333",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "100"
         *       },
         *       "accountNumber": "102110024391",
         *       "remarks": "Transfer remarks",
         *       "particulars": "Transfer particulars",
         *       "sender": {
         *         "name": "API Team",
         *         "address": {
         *           "line1": "UnionBank",
         *           "line2": "Meralco Avenue",
         *           "city": "Pasig",
         *           "province": "Metro Manila",
         *           "zipCode": "1990",
         *           "country": "Philippines"
         *         }
         *       },
         *       "beneficiary": {
         *         "name": "Juan dela Cruz",
         *         "address": {
         *           "line1": "UnionBank",
         *           "line2": "Meralco Avenue",
         *           "city": "Pasig",
         *           "province": "Metro Manila",
         *           "zipCode": "1990",
         *           "country": "Philippines"
         *         }
         *       },
         *       "validateBeneficiary": "true",
         *       "msb": "true"
         *     } */
        IntrabankRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Object containing the details of the sender */
            sender?: {
                /** @description Object containing the details of the sender. Maximum of 250 alphanumeric characters(a-zA-Z0-9.). */
                name?: string;
                /** @description Object containing the details of the sender's address */
                address?: {
                    /** @description Address specifics of sender. Maximum of 19(line1 + city) alphanumeric characters(a-zA-Z0-9.). */
                    line1?: string;
                    /** @description Address specifics of sender. Maximum of 100 alphanumeric characters (a-zA-Z0-9.). */
                    line2?: string;
                    /** @description City of sender. Maximum of 19(line1 + city) alphanumeric characters (a-zA-Z0-9.). */
                    city?: string;
                    /** @description Province of sender. Maximum of 100 alphanumeric characters (a-zA-Z0-9.). */
                    province?: string;
                    /** @description Zipcode of sender. Maximum of 100 numeric characters (0-9). */
                    zipCode?: number;
                    /** @description Country of sender. Maximum of 250 alphanumeric characters (a-zA-Z0-9.). */
                    country?: string;
                };
            };
            /** @description Object containing the details of the recipient */
            beneficiary?: {
                /** @description Bank account number of recipient. Maximum of 200 alphanumeric characters (0-9). */
                accountNumber?: string;
                /** @description Name of the recipient. Maximum of 300 characters (a-zA-Z). */
                name?: string;
                /** @description Object containing the details of the recipient's address */
                address?: {
                    /** @description Address specifics of recipient. Maximum of 100 alphanumeric characters(#.,`'!~'^%$#()&*|\/ñÑA-Za-z0-9 -). */
                    line1?: string;
                    /** @description Address specifics of recipient. Maximum of 100 alphanumeric characters(#.,`'!~'^%$#()&*|\/ñÑA-Za-z0-9 -). */
                    line2?: string;
                    /** @description City of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    city?: string;
                    /** @description Province of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    province?: string;
                    /** @description Zipcode of recipient. Maximum of 100 numeric characters(0-9). */
                    zipCode?: number;
                    /** @description Country of recipient. Maximum of 100 alphanumeric characters(a-zA-Z0-9-.). */
                    country?: string;
                };
            };
            /** @description input "true" to validate beneficiary.name to match accountNumber's account name, use "false" to disable name validation */
            validateBeneficiary?: string;
            /** @description input as "true" to signify that you are sending this transaction on behalf of a different sender */
            msb?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UB00000000000000176",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "6312d338-654e-4628-86ed-58215648937b",
         *       "description": "Successful transaction",
         *       "type": "UBP_TRANSFER_CUSTOMER",
         *       "amount": "100",
         *       "ubpTranId": "UB1648",
         *       "tranRequestDate": "2019-08-16T07:37:16.333",
         *       "tranFinacleDate": "2020-10-26"
         *     } */
        IntrabankResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "TF",
         *           "description": "Failed to Credit Beneficiary Account",
         *           "details": {
         *             "senderRefId": "UB00000000000000177",
         *             "message": "~Error - INSUFFICIENT AVAIL BALANCE[   UB1057/   1]~Amount not credited to account.",
         *             "coreCode": "W0205",
         *             "trace": "ResourceFailed",
         *             "uuid": "3c226925-3220-453f-bc6d-416834e78d60"
         *           }
         *         }
         *       ]
         *     } */
        IntrabankError: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: string;
                    message?: string;
                    coreCode?: string;
                    trace?: string;
                    uuid?: string;
                };
            }[];
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UB00000000000000176",
         *         "code": "TS",
         *         "state": "Successfully processed request",
         *         "uuid": "6312d338-654e-4628-86ed-58215648937b",
         *         "description": "Successful Request",
         *         "type": "UBP_TRANSFER_CUSTOMER",
         *         "amount": "100",
         *         "ubpTranId": "UB1648",
         *         "tranRequestDate": "2019-08-15T23:37:16.000Z",
         *         "tranFinacleDate": "2020-10-26",
         *         "createdAt": "2020-10-26T02:27:08.000Z",
         *         "updatedAt": "2020-10-26T02:27:08.000Z"
         *       }
         *     } */
        IntrabankCheckStatus: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                tranRequestDate?: string;
                tranFinacleDate?: string;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example {
         *       "senderRefId": "UBP0065",
         *       "tranRequestDate": "2017-08-04T12:11:50.333",
         *       "biller": {
         *         "id": "0001",
         *         "name": "Test Biller Name"
         *       },
         *       "amount": {
         *         "currency": "PHP",
         *         "value": "1"
         *       },
         *       "remarks": "Payment remarks",
         *       "particulars": "Payment particulars",
         *       "references": [
         *         {
         *           "index": 1,
         *           "name": "Payor",
         *           "value": "1231231212"
         *         }
         *       ]
         *     } */
        BillsPaymentRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            biller?: {
                id?: string;
                name?: string;
            };
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            references?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBP0065",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "7dd7904b-a201-4312-a78e-238930a27a12",
         *       "discription": "Successful Transaction",
         *       "type": "PAYMENT_CUSTOMER",
         *       "amount": "1",
         *       "ubpTranId": "UBP454",
         *       "tranRequestDate": "2017-08-04T12:11:50.333",
         *       "tranFinacleDate": "2021-03-24"
         *     } */
        BillsPaymentResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            discription?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UBP0065",
         *         "code": "TS",
         *         "state": "Credited Beneficiary Account",
         *         "uuid": "7dd7904b-a201-4312-a78e-238930a27a12",
         *         "description": "Successful transaction",
         *         "type": "PAYMENT_CUSTOMER",
         *         "amount": "1",
         *         "ubpTranId": "UBP454",
         *         "tranRequestDate": "2017-08-04T04:11:50.000Z",
         *         "tranFinacleDate": "2021-03-24",
         *         "createdAt": "2021-03-24T02:15:45.560",
         *         "updatedAt": ""
         *       }
         *     } */
        BillsPaymentStatus: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                tranRequestDate?: string;
                tranFinacleDate?: string;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example {
         *       "senderRefId": "6",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "partnerId": "DRGNPY",
         *       "processorId": "LBC",
         *       "currency": "PHP",
         *       "amount": "20000",
         *       "remarks": "i2i Cash Payout"
         *     } */
        CashPayoutRequest: {
            /** @description senderRefId */
            senderRefId?: string;
            /** @description tranRequestDate */
            tranRequestDate?: string;
            /** @description Partner ID */
            partnerId?: string;
            /** @description Processor ID */
            processorId?: string;
            /** @description Currency */
            currency?: string;
            /** @description Amount */
            amount?: string;
            /** @description Remarks */
            remarks?: string;
        };
        /** @example {
         *       "code": "N",
         *       "senderRefId": "LBCAC8507509246",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "ubpTranId": "UB484",
         *       "state": "New",
         *       "uuid": "c38b1c08-fe90-41ba-aebc-6580901c033f",
         *       "coreCode": "20",
         *       "coreRefId": "LBCAC8507509246",
         *       "processorFee": {
         *         "id": "20",
         *         "processor": {
         *           "code": "LBC",
         *           "name": "LBC",
         *           "dailyLimit": "20000",
         *           "hex": ""
         *         },
         *         "from": "0.01",
         *         "to": "5000",
         *         "fee": "35"
         *       }
         *     } */
        CashPayoutResponse: {
            code?: string;
            senderRefId?: string;
            tranRequestDate?: string;
            ubpTranId?: string;
            state?: string;
            uuid?: string;
            coreCode?: string;
            coreRefId?: string;
            processorFee?: {
                id?: string;
                processor?: {
                    code?: string;
                    name?: string;
                    dailyLimit?: string;
                    hex?: string;
                };
                from?: string;
                to?: string;
                fee?: string;
            };
        };
        /** @example {
         *       "record": {
         *         "referenceNumber": "LBCAC572704766",
         *         "dateCreated": "2021-01-28T21:46:04.000Z",
         *         "status": {
         *           "code": "V",
         *           "status": "Cancelled",
         *           "order": 4,
         *           "hex": "#000000"
         *         },
         *         "beneficiary": {
         *           "name": {
         *             "middle": "Gomez",
         *             "first": "Juan",
         *             "last": "Dela Cruz"
         *           },
         *           "birthDate": "1970-11-17Z",
         *           "nationality": "Philippines",
         *           "id": 2571,
         *           "address": {
         *             "line1": "123 Sesame Street",
         *             "line2": "Childrens Television Workshop",
         *             "barangay": "Ugong",
         *             "city": "Pasig",
         *             "province": "Metro Manila"
         *           },
         *           "email": "recipient@email.com",
         *           "mobileNumber": 9111111111
         *         },
         *         "channelCustomerId": "f4bb49e9-dff9-408c-bd7b-64fdbd51d02c",
         *         "dateExecuted": "2021-01-22T08:44:15.830Z",
         *         "expiryDate": "2021-02-21T08:44:15.830Z",
         *         "channelId": "CH23",
         *         "partnerMsg": "{\"referenceNumber\":\"TGJH7MPR47\"}",
         *         "sourceAccount": "109594481946",
         *         "processorFee": {
         *           "id": 20,
         *           "processor": {
         *             "code": "LBC",
         *             "name": "LBC"
         *           },
         *           "from": 0.01,
         *           "to": 5000,
         *           "fee": 35
         *         },
         *         "description": "i2i Cash Payout",
         *         "tranType": "Cash Out",
         *         "currency": "PHP",
         *         "amount": "20000"
         *       }
         *     } */
        CashPayoutCheckStatus: {
            record?: {
                referenceNumber?: string;
                dateCreated?: string;
                status?: {
                    code?: string;
                    status?: string;
                    order?: number;
                    hex?: string;
                };
                beneficiary?: {
                    name?: {
                        middle?: string;
                        first?: string;
                        last?: string;
                    };
                    birthDate?: string;
                    nationality?: string;
                    id?: number;
                    address?: {
                        line1?: string;
                        line2?: string;
                        barangay?: string;
                        city?: string;
                        province?: string;
                    };
                    email?: string;
                    mobileNumber?: string;
                };
                channelCustomerId?: string;
                dateExecuted?: string;
                expiryDate?: string;
                channelId?: string;
                partnerMsg?: string;
                sourceAccount?: string;
                processorFee?: {
                    id?: number;
                    processor?: {
                        code?: string;
                        name?: string;
                    };
                    from?: number;
                    to?: number;
                    fee?: number;
                };
                description?: string;
                tranType?: string;
                currency?: string;
                amount?: string;
            };
        };
        /** @example {
         *       "message": "Successfully voided."
         *     } */
        CashPayoutCancel: {
            message?: string;
        };
        /** @example {
         *       "record": {
         *         "page": 1,
         *         "limit": 1,
         *         "totalRecords": 13,
         *         "records": [
         *           {
         *             "channelId": "CH23",
         *             "status": {
         *               "code": "N",
         *               "status": "New",
         *               "order": 9,
         *               "hex": ""
         *             },
         *             "dateCreated": "2021-03-23T22:38:33.000Z",
         *             "description": "i2i Cash Payout",
         *             "tranType": "CASH_PAYOUT",
         *             "currency": "PHP",
         *             "amount": "20000",
         *             "processorFee": {
         *               "id": 20,
         *               "processor": {
         *                 "code": "LBC",
         *                 "name": "LBC"
         *               },
         *               "from": 0.01,
         *               "to": 5000,
         *               "fee": 35
         *             },
         *             "sourceAccount": "109594481946",
         *             "channelCustomerId": "c38b1c08-fe90-41ba-aebc-6580901c033f"
         *           }
         *         ],
         *         "identifiers": [
         *           "LBC50EB14202101"
         *         ],
         *         "sortBy": [
         *           {
         *             "field": "dateCreated",
         *             "ascending": false
         *           }
         *         ]
         *       }
         *     } */
        CashPayoutHistory: {
            record?: {
                page?: number;
                limit?: number;
                totalRecords?: number;
                records?: {
                    channelId?: string;
                    status?: {
                        code?: string;
                        status?: string;
                        order?: number;
                        hex?: string;
                    };
                    dateCreated?: string;
                    description?: string;
                    tranType?: string;
                    currency?: string;
                    amount?: string;
                    processorFee?: {
                        id?: number;
                        processor?: {
                            code?: string;
                            name?: string;
                        };
                        from?: number;
                        to?: number;
                        fee?: number;
                    };
                    sourceAccount?: string;
                    channelCustomerId?: string;
                }[];
                identifiers?: string[];
                sortBy?: {
                    field?: string;
                    ascending?: boolean;
                }[];
            };
        };
        /** @example {
         *       "senderRefId": "LBCAC572704766",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "beneficiary": {
         *         "name": {
         *           "first": "Juan",
         *           "middle": "Gomez",
         *           "last": "Dela Cruz"
         *         },
         *         "email": "recipient@email.com",
         *         "mobileNumber": 9111111111,
         *         "birthDate": "1970-11-17",
         *         "nationality": "Philippines",
         *         "address": {
         *           "line1": "123 Sesame Street",
         *           "line2": "Childrens Television Workshop",
         *           "barangay": "Ugong",
         *           "city": "Pasig",
         *           "province": "Metro Manila",
         *           "country": "PH"
         *         }
         *       }
         *     } */
        CashPayoutProcessRequest: {
            /** @description senderRefId */
            senderRefId?: string;
            /** @description tranRequestDate */
            tranRequestDate?: string;
            /** @description Beneficiary details. Values depends on the remittance outlet. */
            beneficiary?: {
                name?: {
                    first?: string;
                    middle?: string;
                    last?: string;
                };
                email?: string;
                mobileNumber?: string;
                birthDate?: string;
                nationality?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    barangay?: string;
                    city?: string;
                    province?: string;
                    country?: string;
                };
            };
        };
        /** @example {
         *       "senderRefId": "LBCAC572704766",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "ubpTranId": "",
         *       "uuid": null,
         *       "coreCode": "",
         *       "coreRefId": "LBCAC572704766"
         *     } */
        CashPayoutProcessResponse: {
            senderRefId?: string;
            tranRequestDate?: string;
            ubpTranId?: string;
            uuid?: unknown;
            coreCode?: string;
            coreRefId?: string;
        };
        /** @example {
         *       "senderRefId": "111820-3",
         *       "tranRequestDate": "2018-10-17T18:30:58.333",
         *       "customer": {
         *         "name": {
         *           "first": "Franz",
         *           "middle": "",
         *           "last": "Dela Cruz"
         *         },
         *         "email": "jdcruz@email.com",
         *         "fullMobileNumber": "+639990001234",
         *         "birthDate": "1993-08-12",
         *         "title": "MR",
         *         "getGoNumber": ""
         *       },
         *       "account": {
         *         "schemeCode": "EO300",
         *         "subheadCode": "21211",
         *         "operationMode": "1",
         *         "currency": "PHP"
         *       }
         *     } */
        DAOApplicationRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone should be UTC+08:00. */
            tranRequestDate?: string;
            customer?: {
                name?: {
                    /** @description First Name */
                    first?: string;
                    /** @description Middle Name */
                    middle?: string;
                    /** @description Last Name */
                    last?: string;
                };
                /** @description Email */
                email?: string;
                /** @description Mobile Number */
                fullMobileNumber?: string;
                /** @description BirthDate */
                birthDate?: string;
                /** @description Title */
                title?: string;
                /** @description Getgo Number */
                getGoNumber?: string;
            };
            account?: {
                /** @description scheme code */
                schemeCode?: string;
                /** @description subhead code */
                subheadCode?: string;
                /** @description operation code */
                operationMode?: string;
                /** @description Currency ex. PHP */
                currency?: string;
            };
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "senderRefId": "111820-3",
         *       "tranRequestDate": "2018-10-17T18:30:58.333",
         *       "uuid": "c2a12e5c-d841-429c-a70e-b7a2b1bf5516",
         *       "description": "Successful Request",
         *       "referenceId": "CV43PUI7ME"
         *     } */
        DAOApplicationResponse: {
            code?: string;
            state?: string;
            senderRefId?: string;
            tranRequestDate?: string;
            uuid?: string;
            description?: string;
            referenceId?: string;
        };
        /** @example {
         *       "senderRefId": "111820-5",
         *       "tranRequestDate": "2018-10-17T18:30:58.333",
         *       "customer": {
         *         "cif": "R600000000",
         *         "name": {
         *           "first": "Francis",
         *           "middle": "",
         *           "last": "Lalaguna"
         *         },
         *         "email": "jdlara@email.com",
         *         "fullMobileNumber": "+639158543788",
         *         "getGoNumber": "",
         *         "rmCode": "0BPSYCHU",
         *         "birthPlace": "Quezon City",
         *         "birthDate": "1993-08-12",
         *         "nationality": 9,
         *         "civilStatus": "S",
         *         "homePhoneNumber": 26582912,
         *         "staff": "N",
         *         "sss": "312444221",
         *         "gsis": "312444221",
         *         "tin": "333221111",
         *         "fundSource": {
         *           "id": "1",
         *           "code": "02000",
         *           "desc": "any string here"
         *         },
         *         "signature": {
         *           "base64": "<base64>",
         *           "type": "<documentType>",
         *           "index": "1"
         *         },
         *         "title": "MR",
         *         "presentAddress": {
         *           "line1": "Present 1",
         *           "line2": "Present 2",
         *           "city": "1820A",
         *           "province": "100",
         *           "zipCode": "1920",
         *           "country": "122",
         *           "landmark": "McDo"
         *         },
         *         "permanentAddress": {
         *           "line1": "Permanent 1",
         *           "line2": "Permanent 2",
         *           "city": "1820A",
         *           "province": "100",
         *           "zipCode": "1920",
         *           "country": "122",
         *           "landmark": "Jollibee"
         *         },
         *         "motherMaidenName": "Test A Test",
         *         "passport": {
         *           "id": "EZ00BSA",
         *           "countryOfIssue": "PH"
         *         },
         *         "jumioIdScanReference": "109fb484-19f3-4226-9717-468635250d6d",
         *         "documentIdType": "UMID"
         *       },
         *       "employment": {
         *         "name": "UnionBank",
         *         "occupation": {
         *           "id": "1",
         *           "code": "Z3"
         *         },
         *         "status": {
         *           "id": "1",
         *           "code": "Salaried"
         *         },
         *         "industryType": {
         *           "id": "1",
         *           "code": "00001",
         *           "desc": "any string here"
         *         },
         *         "workNature": "17000",
         *         "address": {
         *           "line1": "Present 1",
         *           "line2": "Present 2",
         *           "city": "1820A",
         *           "province": "100",
         *           "zipCode": "1920",
         *           "country": "122",
         *           "landmark": "KFC"
         *         },
         *         "phoneNumber": 28912222
         *       },
         *       "account": {
         *         "schemeCode": "SB139",
         *         "subheadCode": "21211",
         *         "operationMode": "1",
         *         "currency": "PHP"
         *       },
         *       "cardDetails": {
         *         "name": "JOHNNY DE LARA",
         *         "addressType": "PRESENT",
         *         "cardNumber": "4441223143121211",
         *         "php125ReferenceCode": "PAGIBIGX1"
         *       },
         *       "fatca": {
         *         "isUsCitizen": false
         *       },
         *       "crr": {
         *         "purpose": "Personal Savings",
         *         "amount": "250000.00"
         *       }
         *     } */
        DAOApplicationCIFRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone should be UTC+08:00. */
            tranRequestDate?: string;
            customer?: {
                /** @description cif Number */
                cif?: string;
                name?: {
                    /** @description First Name */
                    first?: string;
                    /** @description Middle Name */
                    middle?: string;
                    /** @description Last Name */
                    last?: string;
                };
                /** @description Email */
                email?: string;
                /** @description Mobile Number */
                fullMobileNumber?: string;
                /** @description Getgo Number */
                getGoNumber?: string;
                /** @description Retrieve values from library.Type=relationshipmanager */
                rmCode?: string;
                /** @description Retrieve values from library. Type=city. Pass text value e.g. Pasig */
                birthPlace?: string;
                /** @description BirthDate */
                birthDate?: string;
                /** @description Retrieve values from library. Type=nationality */
                nationality?: string;
                /** @description Retrieve values from library. Type=civilstatus */
                civilStatus?: string;
                /** @description Residence phone Number */
                homePhoneNumber?: string;
                /** @description Determines if customer is an employee of UnionBank. */
                staff?: string;
                /** @description SSS Number */
                sss?: string;
                /** @description GSIS Number */
                gsis?: string;
                /** @description TIN Number */
                tin?: string;
                fundSource?: {
                    /** @description Source of fund Id */
                    id?: string;
                    /** @description Source of Funds (Code). Retrieve values from library. Type=fundsource */
                    code?: string;
                    /** @description Source of Funds (Description). Retrieve values from library. Type=fundsource */
                    desc?: string;
                };
                signature?: {
                    /** @description Signature Base64 Value */
                    base64?: string;
                    /** @description Document ID Type */
                    type?: string;
                    /** @description Signature Index Number */
                    index?: string;
                };
                /** @description Title */
                title?: string;
                presentAddress?: {
                    /** @description Address line 1 */
                    line1?: string;
                    /** @description Address line 2 */
                    line2?: string;
                    /** @description Address city */
                    city?: string;
                    /** @description Address province */
                    province?: string;
                    /** @description Address zipcode */
                    zipCode?: string;
                    /** @description Address country */
                    country?: string;
                    /** @description Address landmark */
                    landmark?: string;
                };
                permanentAddress?: {
                    /** @description Address line 1 */
                    line1?: string;
                    /** @description Address line 2 */
                    line2?: string;
                    /** @description Address city */
                    city?: string;
                    /** @description Address province */
                    province?: string;
                    /** @description Address zipcode */
                    zipCode?: string;
                    /** @description Address country */
                    country?: string;
                    /** @description Address landmark */
                    landmark?: string;
                };
                /** @description Mothers Maiden Name */
                motherMaidenName?: string;
                passport?: {
                    /** @description Passport Number */
                    id?: string;
                    /** @description Passport Country of issue */
                    countryOfIssue?: string;
                };
                /** @description Scan Reference ID */
                jumioIdScanReference?: string;
                /** @description Document ID Type */
                documentIdType?: string;
            };
            employment?: {
                /** @description Company/Employment Name */
                name?: string;
                occupation?: {
                    /** @description Occupation ID */
                    id?: string;
                    /** @description Occupation Code. Retrieve values from library. Type=occupation */
                    code?: string;
                };
                status?: {
                    /** @description Employment Status ID */
                    id?: string;
                    /** @description Retrieve values from library. Type=employmentstatus */
                    code?: string;
                };
                industryType?: {
                    /** @description Employment Industry Type (ID) */
                    id?: string;
                    /** @description Employment Industry Type (Code). Retrieve values from library. Type=industrytype */
                    code?: string;
                    /** @description Employment Industry Type (Description). Retrieve values from library. Type=industrytype */
                    desc?: string;
                };
                /** @description Retrieve values from library. Type=worknature */
                workNature?: string;
                address?: {
                    /** @description Address line 1 */
                    line1?: string;
                    /** @description Address line 2 */
                    line2?: string;
                    /** @description Address city */
                    city?: string;
                    /** @description Address province */
                    province?: string;
                    /** @description Address zipcode */
                    zipCode?: string;
                    /** @description Address country */
                    country?: string;
                    /** @description Address landmark */
                    landmark?: string;
                };
                /** @description Company phone number */
                phoneNumber?: string;
            };
            account?: {
                /** @description Account scheme code */
                schemeCode?: string;
                /** @description Account subhead code */
                subheadCode?: string;
                /** @description Account Operation Mode */
                operationMode?: string;
                /** @description currency */
                currency?: string;
            };
            cardDetails?: {
                /** @description name on card */
                name?: string;
                /** @description Possible values- present, permanent, business */
                addressType?: string;
                /** @description Card number */
                cardNumber?: string;
                /** @description Card reference 125 reference code */
                php125ReferenceCode?: string;
            };
            fatca?: {
                isUsCitizen?: boolean;
            };
            crr?: {
                /** @description CRR Purpose */
                purpose?: string;
                /** @description CRR amount */
                amount?: string;
            };
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "senderRefId": "111820-5",
         *       "tranRequestDate": "2018-10-17T18:30:58.333",
         *       "uuid": "35b1f8b2-8943-4100-9af3-842f80c27077",
         *       "description": "Successful Request",
         *       "referenceId": "CVRBVMM201"
         *     } */
        DAOApplicationCIFResponse: {
            code?: string;
            state?: string;
            senderRefId?: string;
            tranRequestDate?: string;
            uuid?: string;
            description?: string;
            referenceId?: string;
        };
        /** @example {
         *       "referenceId": "CV43PUI7ME",
         *       "page": 1,
         *       "pageType": "",
         *       "dateLastUpdated": "2021-03-25T02:13:03.000Z",
         *       "customer": {
         *         "birthDate": "1993-08-12",
         *         "email": "jdcruz@email.com",
         *         "fullMobileNumber": "+639990001234",
         *         "homePhoneNumber": "",
         *         "rmCode": "CON",
         *         "name": {
         *           "first": "Franz",
         *           "last": "Dela Cruz"
         *         },
         *         "signature": {
         *           "base64": "",
         *           "index": "1"
         *         }
         *       },
         *       "isMinor": "N",
         *       "employment": {
         *         "name": "",
         *         "occupation": {
         *           "id": "",
         *           "code": ""
         *         },
         *         "status": {
         *           "id": "",
         *           "code": ""
         *         },
         *         "industryType": {
         *           "id": "",
         *           "code": "",
         *           "desc": ""
         *         },
         *         "workNature": "",
         *         "address": {
         *           "line1": "",
         *           "line2": "",
         *           "city": "",
         *           "province": "",
         *           "zipCode": "",
         *           "country": "",
         *           "landmark": ""
         *         },
         *         "phoneNumber": ""
         *       },
         *       "fatca": {
         *         "isUsCitizen": ""
         *       },
         *       "cardDetails": {
         *         "cardNumber": "",
         *         "cardType": "GG1"
         *       },
         *       "crr": {
         *         "purpose": "",
         *         "amount": ""
         *       },
         *       "account": {
         *         "schemeCode": "EO300"
         *       },
         *       "eddDetails": {},
         *       "incompleteDocs": true
         *     } */
        DAOStatus: {
            referenceId?: string;
            page?: number;
            pageType?: string;
            dateLastUpdated?: string;
            customer?: {
                birthDate?: string;
                email?: string;
                fullMobileNumber?: string;
                homePhoneNumber?: string;
                rmCode?: string;
                name?: {
                    first?: string;
                    last?: string;
                };
                signature?: {
                    base64?: string;
                    index?: string;
                };
            };
            isMinor?: string;
            employment?: {
                name?: string;
                occupation?: {
                    id?: string;
                    code?: string;
                };
                status?: {
                    id?: string;
                    code?: string;
                };
                industryType?: {
                    id?: string;
                    code?: string;
                    desc?: string;
                };
                workNature?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                    landmark?: string;
                };
                phoneNumber?: string;
            };
            fatca?: {
                isUsCitizen?: string;
            };
            cardDetails?: {
                cardNumber?: string;
                cardType?: string;
            };
            crr?: {
                purpose?: string;
                amount?: string;
            };
            account?: {
                schemeCode?: string;
            };
            eddDetails?: Record<string, never>;
            incompleteDocs?: boolean;
        };
        /** @example {
         *       "senderRefId": "111820-12",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "flow": "ON_DEMAND_CARD_DELIVER"
         *     } */
        DAOSubmitRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone should be UTC+08:00. */
            tranRequestDate?: string;
            /** @description Determines if card generation is run automatically/on demand ON_DEMAND_CARD_DELIVER = for the latest version of the app AUTO_CARD_DELIVER = for older versions of the app */
            flow?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "senderRefId": "111820-12",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "uuid": "6641157b-4345-4e5f-b91b-dde1bc3840bd",
         *       "details": {
         *         "application": "openaccount",
         *         "cifNumber": "CV1H94KDT8",
         *         "message": "Account already opened:108473187587",
         *         "status": "success"
         *       }
         *     } */
        DAOSubmitResponse: {
            code?: string;
            state?: string;
            senderRefId?: string;
            tranRequestDate?: string;
            uuid?: string;
            details?: {
                application?: string;
                cifNumber?: string;
                message?: string;
                status?: string;
            };
        };
        /** @example {
         *       "senderRefId": "111820-3",
         *       "tranRequestDate": "2018-10-17T18:30:58.333",
         *       "pageType": "REFERRAL",
         *       "page": 7,
         *       "cardDetails": {
         *         "name": "Juan Dela Cruz",
         *         "addressType": "PRESENT",
         *         "cardNumber": "4414231451224141",
         *         "php125ReferenceCode": "PAGIBIGX1"
         *       },
         *       "fatca": {
         *         "isUsCitizen": false
         *       },
         *       "crr": {
         *         "purpose": "Personal Savings",
         *         "amount": "250000.00"
         *       },
         *       "customer": {
         *         "name": {
         *           "first": "Johnny",
         *           "middle": "",
         *           "last": "De Lara"
         *         },
         *         "email": "",
         *         "fullMobileNumber": "+639158543788",
         *         "getGoNumber": "",
         *         "rmCode": "0BPSYCHU",
         *         "birthPlace": "Quezon City",
         *         "birthDate": "",
         *         "nationality": 9,
         *         "civilStatus": "S",
         *         "homePhoneNumber": 26582912,
         *         "staff": "N",
         *         "sss": "312444221",
         *         "gsis": "312444221",
         *         "tin": "333221111",
         *         "fundSource": {
         *           "id": "1",
         *           "code": "02000",
         *           "desc": "any string here"
         *         },
         *         "signature": {
         *           "base64": "<base64>",
         *           "type": "<documentType>",
         *           "index": "1"
         *         },
         *         "title": "",
         *         "presentAddress": {
         *           "line1": "Present 1",
         *           "line2": "Present 2",
         *           "city": "1820A",
         *           "province": "100",
         *           "zipCode": "1920",
         *           "country": "122",
         *           "landmark": "McDo"
         *         },
         *         "permanentAddress": {
         *           "line1": "Permanent 1",
         *           "line2": "Permanent 2",
         *           "city": "1820A",
         *           "province": "100",
         *           "zipCode": "1920",
         *           "country": "122",
         *           "landmark": "Jollibee"
         *         },
         *         "motherMaidenName": "Test A Test",
         *         "passport": {
         *           "id": "EZ00BSA",
         *           "countryOfIssue": "PH"
         *         },
         *         "jumioIdScanReference": "109fb484-19f3-4226-9717-468635250d6d",
         *         "documentIdType": "UMID"
         *       },
         *       "employment": {
         *         "name": "UnionBank",
         *         "occupation": {
         *           "id": "1",
         *           "code": "Z3"
         *         },
         *         "status": {
         *           "id": "1",
         *           "code": "Salaried"
         *         },
         *         "industryType": {
         *           "id": "1",
         *           "code": "00001",
         *           "desc": "any string here"
         *         },
         *         "workNature": "17000",
         *         "address": {
         *           "line1": "Present 1",
         *           "line2": "Present 2",
         *           "city": "1820A",
         *           "province": "100",
         *           "zipCode": "1920",
         *           "country": "122",
         *           "landmark": "KFC"
         *         },
         *         "phoneNumber": 28912222
         *       },
         *       "account": {
         *         "schemeCode": "SB141",
         *         "subheadCode": "21211",
         *         "operationMode": "1",
         *         "currency": "PHP",
         *         "solId": "1001"
         *       },
         *       "customDetails": {
         *         "insular": {
         *           "religion": "Baptist",
         *           "declaration": "true",
         *           "exception": "Test"
         *         }
         *       }
         *     } */
        DAOUpdateRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone should be UTC+08:00. */
            tranRequestDate?: string;
            customer?: {
                /** @description cif Number */
                cif?: string;
                name?: {
                    /** @description First Name */
                    first?: string;
                    /** @description Middle Name */
                    middle?: string;
                    /** @description Last Name */
                    last?: string;
                };
                /** @description Email */
                email?: string;
                /** @description Mobile Number */
                fullMobileNumber?: string;
                /** @description Getgo Number */
                getGoNumber?: string;
                /** @description Retrieve values from library.Type=relationshipmanager */
                rmCode?: string;
                /** @description Retrieve values from library. Type=city. Pass text value e.g. Pasig */
                birthPlace?: string;
                /** @description BirthDate */
                birthDate?: string;
                /** @description Retrieve values from library. Type=nationality */
                nationality?: string;
                /** @description Retrieve values from library. Type=civilstatus */
                civilStatus?: string;
                /** @description Residence phone Number */
                homePhoneNumber?: string;
                /** @description Determines if customer is an employee of UnionBank. */
                staff?: string;
                /** @description SSS Number */
                sss?: string;
                /** @description GSIS Number */
                gsis?: string;
                /** @description TIN Number */
                tin?: string;
                fundSource?: {
                    /** @description Source of fund Id */
                    id?: string;
                    /** @description Source of Funds (Code). Retrieve values from library. Type=fundsource */
                    code?: string;
                    /** @description Source of Funds (Description). Retrieve values from library. Type=fundsource */
                    desc?: string;
                };
                signature?: {
                    /** @description Signature Base64 Value */
                    base64?: string;
                    /** @description Document ID Type */
                    type?: string;
                    /** @description Signature Index Number */
                    index?: string;
                };
                /** @description Title */
                title?: string;
                presentAddress?: {
                    /** @description Address line 1 */
                    line1?: string;
                    /** @description Address line 2 */
                    line2?: string;
                    /** @description Address city */
                    city?: string;
                    /** @description Address province */
                    province?: string;
                    /** @description Address zipcode */
                    zipCode?: string;
                    /** @description Address country */
                    country?: string;
                    /** @description Address landmark */
                    landmark?: string;
                };
                permanentAddress?: {
                    /** @description Address line 1 */
                    line1?: string;
                    /** @description Address line 2 */
                    line2?: string;
                    /** @description Address city */
                    city?: string;
                    /** @description Address province */
                    province?: string;
                    /** @description Address zipcode */
                    zipCode?: string;
                    /** @description Address country */
                    country?: string;
                    /** @description Address landmark */
                    landmark?: string;
                };
                /** @description Mothers Maiden Name */
                motherMaidenName?: string;
                passport?: {
                    /** @description Passport Number */
                    id?: string;
                    /** @description Passport Country of issue */
                    countryOfIssue?: string;
                };
                /** @description Scan Reference ID */
                jumioIdScanReference?: string;
                /** @description Document ID Type */
                documentIdType?: string;
            };
            employment?: {
                /** @description Company/Employment Name */
                name?: string;
                occupation?: {
                    /** @description Occupation ID */
                    id?: string;
                    /** @description Occupation Code. Retrieve values from library. Type=occupation */
                    code?: string;
                };
                status?: {
                    /** @description Employment Status ID */
                    id?: string;
                    /** @description Retrieve values from library. Type=employmentstatus */
                    code?: string;
                };
                industryType?: {
                    /** @description Employment Industry Type (ID) */
                    id?: string;
                    /** @description Employment Industry Type (Code). Retrieve values from library. Type=industrytype */
                    code?: string;
                    /** @description Employment Industry Type (Description). Retrieve values from library. Type=industrytype */
                    desc?: string;
                };
                /** @description Retrieve values from library. Type=worknature */
                workNature?: string;
                address?: {
                    /** @description Address line 1 */
                    line1?: string;
                    /** @description Address line 2 */
                    line2?: string;
                    /** @description Address city */
                    city?: string;
                    /** @description Address province */
                    province?: string;
                    /** @description Address zipcode */
                    zipCode?: string;
                    /** @description Address country */
                    country?: string;
                    /** @description Address landmark */
                    landmark?: string;
                };
                /** @description Company phone number */
                phoneNumber?: string;
            };
            account?: {
                /** @description Account scheme code */
                schemeCode?: string;
                /** @description Account subhead code */
                subheadCode?: string;
                /** @description Account Operation Mode */
                operationMode?: string;
                /** @description currency */
                currency?: string;
                /** @description solId */
                solId?: string;
            };
            customDetails?: {
                insular?: {
                    /** @description relition */
                    religion?: string;
                    /** @description declaration */
                    declaration?: string;
                    /** @description exception */
                    exception?: string;
                };
            };
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "senderRefId": "111820-3",
         *       "tranRequestDate": "2021-03-25T02:13:03.000Z",
         *       "uuid": "c2a12e5c-d841-429c-a70e-b7a2b1bf5516",
         *       "referenceId": "CV43PUI7ME"
         *     } */
        DAOUpdateResponse: {
            code?: string;
            state?: string;
            senderRefId?: string;
            tranRequestDate?: string;
            uuid?: string;
            referenceId?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "amount": "200",
         *           "currency": "PHP",
         *           "tranDate": "2020-01-28T00:00:00.000",
         *           "remarks2": "Transfer Transaction",
         *           "remarks": "API-PRHB202114P0BG2FCP-PETNET",
         *           "serialNo": "1",
         *           "valueDate": "2020-01-28T00:00:00.000",
         *           "balance": "498805440.33",
         *           "tranId": "UB29210",
         *           "tranType": "D",
         *           "tranCategory": "DCI",
         *           "balanceCurrency": "PHP",
         *           "postedDate": "2021-01-04T09:19:14.000",
         *           "instrumentId": "",
         *           "refNumber": "91576a96-48b8-48d2-a",
         *           "tranCode": "O8281",
         *           "recordNumber": "1",
         *           "solId": "1901",
         *           "tranDescription": "Perahub-Information Technology De Partner Cash In"
         *         }
         *       ],
         *       "lastRunningBalance": "498811952.33",
         *       "limit": "1",
         *       "page": "1",
         *       "nextPage": "1"
         *     } */
        AccountTransactionHistoryUnionbankResponse: {
            records?: {
                amount?: string;
                currency?: string;
                tranDate?: string;
                remarks2?: string;
                remarks?: string;
                serialNo?: string;
                valueDate?: string;
                balance?: string;
                tranId?: string;
                tranType?: string;
                tranCategory?: string;
                balanceCurrency?: string;
                postedDate?: string;
                instrumentId?: string;
                refNumber?: string;
                tranCode?: string;
                recordNumber?: string;
                solId?: string;
                tranDescription?: string;
            }[];
            lastRunningBalance?: string;
            limit?: string;
            page?: string;
            nextPage?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "amount": "200",
         *           "currency": "PHP",
         *           "tranDate": "2020-01-28T00:00:00.000",
         *           "remarks2": "Transfer Transaction",
         *           "remarks": "API-PRHB202114P0BG2FCP-PETNET",
         *           "serialNo": "1",
         *           "valueDate": "2020-01-28T00:00:00.000",
         *           "balance": "498805440.33",
         *           "tranId": "UB29210",
         *           "tranType": "D",
         *           "tranCategory": "DCI",
         *           "balanceCurrency": "PHP",
         *           "postedDate": "2021-01-04T09:19:14.000",
         *           "instrumentId": "",
         *           "refNumber": "91576a96-48b8-48d2-a",
         *           "tranCode": "O8281",
         *           "recordNumber": "1",
         *           "solId": "1901",
         *           "tranDescription": "ONLINE INSTAPAY-SEND"
         *         }
         *       ],
         *       "totalRecords": "1",
         *       "lastRunningBalance": "498811952.33",
         *       "customer": {
         *         "mobileNumber": "63(000)9611200075",
         *         "email": "LPINEDA@YAHOO.COM"
         *       },
         *       "limit": "1",
         *       "page": "1"
         *     } */
        AccountTransactionHistoryUnionbankResponsev2: {
            records?: {
                amount?: string;
                currency?: string;
                tranDate?: string;
                remarks2?: string;
                remarks?: string;
                serialNo?: string;
                valueDate?: string;
                balance?: string;
                tranId?: string;
                tranType?: string;
                tranCategory?: string;
                balanceCurrency?: string;
                postedDate?: string;
                instrumentId?: string;
                refNumber?: string;
                tranCode?: string;
                recordNumber?: string;
                solId?: string;
                tranDescription?: string;
            }[];
            totalRecords?: string;
            lastRunningBalance?: string;
            customer?: {
                mobileNumber?: string;
                email?: unknown;
            };
            limit?: string;
            page?: string;
            nextPage?: string;
        };
        /** @example {
         *       "currentBalance": 44016659.80220392,
         *       "fundsInClearing": 88365107.34000005
         *     } */
        AccountBalanceUnionbankResponse: {
            currentBalance?: number;
            fundsInClearing?: number;
        };
        /** @example {
         *       "customerId": "3106676",
         *       "productCode": "PRD9169",
         *       "accountNo": "063077000117",
         *       "currency": "PHP"
         *     } */
        EONWalletAccountUpgradeRequest: {
            customerId?: string;
            productCode?: string;
            accountNo?: string;
            currency?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "d004c485-c88e-4dfc-8396-78fa9c110259",
         *       "description": "Successful Request"
         *     } */
        EONWalletAccountUpgradeResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
        };
        /** @example {
         *       "senderRefId": "UB2020-12-05",
         *       "tranRequestDate": "2017-08-04T12:11:50.333",
         *       "amount": "1",
         *       "creditAccount": 2110003929,
         *       "billerCode": "7391",
         *       "references": [
         *         {
         *           "index": 1,
         *           "name": "Bayad Center Name",
         *           "value": "7629"
         *         },
         *         {
         *           "index": 2,
         *           "name": "TPA Account ID",
         *           "value": "1889938211"
         *         },
         *         {
         *           "index": 3,
         *           "name": "Contact Number",
         *           "value": 9065728490
         *         }
         *       ]
         *     } */
        EONWalletBillsPaymentRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            amount?: string;
            creditAccount?: string;
            billerCode?: string;
            references?: {
                index?: number;
                name?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UB2020-12-05",
         *       "state": "Successful processed request",
         *       "uuid": "c3bb4e88-6324-44cb-acaa-a9532b81006b",
         *       "description": "Successful transaction"
         *     } */
        EONWalletBillsPaymentResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
        };
        /** @example {
         *       "customerId": "1987425",
         *       "productType": "PRD2207"
         *     } */
        EONWalletCreateVirtualCardsRequest: {
            customerId?: string;
            productType?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "4688b353-a572-41b4-ab81-3724455873cd",
         *       "description": "Successful Request",
         *       "customerId": "1987425",
         *       "accountNumber": "061532300121",
         *       "token": "l9l1cz5xsyzmayjrgf1emgq9ndyziywo1c75r7h7kc3k6w9806vj1nx1kb5qt1yilc4vu2pncmyujtrzy0lfp7c8qid3ioo3ytp7e099nuji9936rii8hke9cpvb1df7uzvm2crnc1t41xg6b6llofgfcs90yuzfkd6yxewxcmd9m0rj9eqceqphzjfznjyx2nf9p7681018uph7xyw4wxp9scoe06t8dzgxtvofuhfi3a8chsasidc0bt",
         *       "apiCardNumber": "U2FsdGVkX1+9QZyMcn6YvAqTuR9MURv8kFrkTML61uI="
         *     } */
        EONWalletCreateVirtualCardResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
            customerId?: string;
            accountNumber?: string;
            token?: string;
            apiCardNumber?: string;
        };
        /** @example {
         *       "senderRefId": "1",
         *       "tranRequestDate": "2018-12-12T07:37:28.333",
         *       "partnerReference": "4321",
         *       "name": {
         *         "first": "jake",
         *         "middle": "test",
         *         "last": "bulawannn"
         *       },
         *       "birthDate": "10/07/1999",
         *       "birthPlace": "Rizal",
         *       "mobileNumber": 9150000000,
         *       "email": "jbulawan@unionbankph.com",
         *       "gender": "M",
         *       "civilStatus": "S",
         *       "mothersMaidenName": "Test Mother Maiden Name",
         *       "presentAddress": {
         *         "street": 9,
         *         "barangay": "San Roque",
         *         "city": "testCityiFMapped",
         *         "province": "Cainta",
         *         "postalCode": 1900
         *       },
         *       "sourceOfFund": "001",
         *       "employment": {
         *         "status": "EMP",
         *         "natureOfWork": "IT",
         *         "companyName": "UBP",
         *         "address": {
         *           "street": "Meralco Ave",
         *           "barangay": "Test Barangay",
         *           "city": "PASIG",
         *           "province": "Test Province",
         *           "postalCode": 1882
         *         }
         *       },
         *       "nationality": "PHL",
         *       "idType": "UMID",
         *       "idNumber": "00011233166",
         *       "images": {
         *         "selfie": "Base64 Selfie image",
         *         "idFront": "Base64 idFront image",
         *         "idBack": "Base64 idBack image"
         *       }
         *     } */
        EONWalletCustomerInvestigationRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            partnerReference?: string;
            name?: {
                first?: string;
                middle?: string;
                last?: string;
            };
            birthDate?: string;
            birthPlace?: string;
            mobileNumber?: string;
            email?: string;
            gender?: string;
            civilStatus?: string;
            mothersMaidenName?: string;
            presentAddress?: {
                street?: string;
                barangay?: string;
                city?: string;
                province?: string;
                postalCode?: number;
            };
            sourceOfFund?: string;
            employment?: {
                status?: string;
                natureOfWork?: string;
                companyName?: string;
                address?: {
                    street?: string;
                    barangay?: string;
                    city?: string;
                    province?: string;
                    postalCode?: number;
                };
            };
            nationality?: string;
            idType?: string;
            idNumber?: string;
            images?: {
                selfie?: string;
                idFront?: string;
                idBack?: string;
            };
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "1",
         *       "state": "Successfully processed request",
         *       "uuid": "4ce48bab-a5aa-493a-82a1-26a80dff315b",
         *       "description": "Successful Request",
         *       "customerId": "1987425",
         *       "transactionId": "KJPXA85L4XKVJAA0FXIW"
         *     } */
        EONWalletCustomerInvestigationResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            customerId?: string;
            transactionId?: string;
        };
        /** @example {
         *       "senderRefId": "11192020-test-2",
         *       "tranRequestDate": "2018-12-12T07:37:28.333",
         *       "creditAccount": "063077000117",
         *       "amount": "1"
         *     } */
        EONWalletFundTransferRequest: {
            senderRefId?: string;
            tranRequestDate?: string;
            creditAccount?: string;
            amount?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "11192020-test-2",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "438e6128-9cf8-407d-8b74-1868e3afbb59",
         *       "description": "Successful transaction",
         *       "type": "EON_FUNDTRANSFER",
         *       "amount": "1",
         *       "tranRequestDate": "2018-12-12T07:37:28.333"
         *     } */
        EONWalletFundTransferResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            tranRequestDate?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "F",
         *           "description": "Failed to process request",
         *           "details": {
         *             "message": "The card is already Locked",
         *             "uuid": "cbed0573-1ce9-4a7d-ae5d-08a34377cf30",
         *             "trace": "InternalResource"
         *           }
         *         }
         *       ]
         *     } */
        EONWalletLockCardsError: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    message?: string;
                    uuid?: string;
                    trace?: string;
                };
            }[];
        };
        /** @example {
         *       "customerId": "1987425"
         *     } */
        EONWalletLockCardsRequest: {
            customerId?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "2e7ed090-0e99-4354-895f-32f92ce84265",
         *       "description": "Successfully Lock Card."
         *     } */
        EONWalletLockCardsResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "F",
         *           "description": "Failed to process request",
         *           "details": {
         *             "message": "The card is already unlocked",
         *             "uuid": "cfdaefef-872c-42c2-8767-6e3f4477474b",
         *             "trace": "InternalResource"
         *           }
         *         }
         *       ]
         *     } */
        EONWalletUnlockCardsError: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    message?: string;
                    uuid?: string;
                    trace?: string;
                };
            }[];
        };
        /** @example {
         *       "customerId": "1987425"
         *     } */
        EONWalletUnlockCardsRequest: {
            customerId?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "fd526ec5-7e54-4b41-8449-2254265c46fb",
         *       "description": "Successfully unlock Card."
         *     } */
        EONWalletUnlockCardsResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
        };
        /** @example {
         *       "senderRefId": "UBPLIFT0000000167",
         *       "tranRequestDate\"": "2020-02-03T12:00:59.123",
         *       "creditAccount\"": 1234567890,
         *       "amount\"": 1000,
         *       "fees": {
         *         "amount": 10
         *       },
         *       "beneficiaryName": "TEST",
         *       "beneficiaryAddress": "TEST",
         *       "receivingBankLocation\"": "CBS",
         *       "receivingBankCode\"": 112
         *     } */
        EONWalletInstapayRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Credit account number */
            creditAccountNumber?: string;
            /** @description Amount to be TopUp */
            amount?: Record<string, never>;
            /** @description Fees amount */
            "amount.fees"?: Record<string, never>;
            /** @description Name of the recipient. Maximum of 300 characters (a-zA-Z). */
            beneficiaryName?: string;
            /** @description Details of the recipient's address */
            beneficiaryAddress?: string;
            /** @description Location of the recieving bank */
            receivingBankLocation?: string;
            /** @description Recieving bank code */
            receivingBankCode?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "senderRefId": "UBPLIFT00000001",
         *       "message": "SUCCESS",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "uuid": "eabbb36a-9463-4941-afb4-675ca472def9",
         *       "amount": 1,
         *       "coreCode": 0,
         *       "strStatus": "UBPLIFT00000001",
         *       "authCode": 1
         *     } */
        EONWalletInstapayResponse: {
            code?: string;
            state?: string;
            senderRefId?: number;
            message?: string;
            tranRequestDate?: string;
            uuid?: string;
            amount?: Record<string, never>;
            coreCode?: string;
            strStatus?: string;
            authCode?: string;
        };
        /** @example {
         *       "senderRefId": "UBPLIFT0000000167",
         *       "tranRequestDate\"": "2020-02-03T12:00:59.123",
         *       "creditAccount\"": 1234567890,
         *       "amount\"": 1000,
         *       "fees": {
         *         "amount": 10
         *       }
         *     } */
        EONWalletRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description EON account number */
            creditAccountNumber?: string;
            /** @description Amount to top up */
            amount?: Record<string, never>;
            /** @description Fee amount. Pass “0” if N/A. */
            "amount.fees"?: Record<string, never>;
        };
        /** @example {
         *       "senderRefId": "UBPLIFT0000000167",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "amount\"": 1,
         *       "creditAccount\"": 1234567890,
         *       "billerCode": 7391,
         *       "references": [
         *         {
         *           "index": 1,
         *           "name": "Bayad Center Name",
         *           "value": 7629
         *         }
         *       ]
         *     } */
        EONWalletBillersRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Amount entered should be less than or equal to balance of source account. */
            amount?: string;
            /** @description For Sandbox testing, use *7391*. For UAT testing, Please refer to the Biller Code in the Biller List. */
            billerCode?: string;
            references?: {
                index?: Record<string, never>;
                name?: string;
                value?: Record<string, never>;
            }[];
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "senderRefId": "UBPLIFT00000001",
         *       "message": "Bills successfully paid.",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "uuid": "eabbb36a-9463-4941-afb4-675ca472def9",
         *       "amount": 1,
         *       "coreCode": 0,
         *       "strStatus": "UBPLIFT00000001",
         *       "authCode": 1
         *     } */
        EONWalletBillersResponse: {
            code?: string;
            state?: string;
            senderRefId?: number;
            message?: string;
            tranRequestDate?: string;
            uuid?: string;
            amount?: Record<string, never>;
            coreCode?: string;
            strStatus?: string;
            authCode?: string;
        };
        /** @example {
         *       "billerShortName": "PIONEER",
         *       "amount": 100,
         *       "references": [
         *         {
         *           "index": 1,
         *           "value": 7629
         *         }
         *       ]
         *     } */
        EONWalletBillersValidateRequest: {
            billerShortName?: string;
            amount?: string;
            references?: {
                index?: Record<string, never>;
                value?: Record<string, never>;
            }[];
        };
        /** @example {
         *       "checkReferenceResult": "PIONEER",
         *       "errMsg1": " ",
         *       "instCode": "77sa1"
         *     } */
        EONWalletBillersValidateResponse: {
            checkReferenceResult?: string;
            errMsg1?: string;
            instCode?: string;
        };
        /** @example {
         *       "senderRefId": "UBPEONC001",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "name": {
         *         "first": "Jhad-a",
         *         "middle": "test",
         *         "last": "Galino"
         *       },
         *       "birthDate": "08/03/1998",
         *       "birthPlace": "Laguna",
         *       "mobileNumber": 9064664608,
         *       "email": "jrmgalino@unionbankph.com",
         *       "gender": "M",
         *       "civilStatus": "S",
         *       "mothersMaidenName": "Test Mother Maiden Name",
         *       "presentAddress": {
         *         "street": "N/A",
         *         "barangay": "N/A",
         *         "city": "testCityiFMapped",
         *         "province": "Batangas",
         *         "postalCode": 1900
         *       },
         *       "sourceOfFund": 5,
         *       "employment": {
         *         "status": "SEB",
         *         "natureOfWork": "IT",
         *         "companyName": "UBP",
         *         "address": {
         *           "street": "N/A",
         *           "barangay": "N/A",
         *           "city": "N/A",
         *           "province": "N/A",
         *           "postalCode": 0
         *         }
         *       },
         *       "nationality": "PHI",
         *       "primaryIdType": "UMID",
         *       "primaryIdNumber": 11233166,
         *       "secondaryIdType": " ",
         *       "secondaryIdNumber": " ",
         *       "images": {
         *         "selfie": "base64string",
         *         "primaryIdFront": "base64string",
         *         "primaryIdBack": "base64string",
         *         "secondaryIdFront": "base64string",
         *         "secondaryIdBack": "base64string"
         *       }
         *     } */
        CreateCustomerRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            name?: {
                first?: string;
                middle?: string;
                last?: string;
            };
            /** @description Date of birth */
            birthDate?: string;
            /** @description Place of birth */
            birthPlace?: string;
            /** @description Mobile Number */
            mobileNumber?: string;
            /** @description Email Address */
            email?: string;
            /** @description Gender */
            gender?: string;
            /** @description Civil status */
            civilStatus?: string;
            /** @description Mother's Maiden name */
            mothersMaidenName?: string;
            presentAddress?: {
                street?: string;
                barangay?: string;
                city?: string;
                province?: string;
                postalCode?: string;
            };
            /** @description Source of Funds */
            sourceOfFund?: string;
            employment?: {
                status?: string;
                natureOfWork?: string;
                companyName?: string;
                address?: {
                    street?: string;
                    barangay?: string;
                    city?: string;
                    province?: string;
                    postalCode?: string;
                };
            };
            /** @description Nationality */
            nationality?: string;
            /** @description Type of Primary ID */
            primaryIdType?: string;
            /** @description Primary ID number */
            primaryIdNumber?: string;
            /** @description Type of Secondary ID */
            secondaryIdType?: string;
            /** @description Secondary ID number */
            secondaryIdNumber?: string;
            images?: {
                selfie?: string;
                primaryIdFront?: string;
                primaryIdBack?: string;
                secondaryIdFront?: string;
                secondaryIdBack?: string;
            };
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBPEONC001",
         *       "state": "Successfully processed request",
         *       "uuid": "d81ccea2-15eb-4413-8b51-aa90112542fa",
         *       "description": "Successful Request",
         *       "customerId": 3470210,
         *       "transactionId": "2105181111278BI5ED0L",
         *       "ciStatus": 10,
         *       "tranRequestDate": "2020-02-03T12:00:59.123"
         *     } */
        CreateCustomerResponse: {
            code?: string;
            senderRefId?: number;
            state?: string;
            uuid?: string;
            description?: string;
            customerId?: string;
            transactionId?: string;
            ciStatus?: string;
            tranRequestDate?: string;
        };
        /** @example {
         *       "name": {
         *         "first": "Jhad-a",
         *         "last": "Galino"
         *       },
         *       "mobileNumber": 9064664608,
         *       "email": "jrmgalino@unionbankph.com",
         *       "gender": "M",
         *       "nic": "test1",
         *       "title": "test2",
         *       "presentAddress": {
         *         "address2": "test2",
         *         "address1": "test1",
         *         "city": "testCityiFMapped",
         *         "country": "testCityiFMapped",
         *         "provinceTown": "Batangas",
         *         "zipCode": 1900
         *       },
         *       "birthDate": "08/03/1998",
         *       "birthPlace": "Laguna",
         *       "sourceOfFund": 5,
         *       "employment": {
         *         "status": "SEB",
         *         "natureOfWork": "IT",
         *         "companyName": "UBP"
         *       },
         *       "nationality": "PHI",
         *       "idType": "UMID",
         *       "idNumber": 11233166,
         *       "responseCode": "00\"",
         *       "description": "Success",
         *       "mcif": "2557678"
         *     } */
        GetCustomerProfileResponse: {
            name?: {
                first?: string;
                last?: string;
            };
            mobileNumber?: string;
            email?: string;
            gender?: string;
            nic?: string;
            title?: string;
            presentAddress?: {
                address2?: string;
                address1?: string;
                city?: string;
                country?: string;
                provinceTown?: string;
                zipCode?: string;
            };
            birthDate?: string;
            birthPlace?: string;
            civilStatus?: string;
            employment?: {
                status?: string;
                natureOfWork?: string;
                employerName?: string;
            };
            sourceOfFund?: string;
            nationality?: string;
            idType?: string;
            idNumber?: string;
            responseCode?: string;
            description?: string;
            mcif?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "description": "Success",
         *       "coreCode": 0,
         *       "accountNumber": 60001149388,
         *       "availableBalance": 416.88
         *     } */
        BalanceInquiryResponse: {
            code?: string;
            state?: string;
            description?: string;
            coreCode?: string;
            accountNumber?: string;
            availableBalance?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "c2c989cb-4f2c-4ce0-ba28-44ad5c4b6477",
         *       "records": [
         *         {
         *           "tranDate": "2021-02-08T10:23:58",
         *           "id": 1947141,
         *           "amount": "-0.00",
         *           "branch": "NA",
         *           "tranDesc": "Move Money [Other Bank]",
         *           "balance": 4.24,
         *           "tranCurrency": 608,
         *           "pplCode": " "
         *         }
         *       ]
         *     } */
        TransactionHistoryEON: {
            code?: string;
            state?: string;
            uuid?: string;
            records?: {
                tranDate?: string;
                id?: string;
                amount?: string;
                branch?: string;
                tranDesc?: string;
                balance?: string;
                tranCurrency?: string;
                pplCode?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "UBPLFT000004",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "accountNumber": 62839300126
         *     } */
        UpgradePrepaidAccount: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. */
            senderRefId?: string;
            /** @description Date when transaction is requested.Timezone should be UTC+08:00. Sample value:2020-02-10T13:26:55.123 */
            tranRequestDate?: string;
            /** @description For Sandbox testing, use the account number provided below. */
            accountNumber?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBPL00000005",
         *       "state": "Successfully processed request",
         *       "uuid": "eeba2034-3269-40af-bf6f-5ab744fd79c1",
         *       "description": "Success",
         *       "ciStatus": 1,
         *       "coreCode": 300,
         *       "tranRequestDate": "2017-08-04T12:11:50.333"
         *     } */
        UpgradeWalletResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            ciStatus?: string;
            coreCode?: string;
            tranRequestDate?: string;
        };
        /** @example {
         *       "senderRefId": "UB2020-0605-11",
         *       "tranRequestDate": "2017-08-04T12:11:50.333"
         *     } */
        ActivateVirtualCardRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "821252b1-716e-4fce-aa95-c44c49b6fee2",
         *       "description": "Successful Request"
         *     } */
        ActivateVirtualCardResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
        };
        /** @example {
         *       "senderRefId": "UB2020-0605-11",
         *       "tranRequestDate": "2017-08-04T12:11:50.333",
         *       "customerId": 2467140,
         *       "cardType": "PREPAID",
         *       "productType": "PRD9189",
         *       "customerCategory": "NORM",
         *       "incomePeriod": "",
         *       "income": "",
         *       "creditLimit": ""
         *     } */
        VirtualCardRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Master CIF / Customer ID */
            customerId?: string;
            /** @description Value = “PREPAID” */
            cardType?: string;
            /** @description Product Code in IBL */
            productType?: string;
            /** @description Extra field */
            customerCategory?: string;
            /** @description Mandatory if Card type is Credit, while Optional if Card type is Prepaid. */
            incomePeriod?: string;
            /** @description Mandatory if Card type is Credit, while Optional if Card type is Prepaid. */
            income?: string;
            /** @description Mandatory if Card type is Credit, while Optional if Card */
            creditLimit?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "821252b1-716e-4fce-aa95-c44c49b6fee2",
         *       "description": "Successful Request",
         *       "referenceNumber": "UB2020-0605-11",
         *       "accountNumber": 60002016297,
         *       "token": "0bb53ea0cd2ebc33b65062f90c53622faf5f3b753ea0ba9fc8063b893a564d8b9c4a5b26b37caec16e259f9962e8b768",
         *       "customerId": 2467140
         *     } */
        VirtualCardResponse: {
            code?: string;
            state?: string;
            description?: string;
            referenceNumber?: string;
            accountNumber?: string;
            token?: string;
            customerId?: string;
        };
        /** @example {
         *       "senderRefId": "UB2020-0605-11",
         *       "tranRequestDate": "2017-08-04T12:11:50.333",
         *       "apiNewPin": "VcMzF8g7e4s8DFQ6YXyJww==:wKvxxNJnwNONb+eMAEtxWQ==",
         *       "apiActivationCode": "PEJmZnxMYOVakS0rlVKQVA==:JqNocSnBS6W5kTAdDqkZJg=="
         *     } */
        ActivatePinCardRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Cipher Encrypted Card New PIN */
            apiNewPin?: string;
            /** @description Cipher Encrypted Card Activation Code */
            apiActivationCode?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "821252b1-716e-4fce-aa95-c44c49b6fee2",
         *       "description": "Successful Request"
         *     } */
        ActivatePinCardResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
        };
        /** @example {
         *       "senderRefId": "UB2020-0605-11",
         *       "tranRequestDate": "2017-08-04T12:11:50.333",
         *       "apiPin": "VcMzF8g7e4s8DFQ6YXyJww==:wKvxxNJnwNONb+eMAEtxWQ==",
         *       "apiNewPin": "PEJmZnxMYOVakS0rlVKQVA==:JqNocSnBS6W5kTAdDqkZJg=="
         *     } */
        ChangePinCardRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Cipher Encrypted Card PIN */
            apiPin?: string;
            /** @description Cipher Encrypted Card New PIN */
            apiNewPin?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "821252b1-716e-4fce-aa95-c44c49b6fee2",
         *       "description": "Successful Request",
         *       "customerId": 2593678
         *     } */
        ChangePinCardResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
            customerId?: string;
        };
        /** @example {
         *       "senderRefId": "UB2020-0605-11",
         *       "tranRequestDate": "2017-08-04T12:11:50.333",
         *       "apiPin": "VcMzF8g7e4s8DFQ6YXyJww==:wKvxxNJnwNONb+eMAEtxWQ=="
         *     } */
        ValidatePinCardRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Cipher Encrypted Card PIN */
            apiPin?: string;
        };
        /** @example {
         *       "newApiCardNumber": "Y/CfYLi1E15zMIc2Cw/DWw==:XLuvsqMX2LwABNMtvwGO+4794r0PVcqVR2HdWsK1sk0="
         *     } */
        ReplacementCardRequest: {
            /** @description Cipher Encrypted New API Card number */
            newApiCardNumber?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "821252b1-716e-4fce-aa95-c44c49b6fee2"
         *     } */
        ReplacementCardResponse: {
            code?: string;
            state?: string;
            uuid?: string;
        };
        /** @example {
         *       "customerId": 2087586,
         *       "productType": "PRD001",
         *       "nameOnCard": "Jhad Galino"
         *     } */
        PersonalizeCardRequest: {
            /** @description Customer ID / Master CIF */
            customerId?: string;
            /** @description Card Product Type */
            productType?: string;
            /** @description Name on Card */
            nameOnCard?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "821252b1-716e-4fce-aa95-c44c49b6fee2",
         *       "description": "Successful Request",
         *       "token": "9a73701f7b475628bea0556cb80dcc66d376d3824b6502f5f32c5b9e13d10ad5c67e6882651630ecb6cd506120ffdfa6",
         *       "encryptedNewCardNumber": "CbSMg7TQ8uZEk0Vuk8XsZQ==:JV2ztusnRav/o0n+WLQlo4wcoo5JT47NMedYDCMM9Iw="
         *     } */
        PersonalizeCardResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
            token?: string;
            encryptedNewCardNumber?: string;
        };
        /** @example {
         *       "senderRefId": "UBPLIFT0000000167",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "creditAccount\"": 1234567890,
         *       "amount": 1
         *     } */
        MotherTransactionRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Credit account number */
            creditAccount?: string;
            /** @description Amount */
            amount?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBPLIFT00000001",
         *       "state": "Successfully processed request",
         *       "uuid": "eabbb36a-9463-4941-afb4-675ca472def9",
         *       "description": "SUCCESS",
         *       "type": "EON_FUNDTRANSFER",
         *       "amount": 1,
         *       "coreCode": 0,
         *       "tranRequestDate": "2020-02-03T12:00:59.123"
         *     } */
        MotherTransactionResponse: {
            code?: string;
            senderRefId?: number;
            state?: string;
            uuid?: string;
            description?: string;
            type?: Record<string, never>;
            amount?: Record<string, never>;
            coreCode?: string;
            tranRequestDate?: string;
        };
        /** @example {
         *       "senderRefId": "UBPLIFT0000000167",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "amount": 1
         *     } */
        MotherDetailsRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Amount */
            amount?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "eabbb36a-9463-4941-afb4-675ca472def9",
         *       "records": [
         *         {
         *           "tranDate": "2021-02-23T13:00:20",
         *           "id": 1970533,
         *           "amount": -50000,
         *           "branch": "NA",
         *           "tranDesc": "Move Money",
         *           "balance": 1949958,
         *           "tranCurrency": 608,
         *           "pplCode\"": "From Acct No 060002324014"
         *         }
         *       ]
         *     } */
        MotherDetailsResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            record?: {
                tranDate?: string;
                id?: string;
                amount?: string;
                branch?: string;
                tranDesc?: string;
                balance?: string;
                tranCurrency?: string;
                pplCode?: string;
            }[];
        };
        /** @example {
         *       "customerId": null,
         *       "transactionId": "201202132030GNG80M1X",
         *       "partnerReference": 4321,
         *       "ciStatus": 0
         *     } */
        InvestigateResponse: {
            customerId?: string;
            transactionId?: number;
            partnerReference?: string;
            ciStatus?: string;
        };
        /** @example {
         *       "senderRefId": "UBPEONC001",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "customerId": 123123123,
         *       "apiCardNumber": "C+PU1s8DbDSMa1c6r7cy3g==:Hkeg/8D1ti039+pGrI+3SIWcZWb+G6uhdt/BWsRoiMs=",
         *       "apiActivationCode": "KZzTCgywy9W+iA+b1BndfQ==:E1MJd0EkqMnq9pAtAQGkkQ==",
         *       "name": {
         *         "first": "Jhad-a",
         *         "middle": "test",
         *         "last": "Galino"
         *       },
         *       "mobileNumber": 9064664608,
         *       "email": "jrmgalino@unionbankph.com",
         *       "gender": "M",
         *       "nic": 55112,
         *       "title": "Mr.",
         *       "birthDate": "08/03/1998",
         *       "birthPlace": "Laguna",
         *       "presentAddress": {
         *         "line1": "N/A",
         *         "line2": "N/A",
         *         "line3": "N/A",
         *         "city": "testCityiFMapped",
         *         "country": "Philippines",
         *         "province": "Batangas",
         *         "postalCode": 1900
         *       },
         *       "sourceOfFund": 5,
         *       "employment": {
         *         "status": "SEB",
         *         "natureOfWork": "IT",
         *         "companyName": "UBP"
         *       },
         *       "nationality": "PHI",
         *       "idType": "UMID",
         *       "idNumber": ""
         *     } */
        LinkingPhysicalRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Provide the 6-digit customer ID / MCIF if the customer is already existing. Can be passed with an empty string (“”) which will create a new customer profile with a brand new customer ID. */
            customerId?: string;
            /** @description Supply string from encrypting the 16-digit physical card number This keeps refreshing each time you see this parameter in another response. This is expected; decryption will lead to the same value. For Sandbox testing, use the value provided in the sample request. */
            apiCardNumber?: string;
            /** @description Supply string from encrypting the last 6-digits of the physical card number This value keeps refreshing each time you encrypt this value via code. This is expected; decryption will lead to the same value. For Sandbox testing, use the value provided in the sample request. */
            apiActivationCode?: string;
            name?: {
                /** @description First Name */
                first?: string;
                /** @description Middle Name */
                middle?: string;
                /** @description Last Name */
                last?: string;
            };
            /** @description Mobile Number */
            mobileNumber?: string;
            /** @description Email Address */
            email?: string;
            /** @description Gender */
            gender?: string;
            nic?: string;
            title?: string;
            presentAddress?: {
                line1?: string;
                line2?: string;
                line3?: string;
                city?: string;
                country?: string;
                province?: string;
                postalCode?: string;
            };
            /** @description Date of birth */
            birthDate?: string;
            /** @description Place of birth */
            birthPlace?: string;
            /** @description Source of Funds */
            sourceOfFund?: string;
            employment?: {
                status?: string;
                natureOfWork?: string;
                companyName?: string;
            };
            /** @description Nationality */
            nationality?: string;
            /** @description Type of ID */
            idType?: string;
            /** @description ID number */
            idNumber?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBPEONC001",
         *       "state": "Successfully processed request",
         *       "uuid": "d81ccea2-15eb-4413-8b51-aa90112542fa",
         *       "description": "Successful Request",
         *       "coreCode": 4,
         *       "message": "Card is Activated ,Request Force PIN Change",
         *       "accountNumber": 60002323032,
         *       "token": "6c7a7906db4e436b05286558f942ded65133019dae7a5f3b6681fc444592dcb63138d9c67819a0d351bfee02007a6c8c",
         *       "customerId": 2716178
         *     } */
        LinkingPhysicalResponse: {
            code?: string;
            senderRefId?: number;
            state?: string;
            uuid?: string;
            description?: string;
            coreCode?: string;
            message?: string;
            accountNumber?: string;
            token?: string;
            customerId?: string;
        };
        /** @example {
         *       "customerId": 112444,
         *       "transType": "LCR",
         *       "amount": 5000,
         *       "changeType": "IP",
         *       "startDate": "02-04-2020",
         *       "endDate": "02-04-2021"
         *     } */
        UpgradeCardLimitRequest: {
            amount?: string;
            changeType?: number;
            startDate?: string;
            endDate?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBPEONC001",
         *       "state": "Successfully processed request",
         *       "uuid": "d81ccea2-15eb-4413-8b51-aa90112542fa",
         *       "description": "Successful Request",
         *       "coreCode": 1,
         *       "accountNumber": 60002323032
         *     } */
        UpgradeCardLimitResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            description?: string;
            coreCode?: string;
            accountNumber?: string;
        };
        /** @example {
         *       "senderRefId": "UBPLIFT0000000167",
         *       "tranRequestDate": "2020-02-03T12:00:59.123",
         *       "amount\"": 1
         *     } */
        EONWalletTransactionDetailsRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Amount entered should be less than or equal to balance of source account. */
            amount?: string;
        };
        /** @example {
         *       "customerId": 2300733,
         *       "productType": "PRD9182"
         *     } */
        KYCRequest: {
            /** @description Unique customerId of the customer */
            customerId?: string;
            /** @description For Sandbox testing, please use the value provided in the sample request. For UAT testing, this will be provided by EON Team, defined according to program and Agreement. */
            productType?: number;
        };
        /** @example {
         *       "customerId": null,
         *       "transactionId": "201202132030GNG80M1X",
         *       "partnerReference": 4321,
         *       "ciStatus": 0
         *     } */
        KYCResponse: {
            customerId?: string;
            transactionId?: string;
            partnerReference?: string;
            ciStatus?: string;
        };
        /** @example {
         *       "cardNumber": "9CU/q1JtTsMOrNSJvENHlQ==:TPbYAn0fIABiHEsdvpSUH2MROkSSvLao7wH2N2vA01U=",
         *       "amount": 10000,
         *       "merchant\"": "ABENSONS"
         *     } */
        ZeroPercentOTPRequest: {
            /** @description Cipher-Encrypted CardNumber. For Sandbox testing, use the sample value provide = 5ZcxRsTxEoaFYTCjH/606Q==:PBm7jWYMddjf0q3 he+bwY+pEZz/bT/D2U1ZSu/xX55I= */
            cardNumber?: string;
            /** @description Transaction Amount */
            amount?: number;
            /** @description Merchant Number */
            merchant?: number;
        };
        /** @example {
         *       "uuid": "c1577d43-fce0-46e9-81b2-2d9b6079494d",
         *       "requestId": "ED2E4471C4D04732C8485C5FFE78F443",
         *       "coreCode\"": 200
         *     } */
        ZeroPercentOTPResponse: {
            uuid?: string;
            requestId?: string;
            coreCode?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "TF",
         *           "description": "Failed to process request",
         *           "details": {
         *             "message": "OTP request failed.",
         *             "uuid": "b1577d43-fce0-46e9-81b2-2d9b6079494d",
         *             "coreCode": -10,
         *             "trace": "InternalResource"
         *           }
         *         }
         *       ]
         *     } */
        ZeroPercentOTPResponseError: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    message?: string;
                    uuid?: string;
                    coreCode?: string;
                    trace?: string;
                };
            }[];
        };
        /** @example {
         *       "senderRefId": "TESTUB-9998",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "requestId": "10FF94359ECCDDE62CBCA11C9347AF35",
         *       "otp": 916227,
         *       "merchant": {
         *         "number": 1200000001,
         *         "country": 608
         *       },
         *       "mcc": 633,
         *       "cardNumber": "9CU/q1JtTsMOrNSJvENHlQ==:TPbYAn0fIABiHEsdvpSUH2MROkSSvLao7wH2N2vA01U=",
         *       "cvv": "geZ8RMRMl+L+qXLqFmxUUg==:em/H0+1FP4kB5xFRdMIPpw==",
         *       "expiryDate\"": "08/25",
         *       "amount": 1000,
         *       "instalmentPlanShortCode": "INSTIPP001"
         *     } */
        ZeroPercentPaymentRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API. Maximum of 20 alphanumeric characters(a-zA-Z0-9-). */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone used is UTC+08:00. Maximum of 23 alphanumeric characters(A-Z0-9-:.). */
            tranRequestDate?: string;
            /** @description Request ID from Send OTP endpoint. */
            requestId?: string;
            /** @description Merchant Number */
            "merchant.number"?: string;
            /** @description Merchant Country Code */
            "merchant.country"?: string;
            /** @description MCC */
            mcc?: string;
            /** @description Cipher-Encrypted CardNumber. For Sandbox testing, use the sample value provide = 5ZcxRsTxEoaFYTCjH/606Q==:PBm7jWYMddjf0q3 he+bwY+pEZz/bT/D2U1ZSu/xX55I= */
            cardNumber?: string;
            /** @description Cipher Encrypted cvv */
            cvv?: string;
            /** @description Credit card expiry date. Format =  mm/dd */
            expiryDate?: string;
            /** @description Transaction Amount */
            amount?: string;
            /** @description Instalment Plan Short Code */
            instalmentPlanShortCode?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBTEST002290",
         *       "state": "Successfully processed request",
         *       "uuid": "e7bdd066-a50e-4fa4-9f2a-729946fb2143",
         *       "description": "Successful transaction",
         *       "message": "Approved",
         *       "retrievalReferenceNo": 124019600511,
         *       "coreCode": 0,
         *       "issuerReasonCode": " ",
         *       "type": "CREDIT_CARD_INSTALLMENT",
         *       "amount": 1000,
         *       "tranRequestDate": "2017-10-10T12:11:50.333"
         *     } */
        ZeroPercentPaymentResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            message?: string;
            retrievalReferenceNo?: string;
            authorizationCode?: string;
            coreCode?: string;
            issuerReasonCode?: string;
            type?: string;
            amount?: string;
            tranRequestDate?: string;
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": "TS",
         *           "senderRefId": "UB000001",
         *           "state": "Failed to processed request",
         *           "uuid\"": "b1577d43-fce0-46e9-81b2-2d9b6079494d",
         *           "description": "Failed Request",
         *           "message": "Internal Server Error.",
         *           "type": "CREDIT_CARD_INSTALLMENT",
         *           "amount": 1000,
         *           "tranRequestDate": "2017-10-10T12:11:50.000Z",
         *           "createdAt": "2021-08-31T18:07:05.000Z",
         *           "updatedAt": "2021-08-31T18:07:05.000Z"
         *         }
         *       ]
         *     } */
        ZeroPercentTransactionResponse: {
            records?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                message?: string;
                type?: string;
                amount?: string;
                tranRequestDate?: string;
                createdAt?: string;
                updatedAt?: string;
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "TF",
         *           "description": "Failed to process request",
         *           "details": {
         *             "senderRefId": "TESTUB-9998",
         *             "message": "Not sufficient funds",
         *             "uuid": "b1577d43-fce0-46e9-81b2-2d9b6079494d",
         *             "coreCode": 0,
         *             "trace": "InternalResource"
         *           }
         *         }
         *       ]
         *     } */
        ZeroPercentPaymentResponseError: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    message?: string;
                    coreCode?: string;
                    uuid?: string;
                };
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "TF",
         *           "description": "Failed to process request",
         *           "details": {
         *             "senderRefId": "TESTUB-9998",
         *             "message": "Missing/Invalid Parameters.",
         *             "uuid": "b1577d43-fce0-46e9-81b2-2d9b6079494d",
         *             "trace": "InternalResource"
         *           },
         *           "parameters": {
         *             "field": "senderRefId",
         *             "message": "A senderRefId is required for this action."
         *           }
         *         }
         *       ]
         *     } */
        ZeroPercentTransactionResponseError: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: string;
                    message?: string;
                    coreCode?: string;
                    uuid?: string;
                    trace?: string;
                };
                parameters?: {
                    field?: string;
                    message?: string;
                };
            }[];
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "NC",
         *           "description": "Network Issue - Core",
         *           "details": {
         *             "senderRefId": "UB20201-31",
         *             "message": "Internal Server Error.",
         *             "uuid": "794e441e-f1ec-4a27-b080-c0ceafc285a4",
         *             "coreCode": "I",
         *             "trace": "InternalResource"
         *           }
         *         }
         *       ]
         *     } */
        ZeroPercentResponseNC: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: number;
                    tranRequestDate?: string;
                    message?: string;
                    uuid?: string;
                    coreCode?: string;
                };
            }[];
        };
        /** @example {
         *       "senderRefId": "UBUATREFUND-123",
         *       "tranRequestDate": "2017-10-10T04:11:50.000Z",
         *       "transaction": {
         *         "uuid": "baaab46a-9463-4641-afb4-6757a47agef9",
         *         "amount": 1,
         *         "ubpTranId": "UB4853",
         *         "tranFinacleDate": "2021-08-19"
         *       }
         *     } */
        MerchantPaymentRefundRequest: {
            /** @description Sender Reference ID */
            senderRefId?: string;
            /** @description TranRequestDate */
            tranRequestDate?: string;
            transaction?: {
                /** @description Unique Identifier */
                uuid?: string;
                /** @description Transaction Amount */
                amount?: string;
                /** @description UBP Transaction ID */
                ubpTranId?: string;
                /** @description Finacle Date */
                tranFinacleDate?: string;
            };
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "UBLOC01012",
         *       "state": "Successfully processed request",
         *       "uuid": "baaab46a-9463-4641-afb4-6757a47agef9",
         *       "description": "Successfully Reversed",
         *       "type": "MERCHANT_PAYMENT",
         *       "amount": 1,
         *       "ubpTranId": "UB4853",
         *       "reversalUbpTranId": "UB4857",
         *       "tranRequestDate": "2017-10-10T04:11:50.000Z",
         *       "tranFinacleDate": "2021-08-19"
         *     } */
        MerchantPaymentRefundResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            reversalUbpTranId?: string;
            tranRequestDate?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "errors": [
         *         {
         *           "code": "TF",
         *           "description": "Failed to process request",
         *           "details": {
         *             "senderRefId": "TESTUB-9998",
         *             "message": "THIS TRANSACTION WAS ALREADY REVERSED",
         *             "uuid": "b1577d43-fce0-46e9-81b2-2d9b6079494d",
         *             "trace": "InternalResourceFailed"
         *           }
         *         }
         *       ]
         *     } */
        MerchantPaymentRefundErrorResponse: {
            errors?: {
                code?: string;
                description?: string;
                details?: {
                    senderRefId?: string;
                    message?: string;
                    coreCode?: string;
                    uuid?: string;
                    trace?: string;
                };
            }[];
        };
        /** @example {
         *       "schedule": {
         *         "dayOfTheMonth": [
         *           "15"
         *         ],
         *         "dayOfTheWeek": [
         *           "WED",
         *           "THU"
         *         ],
         *         "endOfSubscription": "11/16/2021"
         *       }
         *     } */
        ADARequest: {
            schedule?: {
                dayOfTheMonth?: unknown[];
                dayOfTheWeek?: unknown[];
                endOfSubscription?: string;
            };
        };
        /** @example {
         *       "message": "Schedule Successfully Updated!",
         *       "approverId": "4C1919AE2DAEBAA8799756B2348B558D",
         *       "newSchedule": {
         *         "dayOfTheMonth": [
         *           "15"
         *         ],
         *         "dayOfTheWeek": [
         *           "WED",
         *           "THU"
         *         ],
         *         "endOfSubscription": "11/16/2021"
         *       }
         *     } */
        ADAResponse: {
            message?: string;
            approverId?: string;
            newSchedule?: {
                dayOfTheMonth?: unknown[];
                dayOfTheWeek?: unknown[];
                endOfSubscription?: string;
            };
        };
        /** @example {
         *       "senderRefId": "UB000001",
         *       "tranRequestDate": "2017-10-10T12:11:50.333",
         *       "approverId": "2711C83E7AB7BFE8BB2729B3A8FC8DB1",
         *       "amount": {
         *         "currency": "PHP",
         *         "value": 1
         *       },
         *       "remarks": "Payment remarks&,/();:.",
         *       "particulars": "Payment particulars",
         *       "info": {
         *         "index": 2,
         *         "name": "InvoiceNo",
         *         "value": 12345
         *       }
         *     } */
        ADASingleRequest: {
            /** @description Unique reference identifier for a transaction. This is provided by the consumer of the API */
            senderRefId?: string;
            /** @description Date when transaction is requested. Timezone should be UTC+08:00. Sample value = '2020-02-10T13:26:55.123' */
            tranRequestDate?: string;
            /** @description Approver ID from request schedule endpoint. */
            approverId?: string;
            amount?: {
                currency?: string;
                value?: string;
            };
            remarks?: string;
            particulars?: string;
            info?: {
                index?: string;
                name?: string;
                value?: string;
            };
        };
        /** @example {
         *       "payload": {
         *         "code": "TS",
         *         "senderRefId": "UB0000000042",
         *         "state": "Credited Beneficiary Account",
         *         "uuid": "dac4999a-8e8c-4b5f-8744-a897bccadaeb",
         *         "description": "Successful transaction",
         *         "type": "ADA_MERCHANT_PAYMENT",
         *         "amount": 1,
         *         "ubpTranId": "UB4246",
         *         "tranRequestDate": "2017-10-10T12:11:50.333",
         *         "tranFinacleDate": "2017-10-10T12:11:50.333"
         *       },
         *       "signature": "36424e7f2e2e7dcd5582af580fbbd5aa272651f625741554bf7f699dc105957ca8ea9a5ab6575e01f9f472c5480225070b1f26969d5cccdcd0a6a1fda3275580261603cbab3f9f94e2a0b76df8319618d8b108f91735df46e585a4b8c1bf80e3b789e042965dc15f637e04accd5d05c0981d26f517d2c8342d63fc4ffdb0f818af73c636cd707be9fa9a8a4c517e7affaaca57f39f74f123c67eb277bc829c0e98fbf71cdc34ffcdfa85e305065c3ab5b7ed737c06a510a2e5d916c616279360c5725dc8862929236052ee187b800312671eb76d4e1f5e3f02c0addd3bffc314737ff76e33e207d7e393c7474aa1483cd3b2588df5a9d4e19a5a05e761e9c1b0"
         *     } */
        ADASingleResponse: {
            payload?: {
                code?: string;
                senderRefId?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                tranRequestDate?: string;
                tranFinacleDate?: string;
            };
            signature?: string;
        };
        /** @example {
         *       "payload": {
         *         "record": {
         *           "code": "TS",
         *           "senderRefId": "UB0000000042",
         *           "state": "Credited Beneficiary Account",
         *           "uuid": "dac4999a-8e8c-4b5f-8744-a897bccadaeb",
         *           "description": "Successful transaction",
         *           "type": "ADA_MERCHANT_PAYMENT",
         *           "amount": 1,
         *           "ubpTranId": "UB4246",
         *           "tranRequestDate": "2017-10-10T12:11:50.333",
         *           "tranFinacleDate": "2017-10-10T12:11:50.333"
         *         },
         *         "signature": "36424e7f2e2e7dcd5582af580fbbd5aa272651f625741554bf7f699dc105957ca8ea9a5ab6575e01f9f472c5480225070b1f26969d5cccdcd0a6a1fda3275580261603cbab3f9f94e2a0b76df8319618d8b108f91735df46e585a4b8c1bf80e3b789e042965dc15f637e04accd5d05c0981d26f517d2c8342d63fc4ffdb0f818af73c636cd707be9fa9a8a4c517e7affaaca57f39f74f123c67eb277bc829c0e98fbf71cdc34ffcdfa85e305065c3ab5b7ed737c06a510a2e5d916c616279360c5725dc8862929236052ee187b800312671eb76d4e1f5e3f02c0addd3bffc314737ff76e33e207d7e393c7474aa1483cd3b2588df5a9d4e19a5a05e761e9c1b0"
         *       }
         *     } */
        ADACheckTransactionResponse: {
            payload?: {
                record?: {
                    code?: string;
                    senderRefId?: string;
                    state?: string;
                    uuid?: string;
                    description?: string;
                    type?: string;
                    amount?: string;
                    ubpTranId?: string;
                    tranRequestDate?: string;
                    tranFinacleDate?: string;
                };
                signature?: string;
            };
        };
        /** @example {
         *       "schedule": {
         *         "dayOfTheMonth": [
         *           "15"
         *         ],
         *         "dayOfTheWeek": [
         *           "WED",
         *           "THU"
         *         ],
         *         "endOfSubscription": "11/16/2021"
         *       }
         *     } */
        ADACheckScheduleResponse: {
            schedule?: {
                dayOfTheMonth?: unknown[];
                dayOfTheWeek?: unknown[];
                endOfSubscription?: string;
            };
            signature?: string;
        };
        /** @example {
         *       "schedule": {
         *         "dayOfTheMonth": [
         *           "15"
         *         ],
         *         "dayOfTheWeek": [
         *           "WED",
         *           "THU"
         *         ],
         *         "endOfSubscription": "11/16/2021"
         *       }
         *     } */
        ADAUpdateScheduleRequest: {
            schedule?: {
                dayOfTheMonth?: unknown[];
                dayOfTheWeek?: unknown[];
                endOfSubscription?: string;
            };
            signature?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "message": "Schedule Successfully Updated!",
         *       "newSchedule": {
         *         "dayOfTheMonth": [
         *           "15"
         *         ],
         *         "dayOfTheWeek": [
         *           "WED",
         *           "THU"
         *         ],
         *         "endOfSubscription": "11/16/2021"
         *       }
         *     } */
        ADAUpdateScheduleResponse: {
            code?: string;
            message?: string;
            newSchedule?: {
                dayOfTheMonth?: unknown[];
                dayOfTheWeek?: unknown[];
                endOfSubscription?: string;
            };
            signature?: string;
        };
        /** @example {
         *       "approverId": "61A8C2A3C38D4CA3636377D3B017040CC",
         *       "status": "unsubscribe"
         *     } */
        ADAToggleRequest: {
            approverId?: string;
            status?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "description": "Successfully Processed Request",
         *       "message": "toggle Successfully turned off"
         *     } */
        ADAToggleResponse: {
            code?: string;
            description?: string;
            message?: string;
        };
        /** @example {
         *       "currentBalance": 582428.74,
         *       "fundsInClearing": 0
         *     } */
        CheckBalance: {
            currentBalance?: string;
            fundsInClearing?: string;
        };
        /** @example {
         *       "senderRefId": "UBTEST-012",
         *       "tranRequestDate": "2021-10-10T12:11:50.333",
         *       "sender": {
         *         "name": "Juan dela Cruz"
         *       },
         *       "beneficiary": {
         *         "accountNumber\"": "100590250028",
         *         "name": "Juana dela Cruz",
         *         "address": {
         *           "line1": "Reliance"
         *         }
         *       },
         *       "remittance": {
         *         "amount": 1000,
         *         "currency": "USD",
         *         "receivingBank": 161191,
         *         "purpose\"": "11 09",
         *         "instructions\"": "ADVERTISING"
         *       }
         *     } */
        PDDTSTransferRequest: {
            /** @description senderRefId */
            senderRefId?: string;
            /** @description tranRequestDate */
            tranRequestDate?: string;
            /** @description Sender */
            sender?: {
                name?: string;
            };
            /** @description Beneficiary details */
            beneficiary?: {
                accountNumber?: string;
                name?: string;
                address?: {
                    line1?: string;
                };
            };
            /** @description Remittance details */
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
            };
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "UBTEST-012",
         *       "state": "Sent for Processing",
         *       "uuid": "2d8ba8d1-fa2c-4f7c-b954-77b53167029b",
         *       "description": "Transaction is sent for processing",
         *       "type": "PDDTS_TRANSFER",
         *       "amount": 1000,
         *       "ubpTranId": "UB14892",
         *       "tranRequestDate": "2021-10-10T12:11:50.333",
         *       "remittanceId": "P90121HTCEHIBIPN"
         *     } */
        PDDTSTransferResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
            remittanceId?: string;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UBPTEST-01",
         *         "code": "SP",
         *         "state": "Sent for Processing",
         *         "uuid": "78a537b8-0420-4edf-a04d-2cabd220635c",
         *         "description": "Transaction is sent for processing",
         *         "type": "PDDTS_TRANSFER",
         *         "amount": 1,
         *         "ubpTranId": "UB4191",
         *         "tranRequestDate": "2018-10-17T18:30:58.000Z",
         *         "createdAt": "2021-02-02T10:15:19.000Z",
         *         "updatedAt": "2021-02-02T10:15:20.000Z",
         *         "remittanceId": "E90120DCTTNFSRVM"
         *       }
         *     } */
        PDDTSTransferDetailsResponse: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                tranRequestDate?: string;
                createdAt?: string;
                updatedAt?: string;
                remittanceId?: string;
            };
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": ".",
         *           "bank": "ENTERPRISE BANK INC.",
         *           "brstn": "."
         *         },
         *         {
         *           "code": ".",
         *           "bank": "EQUICOM SAVINGS BANK",
         *           "brstn": 10960017
         *         },
         *         {
         *           "code": ".",
         *           "bank": "EQUITABLE SAVINGS BANK",
         *           "brstn": "."
         *         },
         *         {
         *           "code": ".",
         *           "bank": "FIRST CONSOLIDATED BANK INC.",
         *           "brstn": 20780012
         *         }
         *       ]
         *     } */
        PDDTSBanksResponse: {
            record?: unknown[];
        };
        /** @example {
         *       "senderRefId": "UBTEST-0074",
         *       "tranRequestDate": "2021-10-10T12:11:50.333",
         *       "sender": {
         *         "name": "Juan dela Cruz"
         *       },
         *       "beneficiary": {
         *         "accountNumber\"": "100590250028",
         *         "name": "Juana dela Cruz",
         *         "address": {
         *           "line1": "Reliance",
         *           "line2": "Line 2",
         *           "city": "Pasig City",
         *           "province": "Bulacan",
         *           "zipcode": 1800,
         *           "country": "Philippines"
         *         }
         *       },
         *       "remittance": {
         *         "amount": 1000,
         *         "currency": "USD",
         *         "receivingBank": 161206,
         *         "purpose": "Purpose",
         *         "instructions": "ADVERTISING",
         *         "remarks\"": "Sample remarks",
         *         "orNumber": 1234
         *       }
         *     } */
        RTGSTransferRequest: {
            /** @description senderRefId */
            senderRefId?: string;
            /** @description tranRequestDate */
            tranRequestDate?: string;
            /** @description Sender */
            sender?: {
                name?: string;
            };
            /** @description Beneficiary details */
            beneficiary?: {
                accountNumber?: string;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            /** @description Remittance details */
            remittance?: {
                amount?: string;
                currency?: string;
                receivingBank?: string;
                purpose?: string;
                instructions?: string;
                remarks?: string;
                orNumber?: string;
            };
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "UBPTEST-01",
         *       "state": "Sent for Processing",
         *       "uuid": "2d8ba8d1-fa2c-4f7c-b954-77b53167029b",
         *       "description": "Transaction is sent for processing",
         *       "type": "PDDTS_TRANSFER",
         *       "amount": 1000,
         *       "ubpTranId": "UB4191",
         *       "tranRequestDate": "2021-10-10T12:11:50.333",
         *       "remittanceId": "E90120DCTTNFSRVM"
         *     } */
        RTGSTransferResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
            remittanceId?: string;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "UBPTEST-01",
         *         "code": "SP",
         *         "state": "Sent for Processing",
         *         "uuid": "78a537b8-0420-4edf-a04d-2cabd220635c",
         *         "description": "Transaction is sent for processing",
         *         "type": "RTGS_TRANSFER",
         *         "amount": 1,
         *         "ubpTranId": "UB4191",
         *         "tranRequestDate": "2018-10-17T18:30:58.000Z",
         *         "createdAt": "2021-02-02T10:15:19.000Z",
         *         "updatedAt": "2021-02-02T10:15:20.000Z",
         *         "remittanceId": "E90120DCTTNFSRVM"
         *       }
         *     } */
        RTGSTransferDetailsResponse: {
            record?: {
                senderRefId?: string;
                code?: string;
                state?: string;
                uuid?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                tranRequestDate?: string;
                createdAt?: string;
                updatedAt?: string;
                remittanceId?: string;
            };
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": 1,
         *           "bank": "AL AMANAH ISLAMIC BANK",
         *           "brstn": ""
         *         },
         *         {
         *           "code": 2,
         *           "bank": "ALLIED SAVINGS BANK",
         *           "brstn": ""
         *         },
         *         {
         *           "code": 3,
         *           "bank": "ASIATRUST DEVELOPMENT BANK",
         *           "brstn": ""
         *         },
         *         {
         *           "code": 4,
         *           "bank": "BANCO FILIPINO SMB",
         *           "brstn": ""
         *         }
         *       ]
         *     } */
        RTGSBanksResponse: {
            record?: unknown[];
        };
        /** @example {
         *       "senderRefId": "FUNCTIONALTEST-05",
         *       "tranRequestDate": "2023-06-08T12:11:50.333",
         *       "billerUuid": "38470A84-4D88-1EAC-D68D-7E63F35FBAF1",
         *       "emailAddress": "juandelacruz@email.com",
         *       "mobileNumber": 9123400123,
         *       "amount": 1,
         *       "paymentMethod": "instapay",
         *       "callbackUrl": "https://www.google.com/",
         *       "references": [
         *         {
         *           "index": 1,
         *           "value": "Sample User B"
         *         },
         *         {
         *           "index": 2,
         *           "value": 92385921389412
         *         }
         *       ]
         *     } */
        UPayPaymentRequest: {
            /** @description SenderRefId */
            senderRefId?: string;
            /** @description TranRequestDate */
            tranRequestDate?: string;
            /** @description Biller UuID */
            billerUuid?: string;
            /** @description Email Address */
            emailAddress?: string;
            /** @description Mobile Number */
            mobileNumber?: string;
            /** @description Amount */
            amount?: string;
            /** @description Payment Method. Valid values = "instapay", "paygate", "UB Online". */
            paymentMethod?: string;
            /** @description Callback URL */
            callbackUrl?: string;
            references?: {
                index?: string;
                value?: string;
            }[];
        };
        /** @example {
         *       "code": "SP",
         *       "senderRefId": "FUNCTIONALTEST-06",
         *       "state": "Sent for Processing",
         *       "qr": "00020101021227660012com.p2pqrpay0111UBPHPHMMXXX02089996440304198836302210060340626520460165303608540501.005802PH5912LGUTUGUEUPAY6010TUGUEGARAO6304CE7D",
         *       "transactionId": 8836302210060340000,
         *       "uuid": "a02d79d8-57a5-4130-a4aa-43258ba06cdd"
         *     } */
        UPayPaymentResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            qrCode?: string;
            transactionId?: string;
            uuid?: string;
        };
        /** @example {
         *       "billers": [
         *         {
         *           "billerUuid": "5F3DDD5B-95E3-EAC1-9A16-7E54C84697E9",
         *           "billerCode": 3630,
         *           "billerName": "CITY GOVERNMENT OF TUGUEGARAO",
         *           "accountNumber": 590068489,
         *           "paymentChannels": [
         *             {
         *               "name": "UnionBank Online",
         *               "code": "UB ONLINE",
         *               "isEnabled": true,
         *               "isAvailed": true,
         *               "chargeTo": "Payor",
         *               "settlement": 0,
         *               "fee": 10,
         *               "mdr": 0,
         *               "transactionLimit": 0
         *             },
         *             {
         *               "name": "Instapay",
         *               "code": "INSTAPAY",
         *               "isEnabled": true,
         *               "isAvailed": true,
         *               "chargeTo": "Payor",
         *               "settlement": 0,
         *               "fee": 15,
         *               "mdr": 0,
         *               "transactionLimit": 50000
         *             }
         *           ]
         *         }
         *       ]
         *     } */
        UPayBillerUuidResponse: {
            billers?: unknown[];
        };
        /** @example {
         *       "references": [
         *         {
         *           "billerReferenceId": 881,
         *           "index": 1,
         *           "name": "TRANSACTION NUMBER",
         *           "fieldType": "ALPHANUMERIC",
         *           "validations": {
         *             "minCharLength": 1,
         *             "maxCharLength": 1,
         *             "isMasked": false,
         *             "isRequired": false,
         *             "isVisible": false,
         *             "fieldValidationType": {
         *               "name": "Simple"
         *             }
         *           }
         *         },
         *         {
         *           "billerReferenceId": 882,
         *           "index": 2,
         *           "name": "TIN",
         *           "fieldType": "NUMERIC",
         *           "validations": {
         *             "minCharLength": 9,
         *             "maxCharLength": 9,
         *             "isMasked": false,
         *             "isRequired": true,
         *             "isVisible": true,
         *             "fieldValidationType": {
         *               "name": "Simple"
         *             }
         *           }
         *         }
         *       ]
         *     } */
        UPayBillerUuidReferencesResponse: {
            references?: unknown[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": 148120,
         *           "bank": "Sun Savings Bank",
         *           "brstn": 11140014
         *         },
         *         {
         *           "code": 161207,
         *           "bank": "Sterling Bank Of Asia",
         *           "brstn": 11190019
         *         },
         *         {
         *           "code": 161233,
         *           "bank": "Malayan Bank",
         *           "brstn": 10820018
         *         },
         *         {
         *           "code": 161243,
         *           "bank": "Rcbc Savings Bank Inc.",
         *           "brstn": 11129996
         *         }
         *       ]
         *     } */
        UPayInstapayBankResponse: {
            records?: unknown[];
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": 161203,
         *           "bank": "Bank Of China",
         *           "brstn": 11140014
         *         },
         *         {
         *           "code": 161207,
         *           "bank": "Sterling Bank Of Asia",
         *           "brstn": 11190019
         *         },
         *         {
         *           "code": 161215,
         *           "bank": "Mega Intl Comml Bank Co. Ltd",
         *           "brstn": 10560019
         *         },
         *         {
         *           "code": 161223,
         *           "bank": "China Bank Savings",
         *           "brstn": 11129996
         *         }
         *       ]
         *     } */
        UPayPesonetBankResponse: {
            record?: unknown[];
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Sent for Processing",
         *       "uuid": "a02d79d8-57a5-4130-a4aa-43258ba06cdd",
         *       "data": [
         *         {
         *           "status": "DEBIT_FAILED",
         *           "billerPostStatus": "FAILED",
         *           "amount": 500,
         *           "transactionDateTime": "2022-04-18T05:56:39Z"
         *         },
         *         {
         *           "status": "DEBIT_FAILED",
         *           "billerPostStatus": "FAILED",
         *           "amount": 500,
         *           "transactionDateTime": "2022-04-18T05:57:39Z"
         *         },
         *         {
         *           "status": "DEBIT_FAILED",
         *           "billerPostStatus": "FAILED",
         *           "amount": 500,
         *           "transactionDateTime": "2022-04-18T05:58:39Z"
         *         },
         *         {
         *           "status": "DEBIT_FAILED",
         *           "billerPostStatus": "FAILED",
         *           "amount": 500,
         *           "transactionDateTime": "2022-04-18T05:59:39Z"
         *         }
         *       ]
         *     } */
        UPayBillerUuidStatusResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            data?: {
                status?: string;
                billerPostStatus?: string;
                amount?: string;
                transactionDateTime?: string;
            }[];
        };
        /** @example {
         *       "senderRefId": "UBTEST-0074",
         *       "tranRequestDate": "2021-10-10T12:11:50.333",
         *       "sender": {
         *         "name": "Juan dela Cruz",
         *         "address": {
         *           "line1": "GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipcode": 1900,
         *           "country": 204
         *         }
         *       },
         *       "beneficiary": {
         *         "accountNumber\"": "109594480001",
         *         "name": "Rachelle",
         *         "address": {
         *           "line1": "241 A DEL MUNDO ST BET 5TH 6TH AVE GRACE",
         *           "line2": "PARK CALOOCAN CITY",
         *           "city": "Caloocan",
         *           "province": 142,
         *           "zipcode": 1900,
         *           "country": 204
         *         },
         *         "disbursement": {
         *           "amount": 51,
         *           "currency": "PHP",
         *           "receivingBank": "",
         *           "purpose": "",
         *           "remarks": "remarks",
         *           "particular": "particulars"
         *         }
         *       }
         *     } */
        DisbursementTransferRequest: {
            /** @description senderRefId */
            senderRefId?: string;
            /** @description tranRequestDate */
            tranRequestDate?: string;
            /** @description Sender details */
            sender?: {
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
            };
            /** @description Beneficiary details */
            beneficiary?: {
                accountNumber?: string;
                name?: string;
                address?: {
                    line1?: string;
                    line2?: string;
                    city?: string;
                    province?: string;
                    zipCode?: string;
                    country?: string;
                };
                disbursement?: {
                    amount?: string;
                    currency?: string;
                    receivingBank?: string;
                    purpose?: string;
                    remarks?: string;
                    particulars?: string;
                };
            };
        };
        /** @example {
         *       "code": "TS",
         *       "senderRefId": "TEST1227-16",
         *       "state": "Credited Beneficiary Account",
         *       "uuid": "2d8ba8d1-fa2c-4f7c-b954-77b53167029b",
         *       "description": "Successful transaction",
         *       "type": "DISBURSEMENT_TRANSFER",
         *       "amount": 51,
         *       "ubpTranId": "UB3882",
         *       "tranRequestDate": "2021-10-10T12:11:50.333",
         *       "tranFinacleDate": "2021-10-18"
         *     } */
        DisbursementTransferResponse: {
            code?: string;
            senderRefId?: string;
            state?: string;
            uuid?: string;
            description?: string;
            type?: string;
            amount?: string;
            ubpTranId?: string;
            tranRequestDate?: string;
            tranFinacleDate?: string;
        };
        /** @example {
         *       "record": {
         *         "senderRefId": "INSTAPAY-20",
         *         "code": "TS",
         *         "uuid": "78a537b8-0420-4edf-a04d-2cabd220635c",
         *         "state": "Credited Beneficiary Account",
         *         "description": "Successful transaction",
         *         "type": "DISBURSEMENT_INSTAPAY",
         *         "amount": 50,
         *         "ubpTranId": "UB3632",
         *         "reversalUbpTranId": "null",
         *         "coreRefId": 2301220477276667100,
         *         "traceNo": 843017,
         *         "tranRequestDate": "2018-10-17T18:30:58.000Z",
         *         "tranFinacleDate": "2021-10-30",
         *         "createdAt": "2021-02-02T10:15:19.000Z",
         *         "updatedAt": "2021-02-02T10:15:20.000Z"
         *       }
         *     } */
        DisbursementTransferDetailsResponse: {
            record?: {
                senderRefId?: string;
                code?: string;
                uuid?: string;
                state?: string;
                description?: string;
                type?: string;
                amount?: string;
                ubpTranId?: string;
                reversalUbpTranId?: string;
                coreRefId?: string;
                traceNo?: string;
                tranRequestDate?: string;
                tranFinacleDate?: string;
                createdAt?: string;
                updatedAt?: string;
            };
        };
        /** @example {
         *       "records": [
         *         {
         *           "code": 18548,
         *           "bank": "Bdo Unibank, Inc.",
         *           "brstn": "",
         *           "instapayAvailability": 1,
         *           "pesonetAvailability": 0
         *         },
         *         {
         *           "code": 221905,
         *           "bank": "Bpi Family Bank",
         *           "brstn": "",
         *           "instapayAvailability": 1,
         *           "pesonetAvailability": 0
         *         }
         *       ]
         *     } */
        DisbursementBanksResponse: {
            record?: unknown[];
        };
        /** @example {
         *       "billerCode": 9871,
         *       "storeName": "Sample3",
         *       "cashierCode": "asd",
         *       "amount": 50.1,
         *       "mobileNumber": 9709413939
         *     } */
        QRPHP2MGenerateRequest: {
            /** @description Biller Code */
            billerCode?: string;
            /** @description Store Name */
            storeName?: string;
            /** @description Cashier Code */
            cashierCode?: string;
            /** @description Amount(optional) */
            amount?: string;
            /** @description Mobile Number */
            mobileNumber?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid\"": "84626619-df74-466a-8da3-ae495aef93b8",
         *       "response": "[qrIdentifier:1426,qrString:00020101021228720011ph.ppmi.p2m0111UBPHPHMMXXX030899917910041977987101102303274880503010520460165303608540550.105802PH5911NMB-Sample36007SAMPLE362410012ph.ppmi.qrph0304142605062110000803***80310012ph.ppmi.qrph0103asd0204142688290012ph.ppmi.qrph01099709413936304F404]"
         *     } */
        QRPHP2MGenerateResponse: {
            code?: string;
            state?: string;
            uuid?: string;
            response?: string;
        };
        /** @example {
         *       "code": "TS",
         *       "state": "Successfully processed request",
         *       "uuid": "eff22cbe-be6d-45df-b341-367ebaf2e91d",
         *       "currentPage": 1,
         *       "nextPage": null,
         *       "previousPage": null,
         *       "totalPages": 1,
         *       "totalRecord": 1,
         *       "data": [
         *         {
         *           "id": 161,
         *           "billerId": 2942,
         *           "code": 3853,
         *           "name": "Merchant Acquiring Test Biller",
         *           "storeId": 106,
         *           "branchName": "sampleqrqr",
         *           "cashierCode": "asdasda",
         *           "referenceNo": 12232215595957000,
         *           "grossAmount": 500,
         *           "transactionfee": 0,
         *           "percentageFee": 0,
         *           "amountSettled": 500,
         *           "transactionId": 7738530123221559000,
         *           "paymentMethod": "INSTAPAY P2M",
         *           "status": "PAID",
         *           "settlementStatus": "POSTED",
         *           "ubTranId": "UB17473",
         *           "transactionDate": "2022-11-18T07:59:57Z",
         *           "settlementProcessDate": "2022-11-18T08:00:07Z",
         *           "settledDate": "2022-11-18T08:00:07Z",
         *           "traceNo": 111111,
         *           "senderReferenceNo": "Number",
         *           "merchantType": "NON-MSME"
         *         }
         *       ]
         *     } */
        QRPHP2MReportsResponse: {
            record?: {
                code?: string;
                state?: string;
                uuid?: string;
                currentPage?: string;
                nextPage?: string;
                previousPage?: string;
                totalPages?: string;
                totalRecords?: string;
                data?: unknown[];
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: {
        BillsPaymentRequest: {
            content: {
                "application/json": components["schemas"]["BillsPaymentRequest"];
            };
        };
        DepositRequest: {
            content: {
                "application/json": components["schemas"]["DepositRequest"];
            };
        };
        EONWalletInstapayRequest: {
            content: {
                "application/json": components["schemas"]["EONWalletInstapayRequest"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
